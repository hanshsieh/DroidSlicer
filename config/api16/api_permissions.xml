<?xml version="1.0" ?>
<!--
Auto generated file by org.droidslicer.pscout.PScoutAPIPermToXML
Generated with arguments: -p data/android/api16/pscout/allmappings.txt -o data/android/api16/api_permissions.xml -l data/android/api16/listeners.txt -b data/android/api16/libs/00-rt.jar,data/android/api16/libs/01-android-4.1.2_r1.jar -t -c -i
-->
<api-spec>
	<class-loader name="Primordial">
		<package name="com.android.server.net">
			<class name="NetworkPolicyManagerService">
				<method signature="void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.READ_PHONE_STATE,android.permission.VIBRATE,android.permission.ACCESS_WIFI_STATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="android.net.NetworkPolicy[] getNetworkPolicies()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="android.net.NetworkQuotaInfo getNetworkQuotaInfo(android.net.NetworkState)" static="false" return="track" param1="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean isNetworkMetered(android.net.NetworkState)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.ACCESS_WIFI_STATE"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.READ_PHONE_STATE,android.permission.VIBRATE,android.permission.ACCESS_WIFI_STATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="void setNetworkPolicies(android.net.NetworkPolicy[])" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.VIBRATE,android.permission.ACCESS_WIFI_STATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="void setRestrictBackground(boolean)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.VIBRATE"/>
				<method signature="void systemReady()" static="false" return="" permission="android.permission.READ_PHONE_STATE,android.permission.VIBRATE"/>
			</class>
			<class name="NetworkStatsService">
				<method signature="void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="android.net.NetworkStats getDataLayerSnapshotForUid(int)" static="false" return="track" param1="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="void systemReady()" static="false" return="" permission="android.permission.ACCESS_NETWORK_STATE"/>
			</class>
		</package>
		<package name="com.android.ex.variablespeed">
			<class name="SingleThreadedMediaPlayerProxy">
				<method signature="void prepare()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void seekTo(int)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void start()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="VariableSpeed">
				<method signature="void prepare()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void seekTo(int)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void start()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="MediaPlayerProxy">
				<method signature="void prepare()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void seekTo(int)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void start()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
		</package>
		<package name="com.android.server.pm">
			<class name="ShutdownThread">
				<method signature="void reboot(android.content.Context, java.lang.String, boolean)" static="true" return="" param0="track" param1="track" param2="track" permission="android.permission.MOUNT_UNMOUNT_FILESYSTEMS,android.permission.RECEIVE_BOOT_COMPLETED,android.permission.VIBRATE,android.permission.WAKE_LOCK"/>
				<method signature="void rebootOrShutdown(boolean, java.lang.String)" static="true" return="" param0="track" param1="track" permission="android.permission.VIBRATE,android.permission.WAKE_LOCK"/>
				<method signature="void rebootSafeMode(android.content.Context, boolean)" static="true" return="" param0="track" param1="track" permission="android.permission.MOUNT_UNMOUNT_FILESYSTEMS,android.permission.RECEIVE_BOOT_COMPLETED,android.permission.VIBRATE,android.permission.WAKE_LOCK"/>
				<method signature="void run()" static="false" return="" permission="android.permission.MOUNT_UNMOUNT_FILESYSTEMS,android.permission.RECEIVE_BOOT_COMPLETED,android.permission.VIBRATE,android.permission.WAKE_LOCK"/>
				<method signature="void shutdown(android.content.Context, boolean)" static="true" return="" param0="track" param1="track" permission="android.permission.MOUNT_UNMOUNT_FILESYSTEMS,android.permission.RECEIVE_BOOT_COMPLETED,android.permission.VIBRATE,android.permission.WAKE_LOCK"/>
				<method signature="void shutdownInner(android.content.Context, boolean)" static="true" return="" param0="track" param1="track" permission="android.permission.MOUNT_UNMOUNT_FILESYSTEMS,android.permission.RECEIVE_BOOT_COMPLETED,android.permission.VIBRATE,android.permission.WAKE_LOCK"/>
			</class>
			<class name="PackageManagerService">
				<method signature="void &lt;init&gt;(android.content.Context, boolean, boolean)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void addPackageToPreferred(java.lang.String)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="boolean addPermission(android.content.pm.PermissionInfo)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="boolean addPermissionAsync(android.content.pm.PermissionInfo)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void addPreferredActivity(android.content.IntentFilter, int, android.content.ComponentName[], android.content.ComponentName)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[])" static="false" return="track" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="int checkPermission(java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="int checkSignatures(java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="int checkUidPermission(java.lang.String, int)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="int checkUidSignatures(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void clearApplicationUserData(java.lang.String, android.content.pm.IPackageDataObserver, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void clearPackagePreferredActivities(java.lang.String)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="android.content.pm.UserInfo createUser(java.lang.String, int)" static="false" return="track" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="java.lang.String[] currentToCanonicalPackageNames(java.lang.String[])" static="false" return="track" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void deleteApplicationCacheFiles(java.lang.String, android.content.pm.IPackageDataObserver)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void deletePackage(java.lang.String, android.content.pm.IPackageDeleteObserver, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void enterSafeMode()" static="false" return="" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void finishPackageInstall(int)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void freeStorage(long, android.content.IntentSender)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.CLEAR_APP_CACHE,android.permission.WAKE_LOCK"/>
				<method signature="void freeStorageAndNotify(long, android.content.pm.IPackageDataObserver)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.CLEAR_APP_CACHE,android.permission.WAKE_LOCK"/>
				<method signature="android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName, int, int)" static="false" return="track" param1="track" param2="track" param3="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="java.util.List getAllPermissionGroups(int)" static="false" return="track" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="int getApplicationEnabledSetting(java.lang.String, int)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String, int, int)" static="false" return="track" param1="track" param2="track" param3="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="int getComponentEnabledSetting(android.content.ComponentName, int)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="int getInstallLocation()" static="false" return="" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="android.content.pm.ParceledListSlice getInstalledApplications(int, java.lang.String, int)" static="false" return="track" param1="track" param2="track" param3="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="android.content.pm.ParceledListSlice getInstalledPackages(int, java.lang.String)" static="false" return="track" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="java.lang.String getInstallerPackageName(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName, int)" static="false" return="track" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="java.lang.String getNameForUid(int)" static="false" return="track" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="int[] getPackageGids(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.READ_EXTERNAL_STORAGE,android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="android.content.pm.PackageInfo getPackageInfo(java.lang.String, int, int)" static="false" return="track" param1="track" param2="track" param3="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void getPackageSizeInfo(java.lang.String, android.content.pm.IPackageStatsObserver)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.GET_PACKAGE_SIZE,android.permission.WAKE_LOCK"/>
				<method signature="int getPackageUid(java.lang.String, int)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="java.lang.String[] getPackagesForUid(int)" static="false" return="track" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String, int)" static="false" return="track" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="android.content.pm.PermissionInfo getPermissionInfo(java.lang.String, int)" static="false" return="track" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="java.util.List getPersistentApplications(int)" static="false" return="track" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="int getPreferredActivities(java.util.List, java.util.List, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="java.util.List getPreferredPackages(int)" static="false" return="track" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName, int, int)" static="false" return="track" param1="track" param2="track" param3="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName, int, int)" static="false" return="track" param1="track" param2="track" param3="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName, int, int)" static="false" return="track" param1="track" param2="track" param3="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="android.content.pm.FeatureInfo[] getSystemAvailableFeatures()" static="false" return="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="java.lang.String[] getSystemSharedLibraryNames()" static="false" return="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="int getUidForSharedUser(java.lang.String)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="android.content.pm.UserInfo getUser(int)" static="false" return="track" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="java.util.List getUsers()" static="false" return="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentity()" static="false" return="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void grantPermission(java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="boolean hasSystemFeature(java.lang.String)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="boolean hasSystemUidErrors()" static="false" return="" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void installPackage(android.net.Uri, android.content.pm.IPackageInstallObserver, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void installPackage(android.net.Uri, android.content.pm.IPackageInstallObserver, int, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void installPackageWithVerification(android.net.Uri, android.content.pm.IPackageInstallObserver, int, java.lang.String, android.net.Uri, android.content.pm.ManifestDigest, android.content.pm.ContainerEncryptionParams)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" param7="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="boolean isFirstBoot()" static="false" return="" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="boolean isPermissionEnforced(java.lang.String)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="boolean isProtectedBroadcast(java.lang.String)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="boolean isSafeMode()" static="false" return="" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="boolean isStorageLow()" static="false" return="" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="android.content.pm.IPackageManager main(android.content.Context, boolean, boolean)" static="true" return="track" param0="track" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void movePackage(java.lang.String, android.content.pm.IPackageMoveObserver, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="java.lang.String nextPackageToClean(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.READ_EXTERNAL_STORAGE,android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS,android.permission.CLEAR_APP_CACHE,android.permission.GET_PACKAGE_SIZE,android.permission.WAKE_LOCK"/>
				<method signature="void performBootDexOpt()" static="false" return="" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="boolean performDexOpt(java.lang.String)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="java.util.List queryContentProviders(java.lang.String, int, int)" static="false" return="track" param1="track" param2="track" param3="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="java.util.List queryInstrumentation(java.lang.String, int)" static="false" return="track" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="java.util.List queryIntentActivities(android.content.Intent, java.lang.String, int, int)" static="false" return="track" param1="track" param2="track" param3="track" param4="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="java.util.List queryIntentActivityOptions(android.content.ComponentName, android.content.Intent[], java.lang.String[], android.content.Intent, java.lang.String, int, int)" static="false" return="track" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" param7="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="java.util.List queryIntentReceivers(android.content.Intent, java.lang.String, int, int)" static="false" return="track" param1="track" param2="track" param3="track" param4="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="java.util.List queryIntentServices(android.content.Intent, java.lang.String, int, int)" static="false" return="track" param1="track" param2="track" param3="track" param4="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="java.util.List queryPermissionsByGroup(java.lang.String, int)" static="false" return="track" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void querySyncProviders(java.util.List, java.util.List)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void removePackageFromPreferred(java.lang.String)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void removePermission(java.lang.String)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="boolean removeUser(int)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void replacePreferredActivity(android.content.IntentFilter, int, android.content.ComponentName[], android.content.ComponentName)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="android.content.pm.ProviderInfo resolveContentProvider(java.lang.String, int, int)" static="false" return="track" param1="track" param2="track" param3="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="android.content.pm.ResolveInfo resolveIntent(android.content.Intent, java.lang.String, int, int)" static="false" return="track" param1="track" param2="track" param3="track" param4="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="android.content.pm.ResolveInfo resolveService(android.content.Intent, java.lang.String, int, int)" static="false" return="track" param1="track" param2="track" param3="track" param4="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void revokePermission(java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void scanAvailableAsecs()" static="false" return="" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void setApplicationEnabledSetting(java.lang.String, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void setComponentEnabledSetting(android.content.ComponentName, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="boolean setInstallLocation(int)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS,android.permission.WAKE_LOCK"/>
				<method signature="void setInstallerPackageName(java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void setPackageStoppedState(java.lang.String, boolean, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void setPermissionEnforced(java.lang.String, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void systemReady()" static="false" return="" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void updateExternalMediaStatus(boolean, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void updateUserName(int, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void verifyPendingInstall(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
			</class>
		</package>
		<package name="com.android.server.usb">
			<class name="UsbService">
				<method signature="void &lt;init&gt;(android.content.Context)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY,android.permission.VIBRATE"/>
				<method signature="void clearDefaults(java.lang.String)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS,android.permission.VIBRATE,android.permission.BROADCAST_STICKY"/>
				<method signature="void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS,android.permission.VIBRATE,android.permission.BROADCAST_STICKY"/>
				<method signature="android.hardware.usb.UsbAccessory getCurrentAccessory()" static="false" return="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS,android.permission.VIBRATE,android.permission.BROADCAST_STICKY"/>
				<method signature="void getDeviceList(android.os.Bundle)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS,android.permission.VIBRATE,android.permission.BROADCAST_STICKY"/>
				<method signature="void grantAccessoryPermission(android.hardware.usb.UsbAccessory, int)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS,android.permission.VIBRATE,android.permission.BROADCAST_STICKY"/>
				<method signature="void grantDevicePermission(android.hardware.usb.UsbDevice, int)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS,android.permission.VIBRATE,android.permission.BROADCAST_STICKY"/>
				<method signature="boolean hasAccessoryPermission(android.hardware.usb.UsbAccessory)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS,android.permission.VIBRATE,android.permission.BROADCAST_STICKY"/>
				<method signature="boolean hasDefaults(java.lang.String)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS,android.permission.VIBRATE,android.permission.BROADCAST_STICKY"/>
				<method signature="boolean hasDevicePermission(android.hardware.usb.UsbDevice)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS,android.permission.VIBRATE,android.permission.BROADCAST_STICKY"/>
				<method signature="android.os.ParcelFileDescriptor openAccessory(android.hardware.usb.UsbAccessory)" static="false" return="track" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS,android.permission.VIBRATE,android.permission.BROADCAST_STICKY"/>
				<method signature="android.os.ParcelFileDescriptor openDevice(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS,android.permission.VIBRATE,android.permission.BROADCAST_STICKY"/>
				<method signature="void requestAccessoryPermission(android.hardware.usb.UsbAccessory, java.lang.String, android.app.PendingIntent)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS,android.permission.VIBRATE,android.permission.BROADCAST_STICKY"/>
				<method signature="void requestDevicePermission(android.hardware.usb.UsbDevice, java.lang.String, android.app.PendingIntent)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS,android.permission.VIBRATE,android.permission.BROADCAST_STICKY"/>
				<method signature="void setAccessoryPackage(android.hardware.usb.UsbAccessory, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS,android.permission.VIBRATE,android.permission.BROADCAST_STICKY"/>
				<method signature="void setCurrentFunction(java.lang.String, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS,android.permission.VIBRATE,android.permission.BROADCAST_STICKY"/>
				<method signature="void setDevicePackage(android.hardware.usb.UsbDevice, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS,android.permission.VIBRATE,android.permission.BROADCAST_STICKY"/>
				<method signature="void setMassStorageBackingFile(java.lang.String)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS,android.permission.VIBRATE,android.permission.BROADCAST_STICKY"/>
				<method signature="void systemReady()" static="false" return="" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY,android.permission.VIBRATE"/>
			</class>
			<class name="UsbDeviceManager">
				<method signature="void &lt;init&gt;(android.content.Context, com.android.server.usb.UsbSettingsManager)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY,android.permission.VIBRATE"/>
				<method signature="void dump(java.io.FileDescriptor, java.io.PrintWriter)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS,android.permission.VIBRATE,android.permission.BROADCAST_STICKY"/>
				<method signature="android.hardware.usb.UsbAccessory getCurrentAccessory()" static="false" return="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS,android.permission.VIBRATE,android.permission.BROADCAST_STICKY"/>
				<method signature="android.os.ParcelFileDescriptor openAccessory(android.hardware.usb.UsbAccessory)" static="false" return="track" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS,android.permission.VIBRATE,android.permission.BROADCAST_STICKY"/>
				<method signature="void setCurrentFunctions(java.lang.String, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS,android.permission.VIBRATE,android.permission.BROADCAST_STICKY"/>
				<method signature="void setMassStorageBackingFile(java.lang.String)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS,android.permission.VIBRATE,android.permission.BROADCAST_STICKY"/>
				<method signature="void systemReady()" static="false" return="" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY,android.permission.VIBRATE"/>
			</class>
			<class name="UsbSettingsManager$MyPackageMonitor">
				<method signature="boolean onHandleForceStop(android.content.Intent, java.lang.String[], int, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void onReceive(android.content.Context, android.content.Intent)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void onSomePackagesChanged()" static="false" return="" permission="android.permission.WRITE_SETTINGS"/>
			</class>
		</package>
		<package name="com.android.common.contacts">
			<class name="DataUsageStatUpdater">
				<method signature="boolean updateWithAddress(java.util.Collection)" static="false" return="" param1="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="boolean updateWithPhoneNumber(java.util.Collection)" static="false" return="" param1="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="boolean updateWithRfc822Address(java.util.Collection)" static="false" return="" param1="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="BaseEmailAddressAdapter">
				<method signature="android.view.View getView(int, android.database.Cursor, int, android.view.View, android.view.ViewGroup)" static="false" return="track" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="android.view.View getView(int, android.view.View, android.view.ViewGroup)" static="false" return="track" param1="track" param2="track" param3="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
		</package>
		<package name="java.util.logging">
			<class name="LogManager">
				<method signature="void addPropertyChangeListener(java.beans.PropertyChangeListener)" static="false" param1="listener" permission=""/>
			</class>
		</package>
		<package name="javax.sql">
			<class name="PooledConnection">
				<method signature="void addConnectionEventListener(javax.sql.ConnectionEventListener)" static="false" param1="listener" permission=""/>
				<method signature="void addStatementEventListener(javax.sql.StatementEventListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="RowSet">
				<method signature="void addRowSetListener(javax.sql.RowSetListener)" static="false" param1="listener" permission=""/>
			</class>
		</package>
		<package name="com.android.emailcommon.utility">
			<class name="AttachmentUtilities">
				<method signature="void saveAttachment(android.content.Context, java.io.InputStream, com.android.emailcommon.provider.EmailContent$Attachment)" static="true" return="" param0="track" param1="track" param2="track" permission="android.permission.WRITE_EXTERNAL_STORAGE,android.permission.INTERNET,android.permission.VIBRATE"/>
			</class>
			<class name="EmailAsyncTask$1">
				<method signature="java.lang.Object callDoInBackgroundForTest(java.lang.Object[])" static="false" return="track" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.VIBRATE,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="void callOnCancelledForTest(java.lang.Object)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="void callOnPostExecuteForTest(java.lang.Object)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.READ_SYNC_SETTINGS,android.permission.VIBRATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="void onCancelled(java.lang.Object)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="void onSuccess(java.lang.Object)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.READ_SYNC_SETTINGS,android.permission.VIBRATE,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="Utility$ForEachAccount">
				<method signature="void onPostExecute(java.lang.Object)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.READ_SYNC_SETTINGS,android.permission.VIBRATE"/>
				<method signature="void onPostExecute(java.lang.Long[])" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.READ_SYNC_SETTINGS,android.permission.VIBRATE"/>
				<method signature="void performAction(long)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.READ_SYNC_SETTINGS,android.permission.VIBRATE"/>
			</class>
			<class name="EmailAsyncTask">
				<method signature="java.lang.Object callDoInBackgroundForTest(java.lang.Object[])" static="false" return="track" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.VIBRATE,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="void callOnCancelledForTest(java.lang.Object)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="void callOnPostExecuteForTest(java.lang.Object)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.READ_SYNC_SETTINGS,android.permission.VIBRATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="java.lang.Object doInBackground(java.lang.Object[])" static="false" return="track" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.VIBRATE,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="void onCancelled(java.lang.Object)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="void onSuccess(java.lang.Object)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.READ_SYNC_SETTINGS,android.permission.VIBRATE,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
		</package>
		<package name="com.android.internal.telephony.cdma">
			<class name="CDMALTEPhone">
				<method signature="void &lt;init&gt;(android.content.Context, com.android.internal.telephony.CommandsInterface, com.android.internal.telephony.PhoneNotifier)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void &lt;init&gt;(android.content.Context, com.android.internal.telephony.CommandsInterface, com.android.internal.telephony.PhoneNotifier, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void &lt;init&gt;(com.android.internal.telephony.PhoneNotifier, android.content.Context, com.android.internal.telephony.CommandsInterface)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void &lt;init&gt;(com.android.internal.telephony.PhoneNotifier, android.content.Context, com.android.internal.telephony.CommandsInterface, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void acceptCall()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="com.android.internal.telephony.Connection dial(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void disableLocationUpdates()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void dispose()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void enableEnhancedVoicePrivacy(boolean, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void enableLocationUpdates()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void exitEmergencyCallbackMode()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void finalize()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getAvailableNetworks(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void getCallWaiting(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getDataCallList(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="com.android.internal.telephony.Phone$DataState getDataConnectionState(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getDeviceSvn()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void getEnhancedVoicePrivacy(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="java.lang.String getImei()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.ims.IsimRecords getIsimRecords()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getMsisdn()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void getPreferredNetworkType(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getSmscAddress(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="java.lang.String getSubscriberId()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void handleMessage(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean handlePinMmi(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void init(android.content.Context, com.android.internal.telephony.PhoneNotifier)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void initSstIcc()" static="false" return="" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void invokeOemRilRequestRaw(byte[], android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void invokeOemRilRequestStrings(java.lang.String[], android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyDataConnection(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void notifyDataConnection(java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void notifyDataConnection(java.lang.String, java.lang.String, com.android.internal.telephony.Phone$DataState)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void notifyDataConnectionFailed(java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void notifyServiceStateChanged(android.telephony.ServiceState)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void notifyServiceStateChangedP(android.telephony.ServiceState)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void notifySignalStrength()" static="false" return="" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void queryAvailableBandMode(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void queryCdmaRoamingPreference(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void queryTTYMode(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void rejectCall()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void removeReferences()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void requestIsimAuthentication(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void restoreSavedNetworkSelection(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void selectNetworkManually(com.android.internal.telephony.OperatorInfo, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void sendBurstDtmf(java.lang.String, int, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void sendDtmf(char)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void sendEmergencyCallbackModeChange()" static="false" return="" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void setBandMode(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setCdmaRoamingPreference(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setCdmaSubscription(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setDataRoamingEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void setMute(boolean)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setPreferredNetworkType(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setSmscAddress(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setTTYMode(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setVoiceMessageWaiting(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void startDtmf(char)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void stopDtmf()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void switchHoldingAndActive()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="boolean updateCurrentCarrierInProvider()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean updateCurrentCarrierInProvider(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.SET_TIME_ZONE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void updateServiceLocation()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="CdmaMmiCode">
				<method signature="void processCode()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="CdmaLteServiceStateTracker">
				<method signature="void &lt;init&gt;(com.android.internal.telephony.cdma.CDMALTEPhone)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void &lt;init&gt;(com.android.internal.telephony.cdma.CDMAPhone)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void disableLocationUpdates()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void disableSingleLocationUpdate()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void enableLocationUpdates()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void enableSingleLocationUpdate()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fixTimeZone(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE"/>
				<method signature="void handleMessage(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void handlePollStateResult(int, android.os.AsyncResult)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE"/>
				<method signature="void hangupAndPowerOff()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="boolean isConcurrentVoiceAndDataAllowed()" static="false" return="" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void onSignalStrengthResult(android.os.AsyncResult)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void pollState()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK"/>
				<method signature="void pollStateDone()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE"/>
				<method signature="void powerOffRadioSafely(com.android.internal.telephony.DataConnectionTracker)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="boolean processPendingRadioPowerOffAfterDataOff()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void reRegisterNetwork(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setPowerStateToDesired()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setRadioPower(boolean)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void updateSpnDisplay()" static="false" return="" permission="android.permission.BROADCAST_STICKY"/>
			</class>
			<class name="CdmaCall">
				<method signature="void hangup()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void hangupIfAlive()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="RuimFileHandler">
				<method signature="void getEFLinearRecordSize(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void loadEFImgLinearFixed(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void loadEFImgTransparent(int, int, int, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void loadEFLinearFixed(int, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void loadEFLinearFixedAll(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void loadEFTransparent(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void updateEFLinearFixed(int, int, byte[], java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void updateEFTransparent(int, byte[], android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="CdmaServiceStateTracker">
				<method signature="void &lt;init&gt;(com.android.internal.telephony.cdma.CDMAPhone)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void disableLocationUpdates()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void disableSingleLocationUpdate()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void dispose()" static="false" return="" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void enableLocationUpdates()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void enableSingleLocationUpdate()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fixTimeZone(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE"/>
				<method signature="java.lang.String getCdmaMin()" static="false" return="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="int getCurrentDataConnectionState()" static="false" return="" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="java.lang.String getMdnNumber()" static="false" return="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="java.lang.String getPrlVersion()" static="false" return="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void handleMessage(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void handlePollStateResult(int, android.os.AsyncResult)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE"/>
				<method signature="void hangupAndPowerOff()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="boolean isConcurrentVoiceAndDataAllowed()" static="false" return="" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="boolean isMinInfoReady()" static="false" return="" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void onSignalStrengthResult(android.os.AsyncResult)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void pollState()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK"/>
				<method signature="void pollStateDone()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE"/>
				<method signature="void powerOffRadioSafely(com.android.internal.telephony.DataConnectionTracker)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="boolean processPendingRadioPowerOffAfterDataOff()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void reRegisterNetwork(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void registerForSubscriptionInfoReady(android.os.Handler, int, java.lang.Object)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void setPowerStateToDesired()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setRadioPower(boolean)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void unregisterForSubscriptionInfoReady(android.os.Handler)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void updateSpnDisplay()" static="false" return="" permission="android.permission.BROADCAST_STICKY"/>
			</class>
			<class name="CdmaDataConnectionTracker">
				<method signature="void &lt;init&gt;(com.android.internal.telephony.PhoneBase)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="void &lt;init&gt;(com.android.internal.telephony.cdma.CDMAPhone)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="void dispose()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="com.android.internal.telephony.DataConnectionTracker$State getState(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="void gotoIdleAndNotifyDataConnection(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void handleMessage(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="boolean isDisconnected()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="void notifyDataConnection(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void notifyOffApnsOfAvailability(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onActionIntentReconnectAlarm(android.content.Intent)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onCleanUpAllConnections(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onCleanUpConnection(boolean, int, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onDataSetupComplete(android.os.AsyncResult)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onDataStallAlarm(int)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK"/>
				<method signature="void onDataStateChanged(android.os.AsyncResult)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onDisconnectDone(int, android.os.AsyncResult)" static="false" return="" param1="track" param2="track" permission="android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK"/>
				<method signature="void onEnableApn(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onEnableNewApn()" static="false" return="" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onRadioAvailable()" static="false" return="" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onResetDone(android.os.AsyncResult)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onRoamingOff()" static="false" return="" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onRoamingOn()" static="false" return="" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onSetDependencyMet(java.lang.String, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onSetInternalDataEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onSetPolicyDataEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onSetUserDataEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="boolean onTrySetupData(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onVoiceCallEnded()" static="false" return="" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onVoiceCallStarted()" static="false" return="" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void restartRadio()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setDataOnRoamingEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="RuimPhoneBookInterfaceManager">
				<method signature="java.util.List getAdnRecordsInEf(int)" static="false" return="track" param1="track" permission="android.permission.READ_CONTACTS,android.permission.WAKE_LOCK"/>
				<method signature="int[] getAdnRecordsSize(int)" static="false" return="track" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.WAKE_LOCK"/>
				<method signature="boolean updateAdnRecordsInEfByIndex(int, java.lang.String, java.lang.String, int, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.WRITE_CONTACTS,android.permission.WAKE_LOCK"/>
				<method signature="boolean updateAdnRecordsInEfBySearch(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.WRITE_CONTACTS,android.permission.WAKE_LOCK"/>
			</class>
			<class name="RuimSmsInterfaceManager">
				<method signature="boolean copyMessageToIccEf(int, byte[], byte[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
				<method signature="void enforceReceiveAndSend(java.lang.String)" static="false" return="" param1="track" permission="android.permission.SEND_SMS,android.permission.RECEIVE_SMS"/>
				<method signature="java.util.List getAllMessagesFromIccEf()" static="false" return="track" permission="android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
				<method signature="void sendData(java.lang.String, java.lang.String, int, byte[], android.app.PendingIntent, android.app.PendingIntent)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.SEND_SMS"/>
				<method signature="void sendMultipartText(java.lang.String, java.lang.String, java.util.List, java.util.List, java.util.List)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.SEND_SMS"/>
				<method signature="void sendText(java.lang.String, java.lang.String, java.lang.String, android.app.PendingIntent, android.app.PendingIntent)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.SEND_SMS"/>
				<method signature="boolean updateMessageOnIccEf(int, int, byte[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
			</class>
			<class name="CdmaLteUiccFileHandler">
				<method signature="void getEFLinearRecordSize(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void loadEFImgLinearFixed(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void loadEFImgTransparent(int, int, int, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void loadEFLinearFixed(int, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void loadEFLinearFixedAll(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void loadEFTransparent(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void updateEFLinearFixed(int, int, byte[], java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void updateEFTransparent(int, byte[], android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="CdmaLteUiccRecords">
				<method signature="void fetchSimRecords()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void onAllRecordsLoaded()" static="false" return="" permission="android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void onReady()" static="false" return="" permission="android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK"/>
				<method signature="void onRecordLoaded()" static="false" return="" permission="android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void onRefresh(boolean, int[])" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setMsisdnNumber(java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setVoiceCallForwardingFlag(int, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setVoiceMailNumber(java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setVoiceMessageWaiting(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="CdmaConnection">
				<method signature="void &lt;init&gt;(android.content.Context, com.android.internal.telephony.DriverCall, com.android.internal.telephony.cdma.CdmaCallTracker, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void &lt;init&gt;(android.content.Context, com.android.internal.telephony.cdma.CdmaCallWaitingNotification, com.android.internal.telephony.cdma.CdmaCallTracker, com.android.internal.telephony.cdma.CdmaCall)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void &lt;init&gt;(android.content.Context, java.lang.String, com.android.internal.telephony.cdma.CdmaCallTracker, com.android.internal.telephony.cdma.CdmaCall)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void cancelPostDial()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void dispose()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void finalize()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="java.lang.String getAddress()" static="false" return="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="com.android.internal.telephony.Call getCall()" static="false" return="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="com.android.internal.telephony.cdma.CdmaCall getCall()" static="false" return="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="java.lang.String getCnapName()" static="false" return="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="int getCnapNamePresentation()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="long getConnectTime()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="long getCreateTime()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="com.android.internal.telephony.Connection$DisconnectCause getDisconnectCause()" static="false" return="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="long getDisconnectTime()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="long getDurationMillis()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="long getHoldDurationMillis()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="int getNumberPresentation()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="java.lang.String getOrigDialString()" static="false" return="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="com.android.internal.telephony.Connection$PostDialState getPostDialState()" static="false" return="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="java.lang.String getRemainingPostDialString()" static="false" return="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="com.android.internal.telephony.Call$State getState()" static="false" return="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="com.android.internal.telephony.UUSInfo getUUSInfo()" static="false" return="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void hangup()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="boolean isIncoming()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void onConnectedInOrOut()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void onDisconnect(com.android.internal.telephony.Connection$DisconnectCause)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void onLocalDisconnect()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void onRemoteDisconnect(int)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void proceedAfterWaitChar()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void proceedAfterWildChar(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void processNextPostDialChar()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void separate()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="boolean update(com.android.internal.telephony.DriverCall)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void updateParent(com.android.internal.telephony.cdma.CdmaCall, com.android.internal.telephony.cdma.CdmaCall)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="CdmaCallTracker">
				<method signature="void acceptCall()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void conference()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="com.android.internal.telephony.Connection dial(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="com.android.internal.telephony.Connection dial(java.lang.String, int)" static="false" return="track" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void dispose()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void explicitCallTransfer()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void handlePollCalls(android.os.AsyncResult)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void handleRadioAvailable()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void hangup(com.android.internal.telephony.cdma.CdmaCall)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void hangup(com.android.internal.telephony.cdma.CdmaConnection)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void hangupAllConnections(com.android.internal.telephony.cdma.CdmaCall)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void hangupConnectionByIndex(com.android.internal.telephony.cdma.CdmaCall, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void hangupForegroundResumeBackground()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void hangupWaitingOrBackground()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void pollCallsWhenSafe()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void rejectCall()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void separate(com.android.internal.telephony.cdma.CdmaConnection)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setMute(boolean)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void switchWaitingOrHoldingAndActive()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="CdmaSMSDispatcher">
				<method signature="void dispatch(android.content.Intent, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void dispatch(android.content.Intent, java.lang.String, android.content.BroadcastReceiver)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void dispatchBroadcastMessage(android.telephony.SmsCbMessage)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="int dispatchNormalMessage(com.android.internal.telephony.SmsMessageBase)" static="false" return="" param1="track" permission="android.permission.READ_SMS,android.permission.SEND_SMS,android.permission.WRITE_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.WAKE_LOCK"/>
				<method signature="void dispatchPdus(byte[][])" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void dispatchPortAddressedPdus(byte[][], int)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="int processMessagePart(byte[], java.lang.String, int, int, int, long, int, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" param7="track" param8="track" permission="android.permission.READ_SMS,android.permission.SEND_SMS,android.permission.WRITE_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.WAKE_LOCK"/>
				<method signature="void sendRawPdu(byte[], byte[], android.app.PendingIntent, android.app.PendingIntent, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="CDMAPhone">
				<method signature="void &lt;init&gt;(android.content.Context, com.android.internal.telephony.CommandsInterface, com.android.internal.telephony.PhoneNotifier)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void &lt;init&gt;(android.content.Context, com.android.internal.telephony.CommandsInterface, com.android.internal.telephony.PhoneNotifier, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void &lt;init&gt;(com.android.internal.telephony.PhoneNotifier, android.content.Context, com.android.internal.telephony.CommandsInterface)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void &lt;init&gt;(com.android.internal.telephony.PhoneNotifier, android.content.Context, com.android.internal.telephony.CommandsInterface, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void acceptCall()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void activateCellBroadcastSms(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean canConference()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean canTransfer()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void clearDisconnected()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void conference()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.Connection dial(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.Connection dial(java.lang.String, com.android.internal.telephony.UUSInfo)" static="false" return="track" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void disableLocationUpdates()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void dispose()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void enableEnhancedVoicePrivacy(boolean, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void enableLocationUpdates()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void exitEmergencyCallbackMode()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void explicitCallTransfer()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void finalize()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getAvailableNetworks(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.Call getBackgroundCall()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.cdma.CdmaCall getBackgroundCall()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean getCallForwardingIndicator()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void getCallForwardingOption(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.CallTracker getCallTracker()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void getCallWaiting(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="int getCdmaEriIconIndex()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="int getCdmaEriIconMode()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getCdmaEriText()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getCdmaMin()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getCdmaPrlVersion()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void getCellBroadcastSmsConfig(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="android.telephony.CellLocation getCellLocation()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.Phone$DataActivityState getDataActivityState()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void getDataCallList(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.Phone$DataState getDataConnectionState(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean getDataRoamingEnabled()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getDeviceId()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getDeviceSvn()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void getEnhancedVoicePrivacy(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getEsn()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.Call getForegroundCall()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.cdma.CdmaCall getForegroundCall()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.IccPhoneBookInterfaceManager getIccPhoneBookInterfaceManager()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getImei()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getLine1AlphaTag()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getLine1Number()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getMeid()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean getMessageWaitingIndicator()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean getMute()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void getNeighboringCids(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void getOutgoingCallerIdDisplay(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.util.List getPendingMmiCodes()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getPhoneName()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.PhoneSubInfo getPhoneSubInfo()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="int getPhoneType()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void getPreferredNetworkType(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="com.android.internal.telephony.Call getRingingCall()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.cdma.CdmaCall getRingingCall()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="android.telephony.ServiceState getServiceState()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.ServiceStateTracker getServiceStateTracker()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="android.telephony.SignalStrength getSignalStrength()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void getSmscAddress(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="com.android.internal.telephony.Phone$State getState()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getSubscriberId()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getVoiceMailAlphaTag()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getVoiceMailNumber()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="int getVoiceMessageCount()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean handleInCallMmiCommands(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void handleMessage(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean handlePinMmi(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void init(android.content.Context, com.android.internal.telephony.PhoneNotifier)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void initSstIcc()" static="false" return="" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void invokeOemRilRequestRaw(byte[], android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void invokeOemRilRequestStrings(java.lang.String[], android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="boolean isEriFileLoaded()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean isInEcm()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean isInEmergencyCall()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean isMinInfoReady()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean isOtaSpNumber(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean needsOtaServiceProvisioning()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void notifyDataConnection(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void notifyDataConnection(java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void notifyDataConnection(java.lang.String, java.lang.String, com.android.internal.telephony.Phone$DataState)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void notifyDataConnectionFailed(java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void notifyServiceStateChanged(android.telephony.ServiceState)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void notifyServiceStateChangedP(android.telephony.ServiceState)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void notifySignalStrength()" static="false" return="" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void prepareEri()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void queryAvailableBandMode(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void queryCdmaRoamingPreference(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void queryTTYMode(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void registerForCallWaiting(android.os.Handler, int, java.lang.Object)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void registerForCdmaOtaStatusChange(android.os.Handler, int, java.lang.Object)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void registerForEcmTimerReset(android.os.Handler, int, java.lang.Object)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void registerForEriFileLoaded(android.os.Handler, int, java.lang.Object)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void registerForSubscriptionInfoReady(android.os.Handler, int, java.lang.Object)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void registerForSuppServiceNotification(android.os.Handler, int, java.lang.Object)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void rejectCall()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void removeReferences()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void requestIsimAuthentication(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void restoreSavedNetworkSelection(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void selectNetworkManually(com.android.internal.telephony.OperatorInfo, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void sendBurstDtmf(java.lang.String, int, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void sendDtmf(char)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void sendEmergencyCallbackModeChange()" static="false" return="" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void sendUssdResponse(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setBandMode(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setCallForwardingOption(int, int, java.lang.String, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setCallWaiting(boolean, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setCdmaRoamingPreference(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setCdmaSubscription(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setCellBroadcastSmsConfig(int[], android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setDataRoamingEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setLine1Number(java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setMute(boolean)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setNetworkSelectionModeAutomatic(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setOnEcbModeExitResponse(android.os.Handler, int, java.lang.Object)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setOnPostDialCharacter(android.os.Handler, int, java.lang.Object)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setOutgoingCallerIdDisplay(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setPreferredNetworkType(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setRadioPower(boolean)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setSmscAddress(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setSystemProperty(java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setTTYMode(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setVoiceMailNumber(java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setVoiceMessageWaiting(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void startDtmf(char)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void stopDtmf()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void switchHoldingAndActive()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void unregisterForCallWaiting(android.os.Handler)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void unregisterForCdmaOtaStatusChange(android.os.Handler)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void unregisterForEcmTimerReset(android.os.Handler)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void unregisterForEriFileLoaded(android.os.Handler)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void unregisterForSubscriptionInfoReady(android.os.Handler)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void unregisterForSuppServiceNotification(android.os.Handler)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void unsetOnEcbModeExitResponse(android.os.Handler)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean updateCurrentCarrierInProvider(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.SET_TIME_ZONE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void updateServiceLocation()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
			</class>
			<class name="CdmaDataConnection">
				<method signature="void onConnect(com.android.internal.telephony.DataConnection$ConnectionParams)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="RuimRecords">
				<method signature="void onAllRecordsLoaded()" static="false" return="" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onReady()" static="false" return="" permission="android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK"/>
				<method signature="void onRecordLoaded()" static="false" return="" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onRefresh(boolean, int[])" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setMsisdnNumber(java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setVoiceCallForwardingFlag(int, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
			</class>
		</package>
		<package name="android.webkit">
			<class name="WebViewCore">
				<method signature="void &lt;init&gt;(android.content.Context, android.webkit.WebViewClassic, android.webkit.CallbackProxy, java.util.Map)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.INTERNET"/>
				<method signature="android.webkit.WebViewInputDispatcher$WebKitCallbacks getInputDispatcherCallbacks()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="android.webkit.WebSettingsClassic getSettings()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="void sendMessage(android.os.Message)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setMockDeviceOrientation(boolean, double, boolean, double, boolean, double)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.INTERNET"/>
			</class>
			<class name="WebViewProvider">
				<method signature="void clearView()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void init(java.util.Map, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.INTERNET"/>
				<method signature="void saveWebArchive(java.lang.String, boolean, android.webkit.ValueCallback)" static="false" param1="" param2="" param3="listener" permission=""/>
				<method signature="void setDownloadListener(android.webkit.DownloadListener)" static="false" param1="listener" permission=""/>
				<method signature="void setFindListener(android.webkit.WebView$FindListener)" static="false" param1="listener" permission=""/>
				<method signature="void setPictureListener(android.webkit.WebView$PictureListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="SearchBox">
				<method signature="void isSupported(android.webkit.SearchBox$IsSupportedCallback)" static="false" param1="listener" permission=""/>
			</class>
			<class name="WebViewClassic">
				<method signature="void clearView()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void init(java.util.Map, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.INTERNET"/>
				<method signature="void onDraw(android.graphics.Canvas)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="boolean onKeyDown(int, android.view.KeyEvent)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void onPause()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void onSizeChanged(int, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void saveViewState(java.io.OutputStream, android.webkit.ValueCallback)" static="false" param1="" param2="listener" permission=""/>
				<method signature="void saveWebArchive(java.lang.String, boolean, android.webkit.ValueCallback)" static="false" param1="" param2="" param3="listener" permission=""/>
				<method signature="void setBaseLayer(int, boolean, boolean)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setDownloadListener(android.webkit.DownloadListener)" static="false" param1="listener" permission=""/>
				<method signature="void setFindListener(android.webkit.WebView$FindListener)" static="false" param1="listener" permission=""/>
				<method signature="void setNewPicture(android.webkit.WebViewCore$DrawData, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setPictureListener(android.webkit.WebView$PictureListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="WebStorage">
				<method signature="void getOrigins(android.webkit.ValueCallback)" static="false" param1="listener" permission=""/>
				<method signature="void getQuotaForOrigin(java.lang.String, android.webkit.ValueCallback)" static="false" param1="" param2="listener" permission=""/>
				<method signature="void getUsageForOrigin(java.lang.String, android.webkit.ValueCallback)" static="false" param1="" param2="listener" permission=""/>
			</class>
			<class name="WebChromeClient">
				<method signature="void getVisitedHistory(android.webkit.ValueCallback)" static="false" param1="listener" permission=""/>
				<method signature="void onGeolocationPermissionsShowPrompt(java.lang.String, android.webkit.GeolocationPermissions$Callback)" static="false" param1="" param2="listener" permission=""/>
				<method signature="void onShowCustomView(android.view.View, int, android.webkit.WebChromeClient$CustomViewCallback)" static="false" param1="" param2="" param3="listener" permission=""/>
				<method signature="void onShowCustomView(android.view.View, android.webkit.WebChromeClient$CustomViewCallback)" static="false" param1="" param2="listener" permission=""/>
				<method signature="void openFileChooser(android.webkit.ValueCallback, java.lang.String, java.lang.String)" static="false" param1="listener" param2="" param3="" permission=""/>
			</class>
			<class name="WebSettingsClassic">
				<method signature="void &lt;init&gt;(android.content.Context, android.webkit.WebViewClassic)" static="false" return="" param1="track" param2="track" permission="android.permission.INTERNET"/>
				<method signature="boolean enableSmoothTransition()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="boolean forceUserScalable()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="boolean getAllowContentAccess()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="boolean getAllowFileAccess()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="boolean getAllowFileAccessFromFileURLs()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="boolean getAllowUniversalAccessFromFileURLs()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="boolean getAutoFillEnabled()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="android.webkit.WebSettingsClassic$AutoFillProfile getAutoFillProfile()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="boolean getBlockNetworkImage()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="boolean getBlockNetworkLoads()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="boolean getBuiltInZoomControls()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="int getCacheMode()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="java.lang.String getCursiveFontFamily()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="boolean getDatabaseEnabled()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="java.lang.String getDatabasePath()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="int getDefaultFixedFontSize()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="int getDefaultFontSize()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="java.lang.String getDefaultTextEncodingName()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="android.webkit.WebSettings$ZoomDensity getDefaultZoom()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="boolean getDisplayZoomControls()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="boolean getDomStorageEnabled()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="int getDoubleTapZoom()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="java.lang.String getFantasyFontFamily()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="java.lang.String getFixedFontFamily()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="boolean getHardwareAccelSkiaEnabled()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="boolean getJavaScriptCanOpenWindowsAutomatically()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="boolean getJavaScriptEnabled()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="android.webkit.WebSettings$LayoutAlgorithm getLayoutAlgorithm()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="boolean getLightTouchEnabled()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="boolean getLoadWithOverviewMode()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="boolean getLoadsImagesAutomatically()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="int getMinimumFontSize()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="int getMinimumLogicalFontSize()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="boolean getNavDump()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="android.webkit.WebSettings$PluginState getPluginState()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="boolean getPluginsEnabled()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="java.lang.String getPluginsPath()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="java.lang.String getProperty(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.INTERNET"/>
				<method signature="java.lang.String getSansSerifFontFamily()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="boolean getSaveFormData()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="boolean getSavePassword()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="java.lang.String getSerifFontFamily()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="boolean getShowVisualIndicator()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="java.lang.String getStandardFontFamily()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="android.webkit.WebSettings$TextSize getTextSize()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="int getTextZoom()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="boolean getUseDoubleTree()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="boolean getUseWebViewBackgroundForOverscrollBackground()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="boolean getUseWideViewPort()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="int getUserAgent()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="java.lang.String getUserAgentString()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="void setAllowContentAccess(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setAllowFileAccess(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setAllowFileAccessFromFileURLs(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setAllowUniversalAccessFromFileURLs(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setAppCacheEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setAppCacheMaxSize(long)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setAppCachePath(java.lang.String)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setAutoFillEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setAutoFillProfile(android.webkit.WebSettingsClassic$AutoFillProfile)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setBlockNetworkImage(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setBlockNetworkLoads(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setBuiltInZoomControls(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setCacheMode(int)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setCursiveFontFamily(java.lang.String)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setDatabaseEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setDatabasePath(java.lang.String)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setDefaultFixedFontSize(int)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setDefaultFontSize(int)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setDefaultTextEncodingName(java.lang.String)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setDefaultZoom(android.webkit.WebSettings$ZoomDensity)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setDisplayZoomControls(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setDomStorageEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setDoubleTapZoom(int)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setEnableSmoothTransition(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setFantasyFontFamily(java.lang.String)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setFixedFontFamily(java.lang.String)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setForceUserScalable(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setGeolocationDatabasePath(java.lang.String)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setGeolocationEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setHardwareAccelSkiaEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setJavaScriptCanOpenWindowsAutomatically(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setJavaScriptEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setLayoutAlgorithm(android.webkit.WebSettings$LayoutAlgorithm)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setLightTouchEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setLinkPrefetchEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setLoadWithOverviewMode(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setLoadsImagesAutomatically(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setMaximumDecodedImageSize(long)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setMinimumFontSize(int)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setMinimumLogicalFontSize(int)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setNavDump(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setNeedInitialFocus(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setPageCacheCapacity(int)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setPluginState(android.webkit.WebSettings$PluginState)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setPluginsEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setPluginsPath(java.lang.String)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setProperty(java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.INTERNET"/>
				<method signature="void setRenderPriority(android.webkit.WebSettings$RenderPriority)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setSansSerifFontFamily(java.lang.String)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setSaveFormData(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setSavePassword(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setSerifFontFamily(java.lang.String)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setShowVisualIndicator(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setShrinksStandaloneImagesToFit(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setStandardFontFamily(java.lang.String)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setSupportMultipleWindows(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setSupportZoom(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setTextSize(android.webkit.WebSettings$TextSize)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setTextZoom(int)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setUseDoubleTree(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setUseWebViewBackgroundForOverscrollBackground(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setUseWideViewPort(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setUserAgent(int)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setUserAgentString(java.lang.String)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setWorkersEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setXSSAuditorEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="boolean supportMultipleWindows()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="boolean supportZoom()" static="false" return="" permission="android.permission.INTERNET"/>
			</class>
			<class name="WebViewFragment">
				<method signature="android.view.View onCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)" static="false" return="track" param1="track" param2="track" param3="track" permission="android.permission.INTERNET"/>
			</class>
			<class name="HTML5VideoFullScreen">
				<method signature="void onPrepared(android.media.MediaPlayer)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void pause()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void pauseAndDispatch(android.webkit.HTML5VideoViewProxy)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void prepareDataAndDisplayMode(android.webkit.HTML5VideoViewProxy)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void prepareDataCommon(android.webkit.HTML5VideoViewProxy)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void reprepareData(android.webkit.HTML5VideoViewProxy)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void reset()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void start()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void stopPlayback()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="WebView">
				<method signature="void &lt;init&gt;(android.content.Context)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void &lt;init&gt;(android.content.Context, android.util.AttributeSet)" static="false" return="" param1="track" param2="track" permission="android.permission.INTERNET"/>
				<method signature="void &lt;init&gt;(android.content.Context, android.util.AttributeSet, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.INTERNET"/>
				<method signature="void &lt;init&gt;(android.content.Context, android.util.AttributeSet, int, java.util.Map, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.INTERNET"/>
				<method signature="void &lt;init&gt;(android.content.Context, android.util.AttributeSet, int, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.INTERNET"/>
				<method signature="void addJavascriptInterface(java.lang.Object, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.INTERNET"/>
				<method signature="boolean canGoBack()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="boolean canGoBackOrForward(int)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="boolean canGoForward()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="boolean canZoomIn()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="boolean canZoomOut()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="android.graphics.Picture capturePicture()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="void clearCache(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void clearFormData()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="void clearHistory()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="void clearMatches()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="void clearSslPreferences()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="void clearView()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="void computeScroll()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="android.webkit.WebBackForwardList copyBackForwardList()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="void debugDump()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="void destroy()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="boolean dispatchKeyEvent(android.view.KeyEvent)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void documentHasImages(android.os.Message)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void emulateShiftHeld()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="int findAll(java.lang.String)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void findAllAsync(java.lang.String)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void findNext(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void flingScroll(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.INTERNET"/>
				<method signature="void freeMemory()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="android.net.http.SslCertificate getCertificate()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="int getContentHeight()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="int getContentWidth()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="android.graphics.Bitmap getFavicon()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="android.webkit.WebView$HitTestResult getHitTestResult()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="java.lang.String[] getHttpAuthUsernamePassword(java.lang.String, java.lang.String)" static="false" return="track" param1="track" param2="track" permission="android.permission.INTERNET"/>
				<method signature="java.lang.String getOriginalUrl()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="int getProgress()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="float getScale()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="android.webkit.WebSettings getSettings()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="java.lang.String getTitle()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="java.lang.String getTouchIconUrl()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="java.lang.String getUrl()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="int getVisibleTitleHeight()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="android.webkit.WebViewProvider getWebViewProvider()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="android.view.View getZoomControls()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="void goBack()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="void goBackOrForward(int)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void goForward()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="void invokeZoomPicker()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="boolean isPaused()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="boolean isPrivateBrowsingEnabled()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="void loadData(java.lang.String, java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.INTERNET"/>
				<method signature="void loadDataWithBaseURL(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.INTERNET"/>
				<method signature="void loadUrl(java.lang.String)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void loadUrl(java.lang.String, java.util.Map)" static="false" return="" param1="track" param2="track" permission="android.permission.INTERNET"/>
				<method signature="void onChildViewAdded(android.view.View, android.view.View)" static="false" return="" param1="track" param2="track" permission="android.permission.INTERNET"/>
				<method signature="void onChildViewRemoved(android.view.View, android.view.View)" static="false" return="" param1="track" param2="track" permission="android.permission.INTERNET"/>
				<method signature="android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)" static="false" return="track" param1="track" permission="android.permission.INTERNET"/>
				<method signature="boolean onGenericMotionEvent(android.view.MotionEvent)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void onGlobalFocusChanged(android.view.View, android.view.View)" static="false" return="" param1="track" param2="track" permission="android.permission.INTERNET"/>
				<method signature="boolean onHoverEvent(android.view.MotionEvent)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="boolean onKeyDown(int, android.view.KeyEvent)" static="false" return="" param1="track" param2="track" permission="android.permission.INTERNET"/>
				<method signature="boolean onKeyMultiple(int, int, android.view.KeyEvent)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.INTERNET"/>
				<method signature="boolean onKeyUp(int, android.view.KeyEvent)" static="false" return="" param1="track" param2="track" permission="android.permission.INTERNET"/>
				<method signature="void onPause()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="void onResume()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="boolean onTouchEvent(android.view.MotionEvent)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="boolean onTrackballEvent(android.view.MotionEvent)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void onWindowFocusChanged(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="boolean overlayHorizontalScrollbar()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="boolean overlayVerticalScrollbar()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="boolean pageDown(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="boolean pageUp(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void pauseTimers()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="boolean performAccessibilityAction(int, android.os.Bundle)" static="false" return="" param1="track" param2="track" permission="android.permission.INTERNET"/>
				<method signature="boolean performLongClick()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="void postUrl(java.lang.String, byte[])" static="false" return="" param1="track" param2="track" permission="android.permission.INTERNET"/>
				<method signature="void refreshPlugins(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void reload()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="void removeJavascriptInterface(java.lang.String)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="boolean requestChildRectangleOnScreen(android.view.View, android.graphics.Rect, boolean)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.INTERNET"/>
				<method signature="boolean requestFocus(int, android.graphics.Rect)" static="false" return="" param1="track" param2="track" permission="android.permission.INTERNET"/>
				<method signature="void requestFocusNodeHref(android.os.Message)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void requestImageRef(android.os.Message)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="boolean restorePicture(android.os.Bundle, java.io.File)" static="false" return="" param1="track" param2="track" permission="android.permission.INTERNET"/>
				<method signature="android.webkit.WebBackForwardList restoreState(android.os.Bundle)" static="false" return="track" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void resumeTimers()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="void savePassword(java.lang.String, java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.INTERNET"/>
				<method signature="boolean savePicture(android.os.Bundle, java.io.File)" static="false" return="" param1="track" param2="track" permission="android.permission.INTERNET"/>
				<method signature="android.webkit.WebBackForwardList saveState(android.os.Bundle)" static="false" return="track" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void saveWebArchive(java.lang.String)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void saveWebArchive(java.lang.String, boolean, android.webkit.ValueCallback)" static="false" return="" param1="track" param2="track" param3="track, listener, trackListener" permission="android.permission.INTERNET"/>
				<method signature="void setBackgroundColor(int)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setCertificate(android.net.http.SslCertificate)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setDownloadListener(android.webkit.DownloadListener)" static="false" return="" param1="track, listener, trackListener" permission="android.permission.INTERNET"/>
				<method signature="void setFindListener(android.webkit.WebView$FindListener)" static="false" return="" param1="track, listener, trackListener" permission="android.permission.INTERNET"/>
				<method signature="void setHorizontalScrollbarOverlay(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setHttpAuthUsernamePassword(java.lang.String, java.lang.String, java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.INTERNET"/>
				<method signature="void setInitialScale(int)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setLayerType(int, android.graphics.Paint)" static="false" return="" param1="track" param2="track" permission="android.permission.INTERNET"/>
				<method signature="void setLayoutParams(android.view.ViewGroup$LayoutParams)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setMapTrackballToArrowKeys(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setNetworkAvailable(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setOverScrollMode(int)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setPictureListener(android.webkit.WebView$PictureListener)" static="false" return="" param1="track, listener, trackListener" permission="android.permission.INTERNET"/>
				<method signature="void setScrollBarStyle(int)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setVerticalScrollbarOverlay(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setWebChromeClient(android.webkit.WebChromeClient)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setWebViewClient(android.webkit.WebViewClient)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="boolean shouldDelayChildPressedState()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="boolean showFindDialog(java.lang.String, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.INTERNET"/>
				<method signature="void stopLoading()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="boolean zoomIn()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="boolean zoomOut()" static="false" return="" permission="android.permission.INTERNET"/>
			</class>
			<class name="HTML5VideoInline">
				<method signature="void onPrepared(android.media.MediaPlayer)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void pause()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void pauseAndDispatch(android.webkit.HTML5VideoViewProxy)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void prepareDataAndDisplayMode(android.webkit.HTML5VideoViewProxy)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void prepareDataCommon(android.webkit.HTML5VideoViewProxy)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void reprepareData(android.webkit.HTML5VideoViewProxy)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void reset()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void start()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void stopPlayback()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="GeolocationPermissions">
				<method signature="void getAllowed(java.lang.String, android.webkit.ValueCallback)" static="false" param1="" param2="listener" permission=""/>
				<method signature="void getOrigins(android.webkit.ValueCallback)" static="false" param1="listener" permission=""/>
			</class>
			<class name="WebIconDatabase">
				<method signature="void bulkRequestIconForPageUrl(android.content.ContentResolver, java.lang.String, android.webkit.WebIconDatabase$IconListener)" static="false" param1="" param2="" param3="listener" permission=""/>
				<method signature="void requestIconForPageUrl(java.lang.String, android.webkit.WebIconDatabase$IconListener)" static="false" param1="" param2="listener" permission=""/>
			</class>
			<class name="HTML5VideoView">
				<method signature="void onPrepared(android.media.MediaPlayer)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void pause()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void pauseAndDispatch(android.webkit.HTML5VideoViewProxy)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void prepareDataAndDisplayMode(android.webkit.HTML5VideoViewProxy)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void prepareDataCommon(android.webkit.HTML5VideoViewProxy)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void reprepareData(android.webkit.HTML5VideoViewProxy)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void reset()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void start()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void stopPlayback()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="WebStorageClassic">
				<method signature="void getOrigins(android.webkit.ValueCallback)" static="false" param1="listener" permission=""/>
				<method signature="void getQuotaForOrigin(java.lang.String, android.webkit.ValueCallback)" static="false" param1="" param2="listener" permission=""/>
				<method signature="void getUsageForOrigin(java.lang.String, android.webkit.ValueCallback)" static="false" param1="" param2="listener" permission=""/>
			</class>
		</package>
		<package name="android.accounts">
			<class name="IAccountAuthenticatorCache">
				<method signature="void setListener(android.content.pm.RegisteredServicesCacheListener, android.os.Handler)" static="false" param1="listener" param2="" permission=""/>
			</class>
			<class name="AccountManager">
				<method signature="android.accounts.AccountManagerFuture addAccount(java.lang.String, java.lang.String, java.lang.String[], android.os.Bundle, android.app.Activity, android.accounts.AccountManagerCallback, android.os.Handler)" static="false" return="track" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track, listener, trackListener" param7="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS"/>
				<method signature="boolean addAccountExplicitly(android.accounts.Account, java.lang.String, android.os.Bundle)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.AUTHENTICATE_ACCOUNTS"/>
				<method signature="void addOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener, android.os.Handler, boolean)" static="false" return="" param1="track, listener, trackListener" param2="track" param3="track" permission="android.permission.GET_ACCOUNTS"/>
				<method signature="java.lang.String blockingGetAuthToken(android.accounts.Account, java.lang.String, boolean)" static="false" return="track" param1="track" param2="track" param3="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS"/>
				<method signature="void clearPassword(android.accounts.Account)" static="false" return="" param1="track" permission="android.permission.MANAGE_ACCOUNTS"/>
				<method signature="android.accounts.AccountManagerFuture confirmCredentials(android.accounts.Account, android.os.Bundle, android.app.Activity, android.accounts.AccountManagerCallback, android.os.Handler)" static="false" return="track" param1="track" param2="track" param3="track" param4="track, listener, trackListener" param5="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS"/>
				<method signature="android.accounts.AccountManagerFuture editProperties(java.lang.String, android.app.Activity, android.accounts.AccountManagerCallback, android.os.Handler)" static="false" return="track" param1="track" param2="track" param3="track, listener, trackListener" param4="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS"/>
				<method signature="android.accounts.Account[] getAccounts()" static="false" return="track" permission="android.permission.GET_ACCOUNTS"/>
				<method signature="android.accounts.Account[] getAccountsByType(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.GET_ACCOUNTS"/>
				<method signature="android.accounts.AccountManagerFuture getAccountsByTypeAndFeatures(java.lang.String, java.lang.String[], android.accounts.AccountManagerCallback, android.os.Handler)" static="false" return="track" param1="track" param2="track" param3="track, listener, trackListener" param4="track" permission="android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS"/>
				<method signature="android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account, java.lang.String, android.os.Bundle, android.app.Activity, android.accounts.AccountManagerCallback, android.os.Handler)" static="false" return="track" param1="track" param2="track" param3="track" param4="track" param5="track, listener, trackListener" param6="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS"/>
				<method signature="android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account, java.lang.String, android.os.Bundle, boolean, android.accounts.AccountManagerCallback, android.os.Handler)" static="false" return="track" param1="track" param2="track" param3="track" param4="track" param5="track, listener, trackListener" param6="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS"/>
				<method signature="android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account, java.lang.String, boolean, android.accounts.AccountManagerCallback, android.os.Handler)" static="false" return="track" param1="track" param2="track" param3="track" param4="track, listener, trackListener" param5="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS"/>
				<method signature="android.accounts.AccountManagerFuture getAuthTokenByFeatures(java.lang.String, java.lang.String, java.lang.String[], android.app.Activity, android.os.Bundle, android.os.Bundle, android.accounts.AccountManagerCallback, android.os.Handler)" static="false" return="track" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" param7="track, listener, trackListener" param8="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS"/>
				<method signature="android.accounts.AccountManagerFuture getAuthTokenLabel(java.lang.String, java.lang.String, android.accounts.AccountManagerCallback, android.os.Handler)" static="false" return="track" param1="track" param2="track" param3="track, listener, trackListener" param4="track" permission="android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS"/>
				<method signature="java.lang.String getPassword(android.accounts.Account)" static="false" return="track" param1="track" permission="android.permission.AUTHENTICATE_ACCOUNTS"/>
				<method signature="java.lang.String getUserData(android.accounts.Account, java.lang.String)" static="false" return="track" param1="track" param2="track" permission="android.permission.AUTHENTICATE_ACCOUNTS"/>
				<method signature="android.accounts.AccountManagerFuture hasFeatures(android.accounts.Account, java.lang.String[], android.accounts.AccountManagerCallback, android.os.Handler)" static="false" return="track" param1="track" param2="track" param3="track, listener, trackListener" param4="track" permission="android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS"/>
				<method signature="void invalidateAuthToken(java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS"/>
				<method signature="java.lang.String peekAuthToken(android.accounts.Account, java.lang.String)" static="false" return="track" param1="track" param2="track" permission="android.permission.AUTHENTICATE_ACCOUNTS"/>
				<method signature="android.accounts.AccountManagerFuture removeAccount(android.accounts.Account, android.accounts.AccountManagerCallback, android.os.Handler)" static="false" return="track" param1="track" param2="track" param3="track" permission="android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS"/>
				<method signature="void setAuthToken(android.accounts.Account, java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.AUTHENTICATE_ACCOUNTS"/>
				<method signature="void setPassword(android.accounts.Account, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.AUTHENTICATE_ACCOUNTS"/>
				<method signature="void setUserData(android.accounts.Account, java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.AUTHENTICATE_ACCOUNTS"/>
				<method signature="android.accounts.AccountManagerFuture updateCredentials(android.accounts.Account, java.lang.String, android.os.Bundle, android.app.Activity, android.accounts.AccountManagerCallback, android.os.Handler)" static="false" return="track" param1="track" param2="track" param3="track" param4="track" param5="track, listener, trackListener" param6="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS"/>
			</class>
			<class name="GrantCredentialsPermissionActivity">
				<method signature="void onCreate(android.os.Bundle)" static="false" return="" param1="track" permission="android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS"/>
			</class>
			<class name="IAccountManager">
				<method signature="boolean addAccount(android.accounts.Account, java.lang.String, android.os.Bundle)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.AUTHENTICATE_ACCOUNTS"/>
				<method signature="void addAcount(android.accounts.IAccountManagerResponse, java.lang.String, java.lang.String, java.lang.String[], boolean, android.os.Bundle)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.MANAGE_ACCOUNTS"/>
				<method signature="void clearPassword(android.accounts.Account)" static="false" return="" param1="track" permission="android.permission.MANAGE_ACCOUNTS"/>
				<method signature="void confirmCredentials(android.accounts.IAccountManagerResponse, android.accounts.Account, android.os.Bundle, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.MANAGE_ACCOUNTS"/>
				<method signature="void editProperties(android.accounts.IAccountManagerResponse, java.lang.String, boolean)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.MANAGE_ACCOUNTS"/>
				<method signature="android.accounts.Account[] getAccounts(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.GET_ACCOUNTS"/>
				<method signature="void getAccountsByFeatures(android.accounts.IAccountManagerResponse, java.lang.String, java.lang.String[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.GET_ACCOUNTS"/>
				<method signature="void getAuthToken(android.accounts.IAccountManagerResponse, android.accounts.Account, java.lang.String, boolean, boolean, android.os.Bundle)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.USE_CREDENTIALS"/>
				<method signature="java.lang.String getPassword(android.accounts.Account)" static="false" return="track" param1="track" permission="android.permission.AUTHENTICATE_ACCOUNTS"/>
				<method signature="java.lang.String getUserData(android.accounts.Account, java.lang.String)" static="false" return="track" param1="track" param2="track" permission="android.permission.AUTHENTICATE_ACCOUNTS"/>
				<method signature="void hasFeatures(android.accounts.IAccountManagerResponse, android.accounts.Account, java.lang.String[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.GET_ACCOUNTS"/>
				<method signature="void invalidateAuthToken(java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS"/>
				<method signature="java.lang.String peekAuthToken(android.accounts.Account, java.lang.String)" static="false" return="track" param1="track" param2="track" permission="android.permission.AUTHENTICATE_ACCOUNTS"/>
				<method signature="void removeAccount(android.accounts.IAccountManagerResponse, android.accounts.Account)" static="false" return="" param1="track" param2="track" permission="android.permission.MANAGE_ACCOUNTS"/>
				<method signature="void setAuthToken(android.accounts.Account, java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.AUTHENTICATE_ACCOUNTS"/>
				<method signature="void setPassword(android.accounts.Account, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.AUTHENTICATE_ACCOUNTS"/>
				<method signature="void setUserData(android.accounts.Account, java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.AUTHENTICATE_ACCOUNTS"/>
				<method signature="void updateCredentials(android.accounts.IAccountManagerResponse, android.accounts.Account, java.lang.String, boolean, android.os.Bundle)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.MANAGE_ACCOUNTS"/>
			</class>
			<class name="AccountManagerService">
				<method signature="boolean addAccount(android.accounts.Account, java.lang.String, android.os.Bundle)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.AUTHENTICATE_ACCOUNTS"/>
				<method signature="void addAcount(android.accounts.IAccountManagerResponse, java.lang.String, java.lang.String, java.lang.String[], boolean, android.os.Bundle)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.MANAGE_ACCOUNTS"/>
				<method signature="void clearPassword(android.accounts.Account)" static="false" return="" param1="track" permission="android.permission.MANAGE_ACCOUNTS"/>
				<method signature="void confirmCredentials(android.accounts.IAccountManagerResponse, android.accounts.Account, android.os.Bundle, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.MANAGE_ACCOUNTS"/>
				<method signature="void editProperties(android.accounts.IAccountManagerResponse, java.lang.String, boolean)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.MANAGE_ACCOUNTS"/>
				<method signature="android.accounts.Account[] getAccounts(int)" static="false" return="track" param1="track" permission="android.permission.GET_ACCOUNTS"/>
				<method signature="android.accounts.Account[] getAccounts(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.GET_ACCOUNTS"/>
				<method signature="void getAccountsByFeatures(android.accounts.IAccountManagerResponse, java.lang.String, java.lang.String[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.GET_ACCOUNTS"/>
				<method signature="void getAuthToken(android.accounts.IAccountManagerResponse, android.accounts.Account, java.lang.String, boolean, boolean, android.os.Bundle)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.USE_CREDENTIALS"/>
				<method signature="java.lang.String getPassword(android.accounts.Account)" static="false" return="track" param1="track" permission="android.permission.AUTHENTICATE_ACCOUNTS"/>
				<method signature="java.lang.String getUserData(android.accounts.Account, java.lang.String)" static="false" return="track" param1="track" param2="track" permission="android.permission.AUTHENTICATE_ACCOUNTS"/>
				<method signature="void hasFeatures(android.accounts.IAccountManagerResponse, android.accounts.Account, java.lang.String[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.GET_ACCOUNTS"/>
				<method signature="void installNotification(int, android.app.Notification)" static="false" return="" param1="track" param2="track" permission="android.permission.VIBRATE"/>
				<method signature="void invalidateAuthToken(java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.AUTHENTICATE_ACCOUNTS"/>
				<method signature="java.lang.String peekAuthToken(android.accounts.Account, java.lang.String)" static="false" return="track" param1="track" param2="track" permission="android.permission.AUTHENTICATE_ACCOUNTS"/>
				<method signature="void removeAccount(android.accounts.IAccountManagerResponse, android.accounts.Account)" static="false" return="" param1="track" param2="track" permission="android.permission.MANAGE_ACCOUNTS"/>
				<method signature="void setAuthToken(android.accounts.Account, java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.AUTHENTICATE_ACCOUNTS"/>
				<method signature="void setPassword(android.accounts.Account, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.AUTHENTICATE_ACCOUNTS"/>
				<method signature="void setUserData(android.accounts.Account, java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.AUTHENTICATE_ACCOUNTS"/>
				<method signature="void updateCredentials(android.accounts.IAccountManagerResponse, android.accounts.Account, java.lang.String, boolean, android.os.Bundle)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.MANAGE_ACCOUNTS"/>
			</class>
			<class name="ChooseTypeAndAccountActivity">
				<method signature="void onCreate(android.os.Bundle)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS"/>
				<method signature="void run(android.accounts.AccountManagerFuture)" static="false" return="" param1="track" permission="android.permission.GET_ACCOUNTS"/>
				<method signature="void runAddAccountForAuthenticator(java.lang.String)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS"/>
			</class>
			<class name="IAccountManager$Stub">
				<method signature="boolean addAccount(android.accounts.Account, java.lang.String, android.os.Bundle)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.AUTHENTICATE_ACCOUNTS"/>
				<method signature="void addAcount(android.accounts.IAccountManagerResponse, java.lang.String, java.lang.String, java.lang.String[], boolean, android.os.Bundle)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.MANAGE_ACCOUNTS"/>
				<method signature="void clearPassword(android.accounts.Account)" static="false" return="" param1="track" permission="android.permission.MANAGE_ACCOUNTS"/>
				<method signature="void confirmCredentials(android.accounts.IAccountManagerResponse, android.accounts.Account, android.os.Bundle, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.MANAGE_ACCOUNTS"/>
				<method signature="void editProperties(android.accounts.IAccountManagerResponse, java.lang.String, boolean)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.MANAGE_ACCOUNTS"/>
				<method signature="android.accounts.Account[] getAccounts(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.GET_ACCOUNTS"/>
				<method signature="void getAccountsByFeatures(android.accounts.IAccountManagerResponse, java.lang.String, java.lang.String[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.GET_ACCOUNTS"/>
				<method signature="void getAuthToken(android.accounts.IAccountManagerResponse, android.accounts.Account, java.lang.String, boolean, boolean, android.os.Bundle)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.USE_CREDENTIALS"/>
				<method signature="java.lang.String getPassword(android.accounts.Account)" static="false" return="track" param1="track" permission="android.permission.AUTHENTICATE_ACCOUNTS"/>
				<method signature="java.lang.String getUserData(android.accounts.Account, java.lang.String)" static="false" return="track" param1="track" param2="track" permission="android.permission.AUTHENTICATE_ACCOUNTS"/>
				<method signature="void hasFeatures(android.accounts.IAccountManagerResponse, android.accounts.Account, java.lang.String[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.GET_ACCOUNTS"/>
				<method signature="void invalidateAuthToken(java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.AUTHENTICATE_ACCOUNTS"/>
				<method signature="java.lang.String peekAuthToken(android.accounts.Account, java.lang.String)" static="false" return="track" param1="track" param2="track" permission="android.permission.AUTHENTICATE_ACCOUNTS"/>
				<method signature="void removeAccount(android.accounts.IAccountManagerResponse, android.accounts.Account)" static="false" return="" param1="track" param2="track" permission="android.permission.MANAGE_ACCOUNTS"/>
				<method signature="void setAuthToken(android.accounts.Account, java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.AUTHENTICATE_ACCOUNTS"/>
				<method signature="void setPassword(android.accounts.Account, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.AUTHENTICATE_ACCOUNTS"/>
				<method signature="void setUserData(android.accounts.Account, java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.AUTHENTICATE_ACCOUNTS"/>
				<method signature="void updateCredentials(android.accounts.IAccountManagerResponse, android.accounts.Account, java.lang.String, boolean, android.os.Bundle)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.MANAGE_ACCOUNTS"/>
			</class>
		</package>
		<package name="android.preference">
			<class name="PreferenceActivity">
				<method signature="void setParentTitle(java.lang.CharSequence, java.lang.CharSequence, android.view.View$OnClickListener)" static="false" param1="" param2="" param3="listener" permission=""/>
			</class>
			<class name="VolumePreference">
				<method signature="void onActivityStop()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void onBindDialogView(android.view.View)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.WAKE_LOCK"/>
				<method signature="void onDialogClosed(boolean)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="boolean onKey(android.view.View, int, android.view.KeyEvent)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void onSampleStarting(android.preference.VolumePreference$SeekBarVolumizer)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="Preference">
				<method signature="void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnPreferenceClickListener(android.preference.Preference$OnPreferenceClickListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="VolumePreference$SeekBarVolumizer">
				<method signature="void &lt;init&gt;(android.preference.VolumePreference, android.content.Context, android.widget.SeekBar, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SETTINGS,android.permission.WAKE_LOCK"/>
				<method signature="void &lt;init&gt;(android.preference.VolumePreference, android.content.Context, android.widget.SeekBar, int, android.net.Uri)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.WRITE_SETTINGS,android.permission.WAKE_LOCK"/>
				<method signature="void changeVolumeBy(int)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.WAKE_LOCK"/>
				<method signature="android.widget.SeekBar getSeekBar()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.WAKE_LOCK"/>
				<method signature="boolean isSamplePlaying()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.WAKE_LOCK"/>
				<method signature="void muteVolume()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.WAKE_LOCK"/>
				<method signature="void onProgressChanged(android.widget.SeekBar, int, boolean)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.WAKE_LOCK"/>
				<method signature="void onRestoreInstanceState(android.preference.VolumePreference$VolumeStore)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.WAKE_LOCK"/>
				<method signature="void onSaveInstanceState(android.preference.VolumePreference$VolumeStore)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.WAKE_LOCK"/>
				<method signature="void onStartTrackingTouch(android.widget.SeekBar)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.WAKE_LOCK"/>
				<method signature="void onStopTrackingTouch(android.widget.SeekBar)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.WAKE_LOCK"/>
				<method signature="void revertVolume()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.WAKE_LOCK"/>
				<method signature="void run()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.WAKE_LOCK"/>
				<method signature="void startSample()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.WAKE_LOCK"/>
				<method signature="void stop()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.WAKE_LOCK"/>
				<method signature="void stopSample()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.WAKE_LOCK"/>
			</class>
		</package>
		<package name="com.android.server.location">
			<class name="LocationBasedCountryDetector">
				<method signature="android.location.Country detectCountry()" static="false" return="track" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="java.util.List getEnabledProviders()" static="false" return="track" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="android.location.Location getLastKnownLocation()" static="false" return="track" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void registerListener(java.lang.String, android.location.LocationListener)" static="false" return="" param1="track" param2="track, listener, trackListener" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void setCountryListener(android.location.CountryListener)" static="false" return="" param1="track, listener, trackListener" permission="android.permission.READ_PHONE_STATE,android.permission.ACCESS_COARSE_LOCATION"/>
			</class>
			<class name="CountryDetectorBase">
				<method signature="android.location.Country detectCountry()" static="false" return="track" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void setCountryListener(android.location.CountryListener)" static="false" return="" param1="track, listener, trackListener" permission="android.permission.READ_PHONE_STATE,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void stop()" static="false" return="" permission="android.permission.READ_PHONE_STATE,android.permission.ACCESS_COARSE_LOCATION"/>
			</class>
			<class name="GpsLocationProvider">
				<method signature="void addListener(int)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void disable()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void enable()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void enableLocationTracking(boolean)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void removeListener(int)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void reportNiNotification(int, int, int, int, int, java.lang.String, java.lang.String, int, int, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" param7="track" param8="track" param9="track" param10="track" permission="android.permission.VIBRATE"/>
				<method signature="void updateLocation(android.location.Location)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void updateNetworkState(int, android.net.NetworkInfo)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="ComprehensiveCountryDetector">
				<method signature="void addPhoneStateListener()" static="false" return="" permission="android.permission.READ_PHONE_STATE,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void removePhoneStateListener()" static="false" return="" permission="android.permission.READ_PHONE_STATE,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void runAfterDetection(android.location.Country, android.location.Country, boolean, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.READ_PHONE_STATE,android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void setCountryListener(android.location.CountryListener)" static="false" return="" param1="track, listener, trackListener" permission="android.permission.READ_PHONE_STATE,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void stop()" static="false" return="" permission="android.permission.READ_PHONE_STATE,android.permission.ACCESS_COARSE_LOCATION"/>
			</class>
			<class name="LocationProviderInterface">
				<method signature="void addListener(int)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void disable()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void enable()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void enableLocationTracking(boolean)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void removeListener(int)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void updateLocation(android.location.Location)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void updateNetworkState(int, android.net.NetworkInfo)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
			</class>
		</package>
		<package name="android.widget">
			<class name="CalendarView">
				<method signature="void setOnDateChangeListener(android.widget.CalendarView$OnDateChangeListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="MediaController">
				<method signature="void setPrevNextListeners(android.view.View$OnClickListener, android.view.View$OnClickListener)" static="false" param1="listener" param2="listener" permission=""/>
			</class>
			<class name="Spinner">
				<method signature="void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnItemClickListenerInt(android.widget.AdapterView$OnItemClickListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="RemoteViewsAdapter">
				<method signature="void &lt;init&gt;(android.content.Context, android.content.Intent, android.widget.RemoteViewsAdapter$RemoteAdapterConnectionCallback)" static="false" param1="" param2="" param3="listener" permission=""/>
			</class>
			<class name="SeekBar">
				<method signature="void setOnSeekBarChangeListener(android.widget.SeekBar$OnSeekBarChangeListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="PopupWindow">
				<method signature="void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)" static="false" param1="listener" permission=""/>
				<method signature="void setTouchInterceptor(android.view.View$OnTouchListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="PopupMenu">
				<method signature="void setOnDismissListener(android.widget.PopupMenu$OnDismissListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnMenuItemClickListener(android.widget.PopupMenu$OnMenuItemClickListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="CompoundButton">
				<method signature="void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="ZoomControls">
				<method signature="void setOnZoomInClickListener(android.view.View$OnClickListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnZoomOutClickListener(android.view.View$OnClickListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="TabHost">
				<method signature="void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="DateTimeView">
				<method signature="void onAttachedToWindow()" static="false" return="" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="ExpandableListView">
				<method signature="void setOnChildClickListener(android.widget.ExpandableListView$OnChildClickListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnGroupClickListener(android.widget.ExpandableListView$OnGroupClickListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnGroupCollapseListener(android.widget.ExpandableListView$OnGroupCollapseListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnGroupExpandListener(android.widget.ExpandableListView$OnGroupExpandListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="RadioGroup">
				<method signature="void setOnCheckedChangeListener(android.widget.RadioGroup$OnCheckedChangeListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="ActivityChooserModel">
				<method signature="void setOnChooseActivityListener(android.widget.ActivityChooserModel$OnChooseActivityListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="SearchView">
				<method signature="void setOnCloseListener(android.widget.SearchView$OnCloseListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnQueryTextListener(android.widget.SearchView$OnQueryTextListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnSearchClickListener(android.view.View$OnClickListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnSuggestionListener(android.widget.SearchView$OnSuggestionListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="QuickContactBadge">
				<method signature="void assignContactFromEmail(java.lang.String, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="void assignContactFromPhone(java.lang.String, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="void onClick(android.view.View)" static="false" return="" param1="track" permission="android.permission.READ_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="TableLayout">
				<method signature="void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="DialerFilter">
				<method signature="void setDigitsWatcher(android.text.TextWatcher)" static="false" param1="listener" permission=""/>
				<method signature="void setFilterWatcher(android.text.TextWatcher)" static="false" param1="listener" permission=""/>
				<method signature="void setLettersWatcher(android.text.TextWatcher)" static="false" param1="listener" permission=""/>
			</class>
			<class name="AbsListView">
				<method signature="void setMultiChoiceModeListener(android.widget.AbsListView$MultiChoiceModeListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnScrollListener(android.widget.AbsListView$OnScrollListener)" static="false" param1="listener" permission=""/>
				<method signature="void setRecyclerListener(android.widget.AbsListView$RecyclerListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="ActivityChooserModel$DataModelPackageMonitor">
				<method signature="boolean onHandleForceStop(android.content.Intent, java.lang.String[], int, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void onPackageRemoved(java.lang.String, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void onReceive(android.content.Context, android.content.Intent)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="AutoCompleteTextView">
				<method signature="void setOnClickListener(android.view.View$OnClickListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="DatePicker">
				<method signature="void init(int, int, int, android.widget.DatePicker$OnDateChangedListener)" static="false" param1="" param2="" param3="" param4="listener" permission=""/>
			</class>
			<class name="ActivityChooserView">
				<method signature="void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="RatingBar">
				<method signature="void setOnRatingBarChangeListener(android.widget.RatingBar$OnRatingBarChangeListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="Chronometer">
				<method signature="void setOnChronometerTickListener(android.widget.Chronometer$OnChronometerTickListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="TimePicker">
				<method signature="void setOnTimeChangedListener(android.widget.TimePicker$OnTimeChangedListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="NumberPicker">
				<method signature="void setOnScrollListener(android.widget.NumberPicker$OnScrollListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnValueChangedListener(android.widget.NumberPicker$OnValueChangeListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="ListPopupWindow">
				<method signature="void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="AdapterView">
				<method signature="void setOnClickListener(android.view.View$OnClickListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnItemLongClickListener(android.widget.AdapterView$OnItemLongClickListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="TextView">
				<method signature="void addTextChangedListener(android.text.TextWatcher)" static="false" param1="listener" permission=""/>
				<method signature="void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)" static="false" param1="listener" permission=""/>
				<method signature="void setKeyListener(android.text.method.KeyListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnEditorActionListener(android.widget.TextView$OnEditorActionListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="Filter">
				<method signature="void filter(java.lang.CharSequence, android.widget.Filter$FilterListener)" static="false" param1="" param2="listener" permission=""/>
			</class>
			<class name="TableRow">
				<method signature="void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="SlidingDrawer">
				<method signature="void setOnDrawerCloseListener(android.widget.SlidingDrawer$OnDrawerCloseListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnDrawerOpenListener(android.widget.SlidingDrawer$OnDrawerOpenListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnDrawerScrollListener(android.widget.SlidingDrawer$OnDrawerScrollListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="VideoView">
				<method signature="boolean onKeyDown(int, android.view.KeyEvent)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void pause()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void resume()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnPreparedListener(android.media.MediaPlayer$OnPreparedListener)" static="false" param1="listener" permission=""/>
				<method signature="void setVideoPath(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setVideoURI(android.net.Uri)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setVideoURI(android.net.Uri, java.util.Map)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void start()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void stopPlayback()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void suspend()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="ShareActionProvider">
				<method signature="void setOnShareTargetSelectedListener(android.widget.ShareActionProvider$OnShareTargetSelectedListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="ZoomButtonsController">
				<method signature="void setOnZoomListener(android.widget.ZoomButtonsController$OnZoomListener)" static="false" param1="listener" permission=""/>
			</class>
		</package>
		<package name="android.telephony.gsm">
			<class name="SmsManager">
				<method signature="boolean copyMessageToSim(byte[], byte[], int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.SEND_SMS,android.permission.RECEIVE_SMS"/>
				<method signature="boolean deleteMessageFromSim(int)" static="false" return="" param1="track" permission="android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
				<method signature="java.util.ArrayList getAllMessagesFromSim()" static="false" return="track" permission="android.permission.RECEIVE_SMS"/>
				<method signature="void sendDataMessage(java.lang.String, java.lang.String, short, byte[], android.app.PendingIntent, android.app.PendingIntent)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.SEND_SMS"/>
				<method signature="void sendMultipartTextMessage(java.lang.String, java.lang.String, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.SEND_SMS"/>
				<method signature="void sendTextMessage(java.lang.String, java.lang.String, java.lang.String, android.app.PendingIntent, android.app.PendingIntent)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.SEND_SMS"/>
				<method signature="boolean updateMessageOnSim(int, int, byte[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
			</class>
		</package>
		<package name="com.android.commands.svc">
			<class name="PowerCommand">
				<method signature="void run(java.lang.String[])" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.WAKE_LOCK"/>
			</class>
			<class name="DataCommand">
				<method signature="void run(java.lang.String[])" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="WifiCommand">
				<method signature="void run(java.lang.String[])" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="Svc">
				<method signature="void main(java.lang.String[])" static="true" return="" param0="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="Svc$Command">
				<method signature="void run(java.lang.String[])" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
		</package>
		<package name="com.android.server.am">
			<class name="ActivityManagerService">
				<method signature="com.android.server.am.ProcessRecord addAppLocked(android.content.pm.ApplicationInfo, boolean)" static="false" return="track" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void appDiedLocked(com.android.server.am.ProcessRecord, int, android.app.IApplicationThread)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void appNotResponding(com.android.server.am.ProcessRecord, com.android.server.am.ActivityRecord, com.android.server.am.ActivityRecord, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="boolean bindBackupAgent(android.content.pm.ApplicationInfo, int)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void broadcastStickyIntent(android.content.Intent, java.lang.String)" static="true" return="" param0="track" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void closeSystemDialogsLocked(int, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void ensureBootCompleted()" static="false" return="" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void finishBooting()" static="false" return="" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void finishInstrumentationLocked(com.android.server.am.ProcessRecord, int, android.os.Bundle)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="java.util.List getRecentTasks(int, int)" static="false" return="track" param1="track" param2="track" permission="android.permission.GET_TASKS"/>
				<method signature="java.util.List getTasks(int, int, android.app.IThumbnailReceiver)" static="false" return="track" param1="track" param2="track" param3="track" permission="android.permission.GET_TASKS"/>
				<method signature="void goingToSleep()" static="false" return="" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void handleApplicationCrash(android.os.IBinder, android.app.ApplicationErrorReport$CrashInfo)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="boolean handleApplicationWtf(android.os.IBinder, java.lang.String, android.app.ApplicationErrorReport$CrashInfo)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void installSystemProviders()" static="true" return="" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void killAllBackgroundProcesses()" static="false" return="" permission="android.permission.KILL_BACKGROUND_PROCESSES"/>
				<method signature="void killAppAtUsersRequest(com.android.server.am.ProcessRecord, android.app.Dialog)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void killApplicationWithUid(java.lang.String, int)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void killBackgroundProcesses(java.lang.String)" static="false" return="" param1="track" permission="android.permission.RESTART_PACKAGES,android.permission.KILL_BACKGROUND_PROCESSES"/>
				<method signature="android.content.Context main(int)" static="true" return="track" param0="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS"/>
				<method signature="void moveTaskBackwards(int)" static="false" return="" param1="track" permission="android.permission.REORDER_TASKS"/>
				<method signature="void moveTaskToBack(int)" static="false" return="" param1="track" permission="android.permission.REORDER_TASKS"/>
				<method signature="void moveTaskToFront(int, int, android.os.Bundle)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.REORDER_TASKS"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.REORDER_TASKS,android.permission.RECEIVE_BOOT_COMPLETED,android.permission.GET_TASKS,android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK,android.permission.RESTART_PACKAGES,android.permission.CHANGE_CONFIGURATION,android.permission.KILL_BACKGROUND_PROCESSES"/>
				<method signature="void performServiceRestartLocked(com.android.server.am.ServiceRecord)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="android.content.Intent registerReceiver(android.app.IApplicationThread, java.lang.String, android.content.IIntentReceiver, android.content.IntentFilter, java.lang.String)" static="false" return="track" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void removeConnectionLocked(com.android.server.am.ConnectionRecord, com.android.server.am.ProcessRecord, com.android.server.am.ActivityRecord)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="boolean sendPendingBroadcastsLocked(com.android.server.am.ProcessRecord)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void serviceTimeout(com.android.server.am.ProcessRecord)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void setAlwaysFinish(boolean)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void setDebugApp(java.lang.String, boolean, boolean)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void setLockScreenShown(boolean)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setProcessLimit(int)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="boolean shutdown(int)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void skipCurrentReceiverLocked(com.android.server.am.ProcessRecord)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void skipPendingBroadcastLocked(int)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void startAppProblemLocked(com.android.server.am.ProcessRecord)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="com.android.server.am.ProcessRecord startProcessLocked(java.lang.String, android.content.pm.ApplicationInfo, boolean, int, java.lang.String, android.content.ComponentName, boolean, boolean)" static="false" return="track" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" param7="track" param8="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void startRunning(java.lang.String, java.lang.String, java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS,android.permission.WAKE_LOCK"/>
				<method signature="android.content.ComponentName startServiceLocked(android.app.IApplicationThread, android.content.Intent, java.lang.String, int, int)" static="false" return="track" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void systemReady(java.lang.Runnable)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS,android.permission.WAKE_LOCK"/>
				<method signature="void trimApplications()" static="false" return="" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void unbroadcastIntent(android.app.IApplicationThread, android.content.Intent, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void updateConfiguration(android.content.res.Configuration)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean updateConfigurationLocked(android.content.res.Configuration, com.android.server.am.ActivityRecord, boolean, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS,android.permission.WAKE_LOCK"/>
				<method signature="void updatePersistentConfiguration(android.content.res.Configuration)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void wakingUp()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="UsageStatsService$2">
				<method signature="boolean onHandleForceStop(android.content.Intent, java.lang.String[], int, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void onReceive(android.content.Context, android.content.Intent)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void onSomePackagesChanged()" static="false" return="" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="ActivityRecord$Token">
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
			</class>
			<class name="BatteryStatsService">
				<method signature="long getAwakeTimeBattery()" static="false" return="" permission="android.permission.BATTERY_STATS"/>
				<method signature="long getAwakeTimePlugged()" static="false" return="" permission="android.permission.BATTERY_STATS"/>
				<method signature="byte[] getStatistics()" static="false" return="track" permission="android.permission.BLUETOOTH,android.permission.BATTERY_STATS"/>
				<method signature="void noteBluetoothOn()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.BLUETOOTH,android.permission.BATTERY_STATS"/>
				<method signature="void setBatteryState(int, int, int, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.BLUETOOTH"/>
			</class>
			<class name="BroadcastQueue">
				<method signature="void broadcastTimeoutLocked(boolean)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void processNextBroadcast(boolean)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void scheduleBroadcastsLocked()" static="false" return="" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="boolean sendPendingBroadcastsLocked(com.android.server.am.ProcessRecord)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void setBroadcastTimeoutLocked(long)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void skipCurrentReceiverLocked(com.android.server.am.ProcessRecord)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void skipPendingBroadcastLocked(int)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
			</class>
		</package>
		<package name="android.view.animation">
			<class name="Animation">
				<method signature="void setAnimationListener(android.view.animation.Animation$AnimationListener)" static="false" param1="listener" permission=""/>
			</class>
		</package>
		<package name="com.android.internal.policy.impl">
			<class name="KeyguardViewCallback">
				<method signature="void keyguardDone(boolean)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void keyguardDoneDrawing()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void pokeWakelock()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void pokeWakelock(int)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="PhoneFallbackEventHandler">
				<method signature="boolean dispatchKeyEvent(android.view.KeyEvent)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="boolean onKeyDown(int, android.view.KeyEvent)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="boolean onKeyUp(int, android.view.KeyEvent)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="KeyguardViewMediator$1">
				<method signature="void onUserChanged(int)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="PasswordUnlockScreen">
				<method signature="void &lt;init&gt;(android.content.Context, android.content.res.Configuration, com.android.internal.widget.LockPatternUtils, com.android.internal.policy.impl.KeyguardUpdateMonitor, com.android.internal.policy.impl.KeyguardScreenCallback)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void cleanUp()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean needsInput()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean onEditorAction(android.widget.TextView, int, android.view.KeyEvent)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean onKeyDown(int, android.view.KeyEvent)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void onKeyboardChange(boolean)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void onPause()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void onResume()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="KeyguardViewManager">
				<method signature="void onScreenTurnedOn(com.android.internal.policy.impl.KeyguardViewManager$ShowListener)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void show()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void verifyUnlock()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean wakeWhenReadyTq(int)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="PhoneWindowManager">
				<method signature="int checkAddPermission(android.view.WindowManager$LayoutParams)" static="false" return="" param1="track" permission="android.permission.SYSTEM_ALERT_WINDOW"/>
				<method signature="void dispatchMediaKeyRepeatWithWakeLock(android.view.KeyEvent)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void dispatchMediaKeyWithWakeLock(android.view.KeyEvent)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void dispatchMediaKeyWithWakeLockToAudioService(android.view.KeyEvent)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="android.view.KeyEvent dispatchUnhandledKey(android.view.WindowManagerPolicy$WindowState, android.view.KeyEvent, int)" static="false" return="track" param1="track" param2="track" param3="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.CALL_PHONE,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void enableKeyguard(boolean)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void exitKeyguardSecurely(android.view.WindowManagerPolicy$OnKeyguardExitResult)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void handleVolumeKey(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void init(android.content.Context, android.view.IWindowManager, android.view.WindowManagerPolicy$WindowManagerFuncs, android.os.LocalPowerManager)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void initializeHdmiState()" static="false" return="" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="long interceptKeyBeforeDispatching(android.view.WindowManagerPolicy$WindowState, android.view.KeyEvent, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="int interceptKeyBeforeQueueing(android.view.KeyEvent, int, boolean)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.CALL_PHONE,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="int interceptMotionBeforeQueueingWhenScreenOff(int)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void launchHomeFromHotKey()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void notifyLidSwitchChanged(long, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean performHapticFeedbackLw(android.view.WindowManagerPolicy$WindowState, int, boolean)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.VIBRATE,android.permission.WAKE_LOCK"/>
				<method signature="void screenTurnedOff(int)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void screenTurningOn(android.view.WindowManagerPolicy$ScreenOnListener)" static="false" return="" param1="track, listener, trackListener" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void setHdmiPlugged(boolean)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void setSafeMode(boolean)" static="false" return="" param1="track" permission="android.permission.VIBRATE"/>
				<method signature="void setUserRotationMode(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void showGlobalActionsDialog()" static="false" return="" permission="android.permission.READ_PHONE_STATE,android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.ACCESS_COARSE_LOCATION,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void systemReady()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="KeyguardViewBase">
				<method signature="boolean dispatchKeyEvent(android.view.KeyEvent)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void handleMediaKeyEvent(android.view.KeyEvent)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void onScreenTurnedOn()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void show()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void verifyUnlock()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void wakeWhenReadyTq(int)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="RecentApplicationsDialog">
				<method signature="void dismissAndSwitch()" static="false" return="" permission="android.permission.REORDER_TASKS"/>
				<method signature="void onClick(android.view.View)" static="false" return="" param1="track" permission="android.permission.REORDER_TASKS"/>
				<method signature="void onStart()" static="false" return="" permission="android.permission.GET_TASKS"/>
			</class>
			<class name="SimPukUnlockScreen">
				<method signature="void &lt;init&gt;(android.content.Context, android.content.res.Configuration, com.android.internal.policy.impl.KeyguardUpdateMonitor, com.android.internal.policy.impl.KeyguardScreenCallback, com.android.internal.widget.LockPatternUtils)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void cleanUp()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean needsInput()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void onClick(android.view.View)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void onFocusChange(android.view.View, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean onKeyDown(int, android.view.KeyEvent)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void onPause()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void onResume()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="KeyguardScreenCallback">
				<method signature="void forgotPattern(boolean)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void goToLockScreen()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void goToUnlockScreen()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void keyguardDone(boolean)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void pokeWakelock()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void pokeWakelock(int)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void reportFailedUnlockAttempt()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void takeEmergencyCallAction()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="LockScreen$1">
				<method signature="void onUserChanged(int)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="KeyguardStatusViewManager$1">
				<method signature="void onUserChanged(int)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="SimUnlockScreen">
				<method signature="void &lt;init&gt;(android.content.Context, android.content.res.Configuration, com.android.internal.policy.impl.KeyguardUpdateMonitor, com.android.internal.policy.impl.KeyguardScreenCallback, com.android.internal.widget.LockPatternUtils)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void cleanUp()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean needsInput()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void onClick(android.view.View)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean onKeyDown(int, android.view.KeyEvent)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void onPause()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void onResume()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="KeyguardViewProperties">
				<method signature="com.android.internal.policy.impl.KeyguardViewBase createKeyguardView(android.content.Context, com.android.internal.policy.impl.KeyguardViewCallback, com.android.internal.policy.impl.KeyguardUpdateMonitor, com.android.internal.policy.impl.KeyguardWindowController)" static="false" return="track" param1="track" param2="track" param3="track" param4="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="KeyguardScreen">
				<method signature="void onResume()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="LockPatternKeyguardViewProperties">
				<method signature="com.android.internal.policy.impl.KeyguardViewBase createKeyguardView(android.content.Context, com.android.internal.policy.impl.KeyguardViewCallback, com.android.internal.policy.impl.KeyguardUpdateMonitor, com.android.internal.policy.impl.KeyguardWindowController)" static="false" return="track" param1="track" param2="track" param3="track" param4="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="KeyguardViewMediator">
				<method signature="void &lt;init&gt;(android.content.Context, com.android.internal.policy.impl.PhoneWindowManager, android.os.LocalPowerManager)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void doKeyguardTimeout()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean isInputRestricted()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean isSecure()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean isShowing()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean isShowingAndNotHidden()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void keyguardDone(boolean)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void keyguardDone(boolean, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void keyguardDoneDrawing()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void onScreenTurnedOff(int)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void onScreenTurnedOn(com.android.internal.policy.impl.KeyguardViewManager$ShowListener)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void onSimStateChanged(com.android.internal.telephony.IccCard$State)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void onSystemReady()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean onWakeKeyWhenKeyguardShowingTq(int, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean onWakeMotionWhenKeyguardShowingTq()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void pokeWakelock()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void pokeWakelock(int)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void setHidden(boolean)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void setKeyguardEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void verifyUnlock(android.view.WindowManagerPolicy$OnKeyguardExitResult)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="KeyguardUpdateMonitor$InfoCallbackImpl">
				<method signature="void onUserChanged(int)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="AccountUnlockScreen">
				<method signature="void &lt;init&gt;(android.content.Context, android.content.res.Configuration, com.android.internal.policy.impl.KeyguardUpdateMonitor, com.android.internal.policy.impl.KeyguardScreenCallback, com.android.internal.widget.LockPatternUtils)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void afterTextChanged(android.text.Editable)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void beforeTextChanged(java.lang.CharSequence, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void cleanUp()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean dispatchKeyEvent(android.view.KeyEvent)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean needsInput()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void onClick(android.view.View)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void onPause()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void onResume()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void onTextChanged(java.lang.CharSequence, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="LockPatternKeyguardView">
				<method signature="void &lt;init&gt;(android.content.Context, com.android.internal.policy.impl.KeyguardViewCallback, com.android.internal.policy.impl.KeyguardUpdateMonitor, com.android.internal.widget.LockPatternUtils, com.android.internal.policy.impl.KeyguardWindowController)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void cleanUp()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="android.view.View createLockScreen()" static="false" return="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="android.view.View createUnlockScreenFor(com.android.internal.policy.impl.LockPatternKeyguardView$UnlockMode)" static="false" return="track" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean dispatchHoverEvent(android.view.MotionEvent)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean dispatchKeyEvent(android.view.KeyEvent)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void handleMediaKeyEvent(android.view.KeyEvent)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void onScreenTurnedOff()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void onScreenTurnedOn()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void onWindowFocusChanged(boolean)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void reset()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void show()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void verifyUnlock()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void wakeWhenReadyTq(int)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="KeyguardUpdateMonitor">
				<method signature="void &lt;init&gt;(android.content.Context)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void clearFailedAttempts()" static="false" return="" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="int getBatteryLevel()" static="false" return="" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="int getFailedAttempts()" static="false" return="" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="boolean getMaxBiometricUnlockAttemptsReached()" static="false" return="" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="int getPhoneState()" static="false" return="" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="com.android.internal.telephony.IccCard$State getSimState()" static="false" return="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="java.lang.CharSequence getTelephonyPlmn()" static="false" return="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="java.lang.CharSequence getTelephonySpn()" static="false" return="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void handleUserChanged(int)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean isClockVisible()" static="false" return="" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="boolean isDeviceCharged()" static="false" return="" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="boolean isDevicePluggedIn()" static="false" return="" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="boolean isDeviceProvisioned()" static="false" return="" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="boolean isSimLocked()" static="false" return="" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void registerInfoCallback(com.android.internal.policy.impl.KeyguardUpdateMonitor$InfoCallback)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void registerSimStateCallback(com.android.internal.policy.impl.KeyguardUpdateMonitor$SimStateCallback)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void removeCallback(java.lang.Object)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void reportClockVisible(boolean)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void reportFailedAttempt()" static="false" return="" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void reportFailedBiometricUnlockAttempt()" static="false" return="" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void reportSimUnlocked()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean shouldShowBatteryInfo()" static="false" return="" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="FaceUnlock">
				<method signature="void handleCancel()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void handlePokeWakelock(int)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void handleServiceConnected()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void handleUnlock()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
		</package>
		<package name="android.media.audiofx">
			<class name="PresetReverb">
				<method signature="void setParameterListener(android.media.audiofx.PresetReverb$OnParameterChangeListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="Virtualizer">
				<method signature="void setParameterListener(android.media.audiofx.Virtualizer$OnParameterChangeListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="Equalizer">
				<method signature="void setParameterListener(android.media.audiofx.Equalizer$OnParameterChangeListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="AudioEffect">
				<method signature="void setControlStatusListener(android.media.audiofx.AudioEffect$OnControlStatusChangeListener)" static="false" param1="listener" permission=""/>
				<method signature="void setEnableStatusListener(android.media.audiofx.AudioEffect$OnEnableStatusChangeListener)" static="false" param1="listener" permission=""/>
				<method signature="void setParameterListener(android.media.audiofx.AudioEffect$OnParameterChangeListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="EnvironmentalReverb">
				<method signature="void setParameterListener(android.media.audiofx.EnvironmentalReverb$OnParameterChangeListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="Visualizer">
				<method signature="int setDataCaptureListener(android.media.audiofx.Visualizer$OnDataCaptureListener, int, boolean, boolean)" static="false" param1="listener" param2="" param3="" param4="" permission=""/>
				<method signature="int setServerDiedListener(android.media.audiofx.Visualizer$OnServerDiedListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="BassBoost">
				<method signature="void setParameterListener(android.media.audiofx.BassBoost$OnParameterChangeListener)" static="false" param1="listener" permission=""/>
			</class>
		</package>
		<package name="android.net.http">
			<class name="RequestQueue">
				<method signature="void enablePlatformNotifications()" static="false" return="" permission="android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="Headers">
				<method signature="void getHeaders(android.net.http.Headers$HeaderCallback)" static="false" param1="listener" permission=""/>
			</class>
		</package>
		<package name="android.filterpacks.videoproc">
			<class name="BackDropperFilter">
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
		</package>
		<package name="com.android.internal.telephony.sip">
			<class name="SipPhoneBase">
				<method signature="void &lt;init&gt;(com.android.internal.telephony.PhoneNotifier, android.content.Context, com.android.internal.telephony.CommandsInterface)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void &lt;init&gt;(com.android.internal.telephony.PhoneNotifier, android.content.Context, com.android.internal.telephony.CommandsInterface, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.Connection dial(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.USE_SIP"/>
				<method signature="void dispose()" static="false" return="" permission="android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK"/>
				<method signature="void enableEnhancedVoicePrivacy(boolean, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void exitEmergencyCallbackMode()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getEnhancedVoicePrivacy(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getPreferredNetworkType(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getSmscAddress(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void invokeOemRilRequestRaw(byte[], android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void invokeOemRilRequestStrings(java.lang.String[], android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyDataConnection(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void notifyDataConnection(java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void notifyDataConnection(java.lang.String, java.lang.String, com.android.internal.telephony.Phone$DataState)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void notifyDataConnectionFailed(java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void notifyServiceStateChangedP(android.telephony.ServiceState)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void queryAvailableBandMode(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void queryCdmaRoamingPreference(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void queryTTYMode(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void requestIsimAuthentication(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void restoreSavedNetworkSelection(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void sendBurstDtmf(java.lang.String, int, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setBandMode(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setCdmaRoamingPreference(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setCdmaSubscription(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setPreferredNetworkType(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setSmscAddress(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setTTYMode(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setVoiceMessageWaiting(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="SipCallBase">
				<method signature="void hangupIfAlive()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="SipPhoneFactory">
				<method signature="com.android.internal.telephony.sip.SipPhone makePhone(java.lang.String, android.content.Context, com.android.internal.telephony.PhoneNotifier)" static="true" return="track" param0="track" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
			</class>
			<class name="SipPhone$SipCall">
				<method signature="void hangupIfAlive()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="SipPhone">
				<method signature="void &lt;init&gt;(android.content.Context, com.android.internal.telephony.PhoneNotifier, android.net.sip.SipProfile)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void &lt;init&gt;(com.android.internal.telephony.PhoneNotifier, android.content.Context, com.android.internal.telephony.CommandsInterface)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void &lt;init&gt;(com.android.internal.telephony.PhoneNotifier, android.content.Context, com.android.internal.telephony.CommandsInterface, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void acceptCall()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void activateCellBroadcastSms(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean canConference()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean canDial()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean canTake(java.lang.Object)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean canTransfer()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void clearDisconnected()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void conference()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void conference(com.android.internal.telephony.Call)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.Connection dial(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.USE_SIP,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.Connection dial(java.lang.String, com.android.internal.telephony.UUSInfo)" static="false" return="track" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.USE_SIP,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean disableDataConnectivity()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void disableLocationUpdates()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void dispose()" static="false" return="" permission="android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK"/>
				<method signature="boolean enableDataConnectivity()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void enableEnhancedVoicePrivacy(boolean, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void enableLocationUpdates()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean equals(com.android.internal.telephony.sip.SipPhone)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean equals(java.lang.Object)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void exitEmergencyCallbackMode()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void explicitCallTransfer()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void getAvailableNetworks(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.Call getBackgroundCall()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean getCallForwardingIndicator()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void getCallForwardingOption(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void getCallWaiting(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void getCellBroadcastSmsConfig(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="android.telephony.CellLocation getCellLocation()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.util.List getCurrentDataConnectionList()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.Phone$DataActivityState getDataActivityState()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void getDataCallList(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.Phone$DataState getDataConnectionState()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.Phone$DataState getDataConnectionState(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean getDataRoamingEnabled()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getDeviceId()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getDeviceSvn()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void getEnhancedVoicePrivacy(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="java.lang.String getEsn()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.Call getForegroundCall()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.IccCard getIccCard()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.IccFileHandler getIccFileHandler()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.IccPhoneBookInterfaceManager getIccPhoneBookInterfaceManager()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean getIccRecordsLoaded()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getIccSerialNumber()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getImei()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getLine1AlphaTag()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getLine1Number()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="android.net.LinkProperties getLinkProperties(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getMeid()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean getMessageWaitingIndicator()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean getMute()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void getNeighboringCids(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void getOutgoingCallerIdDisplay(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.util.List getPendingMmiCodes()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getPhoneName()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.PhoneSubInfo getPhoneSubInfo()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="int getPhoneType()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void getPreferredNetworkType(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="com.android.internal.telephony.Call getRingingCall()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="android.telephony.ServiceState getServiceState()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="android.telephony.SignalStrength getSignalStrength()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getSipUri()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void getSmscAddress(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="com.android.internal.telephony.Phone$State getState()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getSubscriberId()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getVoiceMailAlphaTag()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getVoiceMailNumber()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean handleInCallMmiCommands(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean handlePinMmi(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void invokeOemRilRequestRaw(byte[], android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void invokeOemRilRequestStrings(java.lang.String[], android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="boolean isDataConnectivityPossible()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean needsOtaServiceProvisioning()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void notifyCallForwardingIndicator()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void notifyDataConnection(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void notifyDataConnection(java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void notifyDataConnection(java.lang.String, java.lang.String, com.android.internal.telephony.Phone$DataState)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void notifyDataConnectionFailed(java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void notifyServiceStateChangedP(android.telephony.ServiceState)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void queryAvailableBandMode(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void queryCdmaRoamingPreference(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void queryTTYMode(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void registerForRingbackTone(android.os.Handler, int, java.lang.Object)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void registerForSuppServiceNotification(android.os.Handler, int, java.lang.Object)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void rejectCall()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void requestIsimAuthentication(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void restoreSavedNetworkSelection(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void saveClirSetting(int)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void selectNetworkManually(com.android.internal.telephony.OperatorInfo, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void sendBurstDtmf(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void sendBurstDtmf(java.lang.String, int, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void sendDtmf(char)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void sendUssdResponse(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setBandMode(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setCallForwardingOption(int, int, java.lang.String, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setCallWaiting(boolean, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setCdmaRoamingPreference(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setCdmaSubscription(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setCellBroadcastSmsConfig(int[], android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setDataRoamingEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setEchoSuppressionEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setLine1Number(java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setMute(boolean)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setNetworkSelectionModeAutomatic(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setOnPostDialCharacter(android.os.Handler, int, java.lang.Object)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setOutgoingCallerIdDisplay(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setPreferredNetworkType(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setRadioPower(boolean)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setSmscAddress(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setTTYMode(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setVoiceMailNumber(java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setVoiceMessageWaiting(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void startDtmf(char)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void stopDtmf()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void switchHoldingAndActive()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void unregisterForRingbackTone(android.os.Handler)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void unregisterForSuppServiceNotification(android.os.Handler)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void updateServiceLocation()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
			</class>
			<class name="SipCommandInterface">
				<method signature="void onRadioAvailable()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setCurrentPreferredNetworkType()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setRadioState(com.android.internal.telephony.CommandsInterface$RadioState)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
		</package>
		<package name="android.nfc.tech">
			<class name="Ndef">
				<method signature="void close()" static="false" return="" permission="android.permission.NFC"/>
				<method signature="void connect()" static="false" return="" permission="android.permission.NFC"/>
				<method signature="android.nfc.NdefMessage getNdefMessage()" static="false" return="track" permission="android.permission.NFC"/>
				<method signature="boolean makeReadOnly()" static="false" return="" permission="android.permission.NFC"/>
				<method signature="void reconnect()" static="false" return="" permission="android.permission.NFC"/>
				<method signature="void writeNdefMessage(android.nfc.NdefMessage)" static="false" return="" param1="track" permission="android.permission.NFC"/>
			</class>
			<class name="MifareClassic">
				<method signature="boolean authenticateSectorWithKeyA(int, byte[])" static="false" return="" param1="track" param2="track" permission="android.permission.NFC"/>
				<method signature="boolean authenticateSectorWithKeyB(int, byte[])" static="false" return="" param1="track" param2="track" permission="android.permission.NFC"/>
				<method signature="void close()" static="false" return="" permission="android.permission.NFC"/>
				<method signature="void connect()" static="false" return="" permission="android.permission.NFC"/>
				<method signature="void decrement(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.NFC"/>
				<method signature="int getTimeout()" static="false" return="" permission="android.permission.NFC"/>
				<method signature="void increment(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.NFC"/>
				<method signature="byte[] readBlock(int)" static="false" return="track" param1="track" permission="android.permission.NFC"/>
				<method signature="void reconnect()" static="false" return="" permission="android.permission.NFC"/>
				<method signature="void restore(int)" static="false" return="" param1="track" permission="android.permission.NFC"/>
				<method signature="void setTimeout(int)" static="false" return="" param1="track" permission="android.permission.NFC"/>
				<method signature="byte[] transceive(byte[])" static="false" return="track" param1="track" permission="android.permission.NFC"/>
				<method signature="void transfer(int)" static="false" return="" param1="track" permission="android.permission.NFC"/>
				<method signature="void writeBlock(int, byte[])" static="false" return="" param1="track" param2="track" permission="android.permission.NFC"/>
			</class>
			<class name="NfcF">
				<method signature="void close()" static="false" return="" permission="android.permission.NFC"/>
				<method signature="void connect()" static="false" return="" permission="android.permission.NFC"/>
				<method signature="int getTimeout()" static="false" return="" permission="android.permission.NFC"/>
				<method signature="void reconnect()" static="false" return="" permission="android.permission.NFC"/>
				<method signature="void setTimeout(int)" static="false" return="" param1="track" permission="android.permission.NFC"/>
				<method signature="byte[] transceive(byte[])" static="false" return="track" param1="track" permission="android.permission.NFC"/>
			</class>
			<class name="IsoDep">
				<method signature="void close()" static="false" return="" permission="android.permission.NFC"/>
				<method signature="void connect()" static="false" return="" permission="android.permission.NFC"/>
				<method signature="int getTimeout()" static="false" return="" permission="android.permission.NFC"/>
				<method signature="void reconnect()" static="false" return="" permission="android.permission.NFC"/>
				<method signature="void setTimeout(int)" static="false" return="" param1="track" permission="android.permission.NFC"/>
				<method signature="byte[] transceive(byte[])" static="false" return="track" param1="track" permission="android.permission.NFC"/>
			</class>
			<class name="MifareUltralight">
				<method signature="void close()" static="false" return="" permission="android.permission.NFC"/>
				<method signature="void connect()" static="false" return="" permission="android.permission.NFC"/>
				<method signature="int getTimeout()" static="false" return="" permission="android.permission.NFC"/>
				<method signature="byte[] readPages(int)" static="false" return="track" param1="track" permission="android.permission.NFC"/>
				<method signature="void reconnect()" static="false" return="" permission="android.permission.NFC"/>
				<method signature="void setTimeout(int)" static="false" return="" param1="track" permission="android.permission.NFC"/>
				<method signature="byte[] transceive(byte[])" static="false" return="track" param1="track" permission="android.permission.NFC"/>
				<method signature="void writePage(int, byte[])" static="false" return="" param1="track" param2="track" permission="android.permission.NFC"/>
			</class>
			<class name="NdefFormatable">
				<method signature="void close()" static="false" return="" permission="android.permission.NFC"/>
				<method signature="void connect()" static="false" return="" permission="android.permission.NFC"/>
				<method signature="void format(android.nfc.NdefMessage)" static="false" return="" param1="track" permission="android.permission.NFC"/>
				<method signature="void format(android.nfc.NdefMessage, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.NFC"/>
				<method signature="void formatReadOnly(android.nfc.NdefMessage)" static="false" return="" param1="track" permission="android.permission.NFC"/>
				<method signature="void reconnect()" static="false" return="" permission="android.permission.NFC"/>
			</class>
			<class name="NfcB">
				<method signature="void close()" static="false" return="" permission="android.permission.NFC"/>
				<method signature="void connect()" static="false" return="" permission="android.permission.NFC"/>
				<method signature="void reconnect()" static="false" return="" permission="android.permission.NFC"/>
				<method signature="byte[] transceive(byte[])" static="false" return="track" param1="track" permission="android.permission.NFC"/>
			</class>
			<class name="NfcA">
				<method signature="void close()" static="false" return="" permission="android.permission.NFC"/>
				<method signature="void connect()" static="false" return="" permission="android.permission.NFC"/>
				<method signature="int getTimeout()" static="false" return="" permission="android.permission.NFC"/>
				<method signature="void reconnect()" static="false" return="" permission="android.permission.NFC"/>
				<method signature="void setTimeout(int)" static="false" return="" param1="track" permission="android.permission.NFC"/>
				<method signature="byte[] transceive(byte[])" static="false" return="track" param1="track" permission="android.permission.NFC"/>
			</class>
			<class name="NfcV">
				<method signature="void close()" static="false" return="" permission="android.permission.NFC"/>
				<method signature="void connect()" static="false" return="" permission="android.permission.NFC"/>
				<method signature="void reconnect()" static="false" return="" permission="android.permission.NFC"/>
				<method signature="byte[] transceive(byte[])" static="false" return="track" param1="track" permission="android.permission.NFC"/>
			</class>
		</package>
		<package name="android.service.dreams">
			<class name="DreamManagerService">
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void setDreamComponent(android.content.ComponentName)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="Dream">
				<method signature="android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)" static="false" param1="listener" permission=""/>
			</class>
			<class name="IDreamManager">
				<method signature="void setDreamComponent(android.content.ComponentName)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="IDreamManager$Stub">
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void setDreamComponent(android.content.ComponentName)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
		</package>
		<package name="com.android.emailcommon.provider">
			<class name="Account">
				<method signature="boolean isAutomaticSyncDisabledByRoaming(android.content.Context, long)" static="true" return="" param0="track" param1="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
			</class>
		</package>
		<package name="com.android.server.wm">
			<class name="WindowAnimator">
				<method signature="void animate()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="WindowManagerService">
				<method signature="void &lt;init&gt;(android.content.Context, com.android.server.PowerManagerService, boolean, boolean, boolean, com.android.server.wm.WindowManagerService$1)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void addAppToken(int, android.view.IApplicationToken, int, int, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="android.view.WindowManagerPolicy$FakeWindow addFakeWindow(android.os.Looper, android.view.InputEventReceiver$Factory, java.lang.String, int, int, boolean, boolean, boolean)" static="false" return="track" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" param7="track" param8="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="int addWindow(com.android.server.wm.Session, android.view.IWindow, int, android.view.WindowManager$LayoutParams, int, android.graphics.Rect, android.view.InputChannel)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" param7="track" permission="android.permission.USE_CREDENTIALS,android.permission.SYSTEM_ALERT_WINDOW,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void addWindowChangeListener(com.android.server.wm.WindowManagerService$WindowChangeListener)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void addWindowToken(android.os.IBinder, int)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void bulkSetParameters(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void clearForcedDisplaySize()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void closeSystemDialogs(java.lang.String)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="android.content.res.Configuration computeNewConfiguration()" static="false" return="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean detectSafeMode()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void disableKeyguard(android.os.IBinder, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.DISABLE_KEYGUARD,android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void dismissKeyguard()" static="false" return="" permission="android.permission.DISABLE_KEYGUARD,android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void displayReady()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void enableScreenAfterBoot()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void executeAppTransition()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void exitKeyguardSecurely(android.view.IOnKeyguardExitResult)" static="false" return="" param1="track" permission="android.permission.DISABLE_KEYGUARD,android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void finishDrawingWindow(com.android.server.wm.Session, android.view.IWindow)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void freezeRotation(int)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="float getAnimationScale(int)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="float[] getAnimationScales()" static="false" return="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="int getAppOrientation(android.view.IApplicationToken)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void getCurrentSizeRange(android.graphics.Point, android.graphics.Point)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void getDisplaySize(android.graphics.Point)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="android.os.IBinder getFocusedWindowClientToken()" static="false" return="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void getInitialDisplaySize(android.graphics.Point)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="com.android.server.input.InputManagerService getInputManagerService()" static="false" return="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="int getLidState()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="int getMaximumSizeDimension()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="int getOrientationFromAppTokensLocked()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="int getOrientationFromWindowsLocked()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="int getPendingAppTransition()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="int getPreferredOptionsPanelGravity()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void getRealDisplaySize(android.graphics.Point)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="int getRotation()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="float getWindowCompatibilityScale(android.os.IBinder)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void getWindowDisplayFrame(com.android.server.wm.Session, android.view.IWindow, android.graphics.Rect)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean getWindowFrame(android.os.IBinder, android.graphics.Rect)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="int handleAppTransitionReadyLocked()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean hasNavigationBar()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean hasSystemNavBar()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void hideBootMessagesLocked()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean inKeyguardRestrictedInputMode()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean inputMethodClientHasFocus(com.android.internal.view.IInputMethodClient)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean isHardKeyboardAvailable()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean isHardKeyboardEnabled()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean isKeyguardLocked()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean isKeyguardSecure()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean isViewServerRunning()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void lockNow()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="com.android.server.wm.WindowManagerService main(android.content.Context, com.android.server.PowerManagerService, boolean, boolean, boolean)" static="true" return="track" param0="track" param1="track" param2="track" param3="track" param4="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void makeWindowFreezingScreenIfNeededLocked(com.android.server.wm.WindowState)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void monitor()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="android.view.InputChannel monitorInput(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void moveAppToken(int, android.os.IBinder)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void moveAppTokensToBottom(java.util.List)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void moveAppTokensToTop(java.util.List)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.DISABLE_KEYGUARD,android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="android.view.IWindowSession openSession(com.android.internal.view.IInputMethodClient, com.android.internal.view.IInputContext)" static="false" return="track" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean outOfMemoryWindow(com.android.server.wm.Session, android.view.IWindow)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void overridePendingAppTransition(java.lang.String, int, int, android.os.IRemoteCallback)" static="false" return="" param1="track" param2="track" param3="track" param4="track, listener, trackListener" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void overridePendingAppTransitionScaleUp(int, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void overridePendingAppTransitionThumb(android.graphics.Bitmap, int, int, android.os.IRemoteCallback, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track, listener, trackListener" param5="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void pauseKeyDispatching(android.os.IBinder)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void performBootTimeout()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void performDeferredDestroyWindow(com.android.server.wm.Session, android.view.IWindow)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void performEnableScreen()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void prepareAppTransition(int, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="android.os.IBinder prepareDragSurface(android.view.IWindow, android.view.SurfaceSession, int, int, int, android.view.Surface)" static="false" return="track" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void rebootSafeMode()" static="false" return="" permission="android.permission.MOUNT_UNMOUNT_FILESYSTEMS,android.permission.USE_CREDENTIALS,android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void reenableKeyguard(android.os.IBinder)" static="false" return="" param1="track" permission="android.permission.DISABLE_KEYGUARD,android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void reevaluateStatusBarVisibility()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="int relayoutWindow(com.android.server.wm.Session, android.view.IWindow, int, android.view.WindowManager$LayoutParams, int, int, int, int, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect, android.content.res.Configuration, android.view.Surface)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" param7="track" param8="track" param9="track" param10="track" param11="track" param12="track" param13="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void removeAppToken(android.os.IBinder)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void removeWindow(com.android.server.wm.Session, android.view.IWindow)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void removeWindowChangeListener(com.android.server.wm.WindowManagerService$WindowChangeListener)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void removeWindowLocked(com.android.server.wm.Session, com.android.server.wm.WindowState)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void removeWindowToken(android.os.IBinder)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void requestTraversalLocked()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void resumeKeyDispatching(android.os.IBinder)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void resumeRotationLocked()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void saveANRStateLocked(com.android.server.wm.AppWindowToken, com.android.server.wm.WindowState)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void saveLastInputMethodWindowForTransition()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="android.graphics.Bitmap screenshotApplications(android.os.IBinder, int, int)" static="false" return="track" param1="track" param2="track" param3="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void sendNewConfiguration()" static="false" return="" permission="android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="android.os.Bundle sendWindowWallpaperCommandLocked(com.android.server.wm.WindowState, java.lang.String, int, int, int, android.os.Bundle, boolean)" static="false" return="track" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" param7="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void setAnimationScale(int, float)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void setAnimationScales(float[])" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void setAppGroupId(android.os.IBinder, int)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void setAppOrientation(android.view.IApplicationToken, int)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void setAppStartingWindow(android.os.IBinder, java.lang.String, int, android.content.res.CompatibilityInfo, java.lang.CharSequence, int, int, int, android.os.IBinder, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" param7="track" param8="track" param9="track" param10="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void setAppVisibility(android.os.IBinder, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void setAppWillBeHidden(android.os.IBinder)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void setEventDispatching(boolean)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void setFocusedApp(android.os.IBinder, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void setForcedDisplaySize(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void setHardKeyboardEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void setHoldScreenLocked(boolean)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setInTouchMode(boolean)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void setInputFilter(com.android.server.input.InputFilter)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void setNewConfiguration(android.content.res.Configuration)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void setOnHardKeyboardStatusChangeListener(com.android.server.wm.WindowManagerService$OnHardKeyboardStatusChangeListener)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void setStrictModeVisualIndicatorPreference(java.lang.String)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean setTokenVisibilityLocked(com.android.server.wm.AppWindowToken, android.view.WindowManager$LayoutParams, boolean, int, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setWindowWallpaperPositionLocked(com.android.server.wm.WindowState, float, float, float, float)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void showBootMessage(java.lang.CharSequence, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void showStrictModeViolation(boolean)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void shutdown()" static="false" return="" permission="android.permission.MOUNT_UNMOUNT_FILESYSTEMS,android.permission.USE_CREDENTIALS,android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void startAppFreezingScreen(android.os.IBinder, int)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void startAppFreezingScreenLocked(com.android.server.wm.AppWindowToken, int)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean startViewServer(int)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void statusBarVisibilityChanged(int)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void stopAppFreezingScreen(android.os.IBinder, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean stopViewServer()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void switchKeyboardLayout(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void systemReady()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void thawRotation()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void unsetAppFreezingScreenLocked(com.android.server.wm.AppWindowToken, boolean, boolean)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="android.content.res.Configuration updateOrientationFromAppTokens(android.content.res.Configuration, android.os.IBinder)" static="false" return="track" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void updateRotation(boolean, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void updateRotationUnchecked(boolean, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean updateRotationUncheckedLocked(boolean)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void validateAppTokens(java.util.List)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void waitForWindowDrawn(android.os.IBinder, android.os.IRemoteCallback)" static="false" return="" param1="track" param2="track, listener, trackListener" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="int watchRotation(android.view.IRotationWatcher)" static="false" return="" param1="track, listener, trackListener" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
		</package>
		<package name="android.bluetooth">
			<class name="IBluetoothHeadset$Stub">
				<method signature="boolean acceptIncomingConnect(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean connect(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean connectHeadsetInternal(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean createIncomingConnect(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean disconnect(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean disconnectHeadsetInternal(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="int getBatteryUsageHint(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.util.List getConnectedDevices()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getConnectionState(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.util.List getDevicesMatchingConnectionStates(int[])" static="false" return="track" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getPriority(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean isAudioConnected(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean setPriority(android.bluetooth.BluetoothDevice, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean startScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean startVoiceRecognition(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean stopScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean stopVoiceRecognition(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="IBluetoothPbap$Stub">
				<method signature="boolean connect(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="void disconnect()" static="false" return="" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="android.bluetooth.BluetoothDevice getClient()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getState()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean isConnected(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN"/>
			</class>
			<class name="BluetoothDeviceProfileState$BondedDevice">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="IBluetoothA2dp$Stub">
				<method signature="boolean allowIncomingConnect(android.bluetooth.BluetoothDevice, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean connect(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean connectSinkInternal(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean disconnect(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean disconnectSinkInternal(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="java.util.List getConnectedDevices()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getConnectionState(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.util.List getDevicesMatchingConnectionStates(int[])" static="false" return="track" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getPriority(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean isA2dpPlaying(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean resumeSink(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean setPriority(android.bluetooth.BluetoothDevice, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean suspendSink(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="BluetoothDevice">
				<method signature="boolean cancelBondProcess()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean cancelPairingUserInput()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean createBond()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean createBondOutOfBand(byte[], byte[])" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="android.bluetooth.BluetoothSocket createInsecureRfcommSocket(int)" static="false" return="track" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="android.bluetooth.BluetoothSocket createInsecureRfcommSocketToServiceRecord(java.util.UUID)" static="false" return="track" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="android.bluetooth.BluetoothSocket createRfcommSocket(int)" static="false" return="track" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="android.bluetooth.BluetoothSocket createRfcommSocketToServiceRecord(java.util.UUID)" static="false" return="track" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="android.bluetooth.BluetoothSocket createScoSocket()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean fetchUuidsWithSdp()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="java.lang.String getAlias()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.lang.String getAliasName()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="android.bluetooth.BluetoothClass getBluetoothClass()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getBondState()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="java.lang.String getName()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getServiceChannel(android.os.ParcelUuid)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean getTrustState()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="android.os.ParcelUuid[] getUuids()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean removeBond()" static="false" return="" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean setAlias(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean setDeviceOutOfBandData(byte[], byte[])" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean setPairingConfirmation(boolean)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean setPasskey(int)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean setPin(byte[])" static="false" return="" param1="track" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean setRemoteOutOfBandData()" static="false" return="" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean setTrust(boolean)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN"/>
			</class>
			<class name="BluetoothTetheringDataTracker">
				<method signature="boolean teardown()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="BluetoothProfileState$PendingCommandState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="BluetoothInputDevice">
				<method signature="boolean connect(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean disconnect(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="java.util.List getConnectedDevices()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getConnectionState(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.util.List getDevicesMatchingConnectionStates(int[])" static="false" return="track" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getPriority(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean setPriority(android.bluetooth.BluetoothDevice, int)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN"/>
			</class>
			<class name="AtCommandHandler">
				<method signature="android.bluetooth.AtCommandResult handleActionCommand()" static="false" return="track" permission="android.permission.READ_PHONE_STATE,com.android.voicemail.permission.ADD_VOICEMAIL,android.permission.BLUETOOTH,android.permission.READ_SOCIAL_STREAM,android.permission.BROADCAST_STICKY,android.permission.VIBRATE,android.permission.READ_CALL_LOG,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)" static="false" return="track" param1="track" permission="com.android.voicemail.permission.ADD_VOICEMAIL,android.permission.BLUETOOTH,android.permission.BROADCAST_STICKY,android.permission.VIBRATE,android.permission.READ_CALL_LOG,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="android.bluetooth.AtCommandResult handleReadCommand()" static="false" return="track" permission="com.android.voicemail.permission.ADD_VOICEMAIL,android.permission.READ_SOCIAL_STREAM,android.permission.READ_CALL_LOG,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])" static="false" return="track" param1="track" permission="android.permission.READ_PHONE_STATE,com.android.voicemail.permission.ADD_VOICEMAIL,android.permission.BLUETOOTH,android.permission.READ_SOCIAL_STREAM,android.permission.BROADCAST_STICKY,android.permission.VIBRATE,android.permission.READ_CALL_LOG,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="android.bluetooth.AtCommandResult handleTestCommand()" static="false" return="track" permission="com.android.voicemail.permission.ADD_VOICEMAIL,android.permission.BLUETOOTH,android.permission.READ_SOCIAL_STREAM,android.permission.READ_CALL_LOG,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="IBluetooth$Stub">
				<method signature="int addRfcommServiceRecord(java.lang.String, android.os.ParcelUuid, int, android.os.IBinder)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean allowIncomingProfileConnect(android.bluetooth.BluetoothDevice, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean cancelBondProcess(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean cancelDiscovery()" static="false" return="" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean cancelPairingUserInput(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean changeApplicationBluetoothState(boolean, android.bluetooth.IBluetoothStateChangeCallback, android.os.IBinder)" static="false" return="" param1="track" param2="track, listener, trackListener" param3="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean connectChannelToSink(android.bluetooth.BluetoothDevice, android.bluetooth.BluetoothHealthAppConfiguration, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean connectChannelToSource(android.bluetooth.BluetoothDevice, android.bluetooth.BluetoothHealthAppConfiguration)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean connectHeadset(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean connectInputDevice(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean connectPanDevice(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean createBond(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean createBondOutOfBand(java.lang.String, byte[], byte[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean disable(boolean)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean disconnectChannel(android.bluetooth.BluetoothDevice, android.bluetooth.BluetoothHealthAppConfiguration, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean disconnectHeadset(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean disconnectInputDevice(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean disconnectPanDevice(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean enable()" static="false" return="" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean enableNoAutoConnect()" static="false" return="" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean fetchRemoteUuids(java.lang.String, android.os.ParcelUuid, android.bluetooth.IBluetoothCallback)" static="false" return="" param1="track" param2="track" param3="track, listener, trackListener" permission="android.permission.BLUETOOTH"/>
				<method signature="java.lang.String getAddress()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getBluetoothState()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="int getBondState(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.util.List getConnectedHealthDevices()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.util.List getConnectedInputDevices()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.util.List getConnectedPanDevices()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getDiscoverableTimeout()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="int getHealthDeviceConnectionState(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.util.List getHealthDevicesMatchingConnectionStates(int[])" static="false" return="track" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getInputDeviceConnectionState(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getInputDevicePriority(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.util.List getInputDevicesMatchingConnectionStates(int[])" static="false" return="track" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="android.os.ParcelFileDescriptor getMainChannelFd(android.bluetooth.BluetoothDevice, android.bluetooth.BluetoothHealthAppConfiguration)" static="false" return="track" param1="track" param2="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.lang.String getName()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getPanDeviceConnectionState(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.util.List getPanDevicesMatchingConnectionStates(int[])" static="false" return="track" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getProfileConnectionState(int)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.lang.String getRemoteAlias(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getRemoteClass(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.lang.String getRemoteName(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getRemoteServiceChannel(java.lang.String, android.os.ParcelUuid)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH"/>
				<method signature="android.os.ParcelUuid[] getRemoteUuids(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getScanMode()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean getTrustState(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="android.os.ParcelUuid[] getUuids()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean isDiscovering()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean isEnabled()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean isTetheringOn()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="java.lang.String[] listBonds()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean notifyIncomingConnection(java.lang.String, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="byte[] readOutOfBandData()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean registerAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration, android.bluetooth.IBluetoothHealthCallback)" static="false" return="" param1="track" param2="track, listener, trackListener" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean removeBond(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="void removeServiceRecord(int)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="void setBluetoothTethering(boolean)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.CHANGE_NETWORK_STATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean setDeviceOutOfBandData(java.lang.String, byte[], byte[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean setDiscoverableTimeout(int)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean setInputDevicePriority(android.bluetooth.BluetoothDevice, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean setName(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean setPairingConfirmation(java.lang.String, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean setPasskey(java.lang.String, int)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean setPin(java.lang.String, byte[])" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean setRemoteAlias(java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean setRemoteOutOfBandData(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean setScanMode(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean setTrust(java.lang.String, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean startDiscovery()" static="false" return="" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean unregisterAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
			</class>
			<class name="BluetoothDeviceProfileState$OutgoingHandsfree">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="AtParser">
				<method signature="android.bluetooth.AtCommandResult process(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.READ_PHONE_STATE,com.android.voicemail.permission.ADD_VOICEMAIL,android.permission.BLUETOOTH,android.permission.READ_SOCIAL_STREAM,android.permission.BROADCAST_STICKY,android.permission.VIBRATE,android.permission.READ_CALL_LOG,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="BluetoothDeviceProfileState">
				<method signature="void cancelCommand(int)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean processCommand(int)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="BluetoothServerSocket">
				<method signature="void &lt;init&gt;(int, boolean, boolean, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.BLUETOOTH"/>
				<method signature="android.bluetooth.BluetoothSocket accept()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="android.bluetooth.BluetoothSocket accept(int)" static="false" return="track" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="void close()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="int getChannel()" static="false" return="" permission="android.permission.BLUETOOTH"/>
			</class>
			<class name="HeadsetBase">
				<method signature="void finalize()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void handleInput(java.lang.String)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,com.android.voicemail.permission.ADD_VOICEMAIL,android.permission.BLUETOOTH,android.permission.READ_SOCIAL_STREAM,android.permission.BROADCAST_STICKY,android.permission.VIBRATE,android.permission.READ_CALL_LOG,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="IBluetoothHeadset">
				<method signature="boolean acceptIncomingConnect(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean connect(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean connectHeadsetInternal(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean createIncomingConnect(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean disconnect(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean disconnectHeadsetInternal(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="int getBatteryUsageHint(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.util.List getConnectedDevices()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getConnectionState(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.util.List getDevicesMatchingConnectionStates(int[])" static="false" return="track" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getPriority(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean isAudioConnected(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean setPriority(android.bluetooth.BluetoothDevice, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean startScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean startVoiceRecognition(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean stopScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean stopVoiceRecognition(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="BluetoothDeviceProfileState$IncomingHid">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="BluetoothSocket">
				<method signature="void &lt;init&gt;(int, int, boolean, boolean, android.bluetooth.BluetoothDevice, int, android.os.ParcelUuid)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" param7="track" permission="android.permission.BLUETOOTH"/>
				<method signature="void close()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="void connect()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="java.io.InputStream getInputStream()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.io.OutputStream getOutputStream()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="android.bluetooth.BluetoothDevice getRemoteDevice()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean isConnected()" static="false" return="" permission="android.permission.BLUETOOTH"/>
			</class>
			<class name="BluetoothAdapter">
				<method signature="boolean cancelDiscovery()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean changeApplicationBluetoothState(boolean, android.bluetooth.BluetoothAdapter$BluetoothStateChangeCallback)" static="false" return="" param1="track" param2="track, listener, trackListener" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean disable()" static="false" return="" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean enable()" static="false" return="" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean enableNoAutoConnect()" static="false" return="" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="java.lang.String getAddress()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.util.Set getBondedDevices()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getConnectionState()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="int getDiscoverableTimeout()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="java.lang.String getName()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getProfileConnectionState(int)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean getProfileProxy(android.content.Context, android.bluetooth.BluetoothProfile$ServiceListener, int)" static="false" param1="" param2="listener" param3="" permission=""/>
				<method signature="int getScanMode()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="int getState()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="android.os.ParcelUuid[] getUuids()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean isDiscovering()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean isEnabled()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="android.bluetooth.BluetoothServerSocket listenUsingEncryptedRfcommOn(int)" static="false" return="track" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="android.bluetooth.BluetoothServerSocket listenUsingEncryptedRfcommWithServiceRecord(java.lang.String, java.util.UUID)" static="false" return="track" param1="track" param2="track" permission="android.permission.BLUETOOTH"/>
				<method signature="android.bluetooth.BluetoothServerSocket listenUsingInsecureRfcommOn(int)" static="false" return="track" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="android.bluetooth.BluetoothServerSocket listenUsingInsecureRfcommWithServiceRecord(java.lang.String, java.util.UUID)" static="false" return="track" param1="track" param2="track" permission="android.permission.BLUETOOTH"/>
				<method signature="android.bluetooth.BluetoothServerSocket listenUsingRfcommOn(int)" static="false" return="track" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="android.bluetooth.BluetoothServerSocket listenUsingRfcommWithServiceRecord(java.lang.String, java.util.UUID)" static="false" return="track" param1="track" param2="track" permission="android.permission.BLUETOOTH"/>
				<method signature="android.bluetooth.BluetoothServerSocket listenUsingScoOn()" static="true" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="android.util.Pair readOutOfBandData()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="void setDiscoverableTimeout(int)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean setName(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean setScanMode(int)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean setScanMode(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean startDiscovery()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN"/>
			</class>
			<class name="IBluetooth">
				<method signature="int addRfcommServiceRecord(java.lang.String, android.os.ParcelUuid, int, android.os.IBinder)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean allowIncomingProfileConnect(android.bluetooth.BluetoothDevice, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean cancelBondProcess(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean cancelDiscovery()" static="false" return="" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean cancelPairingUserInput(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean changeApplicationBluetoothState(boolean, android.bluetooth.IBluetoothStateChangeCallback, android.os.IBinder)" static="false" return="" param1="track" param2="track, listener, trackListener" param3="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean connectChannelToSink(android.bluetooth.BluetoothDevice, android.bluetooth.BluetoothHealthAppConfiguration, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean connectChannelToSource(android.bluetooth.BluetoothDevice, android.bluetooth.BluetoothHealthAppConfiguration)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean connectHeadset(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean connectInputDevice(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean connectPanDevice(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean createBond(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean createBondOutOfBand(java.lang.String, byte[], byte[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean disable(boolean)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean disconnectChannel(android.bluetooth.BluetoothDevice, android.bluetooth.BluetoothHealthAppConfiguration, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean disconnectHeadset(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean disconnectInputDevice(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean disconnectPanDevice(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean enable()" static="false" return="" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean enableNoAutoConnect()" static="false" return="" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean fetchRemoteUuids(java.lang.String, android.os.ParcelUuid, android.bluetooth.IBluetoothCallback)" static="false" return="" param1="track" param2="track" param3="track, listener, trackListener" permission="android.permission.BLUETOOTH"/>
				<method signature="java.lang.String getAddress()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getBluetoothState()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="int getBondState(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.util.List getConnectedHealthDevices()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.util.List getConnectedInputDevices()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.util.List getConnectedPanDevices()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getDiscoverableTimeout()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="int getHealthDeviceConnectionState(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.util.List getHealthDevicesMatchingConnectionStates(int[])" static="false" return="track" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getInputDeviceConnectionState(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getInputDevicePriority(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.util.List getInputDevicesMatchingConnectionStates(int[])" static="false" return="track" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="android.os.ParcelFileDescriptor getMainChannelFd(android.bluetooth.BluetoothDevice, android.bluetooth.BluetoothHealthAppConfiguration)" static="false" return="track" param1="track" param2="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.lang.String getName()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getPanDeviceConnectionState(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.util.List getPanDevicesMatchingConnectionStates(int[])" static="false" return="track" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getProfileConnectionState(int)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.lang.String getRemoteAlias(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getRemoteClass(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.lang.String getRemoteName(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getRemoteServiceChannel(java.lang.String, android.os.ParcelUuid)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH"/>
				<method signature="android.os.ParcelUuid[] getRemoteUuids(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getScanMode()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean getTrustState(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="android.os.ParcelUuid[] getUuids()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean isDiscovering()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean isEnabled()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean isTetheringOn()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="java.lang.String[] listBonds()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean notifyIncomingConnection(java.lang.String, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH"/>
				<method signature="byte[] readOutOfBandData()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean registerAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration, android.bluetooth.IBluetoothHealthCallback)" static="false" return="" param1="track" param2="track, listener, trackListener" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean removeBond(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="void removeServiceRecord(int)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="void setBluetoothTethering(boolean)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.CHANGE_NETWORK_STATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean setDeviceOutOfBandData(java.lang.String, byte[], byte[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean setDiscoverableTimeout(int)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean setInputDevicePriority(android.bluetooth.BluetoothDevice, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean setName(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean setPairingConfirmation(java.lang.String, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean setPasskey(java.lang.String, int)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean setPin(java.lang.String, byte[])" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean setRemoteAlias(java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean setRemoteOutOfBandData(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean setScanMode(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean setTrust(java.lang.String, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean startDiscovery()" static="false" return="" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean unregisterAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
			</class>
			<class name="BluetoothPan">
				<method signature="boolean connect(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean disconnect(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="java.util.List getConnectedDevices()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getConnectionState(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.util.List getDevicesMatchingConnectionStates(int[])" static="false" return="track" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean isTetheringOn()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="void setBluetoothTethering(boolean)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.CHANGE_NETWORK_STATE,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="BluetoothDeviceProfileState$IncomingA2dp">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="BluetoothPbap">
				<method signature="void &lt;init&gt;(android.content.Context, android.bluetooth.BluetoothPbap$ServiceListener)" static="false" param1="" param2="listener" permission=""/>
				<method signature="boolean disconnect()" static="false" return="" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="android.bluetooth.BluetoothDevice getClient()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getState()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean isConnected(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
			</class>
			<class name="IBluetoothPbap">
				<method signature="boolean connect(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="void disconnect()" static="false" return="" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="android.bluetooth.BluetoothDevice getClient()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getState()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean isConnected(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
			</class>
			<class name="BluetoothHealth">
				<method signature="boolean connectChannelToSink(android.bluetooth.BluetoothDevice, android.bluetooth.BluetoothHealthAppConfiguration, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean connectChannelToSource(android.bluetooth.BluetoothDevice, android.bluetooth.BluetoothHealthAppConfiguration)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean disconnectChannel(android.bluetooth.BluetoothDevice, android.bluetooth.BluetoothHealthAppConfiguration, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.util.List getConnectedDevices()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getConnectionState(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.util.List getDevicesMatchingConnectionStates(int[])" static="false" return="track" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="android.os.ParcelFileDescriptor getMainChannelFd(android.bluetooth.BluetoothDevice, android.bluetooth.BluetoothHealthAppConfiguration)" static="false" return="track" param1="track" param2="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean registerAppConfiguration(java.lang.String, int, int, int, android.bluetooth.BluetoothHealthCallback)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean registerSinkAppConfiguration(java.lang.String, int, android.bluetooth.BluetoothHealthCallback)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean unregisterAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
			</class>
			<class name="BluetoothDeviceProfileState$IncomingHandsfree">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="IBluetoothA2dp">
				<method signature="boolean allowIncomingConnect(android.bluetooth.BluetoothDevice, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean connect(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean connectSinkInternal(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean disconnect(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean disconnectSinkInternal(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="java.util.List getConnectedDevices()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getConnectionState(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.util.List getDevicesMatchingConnectionStates(int[])" static="false" return="track" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getPriority(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean isA2dpPlaying(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean resumeSink(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean setPriority(android.bluetooth.BluetoothDevice, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean suspendSink(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="BluetoothHeadset">
				<method signature="boolean acceptIncomingConnect(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean cancelConnectThread()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean connect(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean connectHeadsetInternal(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean createIncomingConnect(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean disconnect(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean disconnectHeadsetInternal(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="int getAudioState(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getBatteryUsageHint(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.util.List getConnectedDevices()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getConnectionState(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.util.List getDevicesMatchingConnectionStates(int[])" static="false" return="track" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getPriority(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean isAudioConnected(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean setAudioState(android.bluetooth.BluetoothDevice, int)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean setPriority(android.bluetooth.BluetoothDevice, int)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean startScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean startVoiceRecognition(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean stopScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean stopVoiceRecognition(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="BluetoothDeviceProfileState$OutgoingHid">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="BluetoothA2dp">
				<method signature="boolean allowIncomingConnect(android.bluetooth.BluetoothDevice, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean connect(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean disconnect(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="java.util.List getConnectedDevices()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getConnectionState(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.util.List getDevicesMatchingConnectionStates(int[])" static="false" return="track" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getPriority(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean isA2dpPlaying(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean resumeSink(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean setPriority(android.bluetooth.BluetoothDevice, int)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean shouldSendVolumeKeys(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean suspendSink(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="BluetoothDeviceProfileState$OutgoingA2dp">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="BluetoothProfileState$StableState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
		</package>
		<package name="android.os">
			<class name="PowerManager$WakeLock">
				<method signature="void acquire()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void acquire(long)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void finalize()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void release()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void release(int)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="CancellationSignal">
				<method signature="void setOnCancelListener(android.os.CancellationSignal$OnCancelListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="SystemVibrator">
				<method signature="void cancel()" static="false" return="" permission="android.permission.VIBRATE"/>
				<method signature="void vibrate(long)" static="false" return="" param1="track" permission="android.permission.VIBRATE,android.permission.WAKE_LOCK"/>
				<method signature="void vibrate(long[], int)" static="false" return="" param1="track" param2="track" permission="android.permission.VIBRATE"/>
			</class>
			<class name="IVibratorService">
				<method signature="void cancelVibrate(android.os.IBinder)" static="false" return="" param1="track" permission="android.permission.VIBRATE"/>
				<method signature="void vibrate(long, android.os.IBinder)" static="false" return="" param1="track" param2="track" permission="android.permission.VIBRATE,android.permission.WAKE_LOCK"/>
				<method signature="void vibratePattern(long[], int, android.os.IBinder)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.VIBRATE"/>
			</class>
			<class name="Handler">
				<method signature="void &lt;init&gt;(android.os.Handler$Callback)" static="false" param1="listener" permission=""/>
				<method signature="void &lt;init&gt;(android.os.Looper, android.os.Handler$Callback)" static="false" param1="" param2="listener" permission=""/>
			</class>
			<class name="IPowerManager$Stub">
				<method signature="void acquireWakeLock(int, android.os.IBinder, java.lang.String, android.os.WorkSource)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SETTINGS,android.permission.WAKE_LOCK"/>
				<method signature="void releaseWakeLock(android.os.IBinder, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setStayOnSetting(int)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="Vibrator">
				<method signature="void cancel()" static="false" return="" permission="android.permission.VIBRATE"/>
				<method signature="void vibrate(long)" static="false" return="" param1="track" permission="android.permission.VIBRATE,android.permission.WAKE_LOCK"/>
				<method signature="void vibrate(long[], int)" static="false" return="" param1="track" param2="track" permission="android.permission.VIBRATE"/>
			</class>
			<class name="IPowerManager">
				<method signature="void acquireWakeLock(int, android.os.IBinder, java.lang.String, android.os.WorkSource)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void releaseWakeLock(android.os.IBinder, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setStayOnSetting(int)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="CommonTimeConfig">
				<method signature="void setServerDiedListener(android.os.CommonTimeConfig$OnServerDiedListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="IHardwareService">
				<method signature="void setFlashlightEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.FLASHLIGHT"/>
			</class>
			<class name="IHardwareService$Stub">
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.FLASHLIGHT"/>
				<method signature="void setFlashlightEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.FLASHLIGHT"/>
			</class>
			<class name="IVibratorService$Stub">
				<method signature="void cancelVibrate(android.os.IBinder)" static="false" return="" param1="track" permission="android.permission.VIBRATE"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.VIBRATE,android.permission.WAKE_LOCK"/>
				<method signature="void vibrate(long, android.os.IBinder)" static="false" return="" param1="track" param2="track" permission="android.permission.VIBRATE,android.permission.WAKE_LOCK"/>
				<method signature="void vibratePattern(long[], int, android.os.IBinder)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.VIBRATE"/>
			</class>
			<class name="CommonClock">
				<method signature="void setServerDiedListener(android.os.CommonClock$OnServerDiedListener)" static="false" param1="listener" permission=""/>
				<method signature="void setTimelineChangedListener(android.os.CommonClock$OnTimelineChangedListener)" static="false" param1="listener" permission=""/>
			</class>
		</package>
		<package name="android.media.videoeditor">
			<class name="AudioTrack">
				<method signature="void extractAudioWaveform(android.media.videoeditor.ExtractAudioWaveformProgressListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="VideoEditorImpl">
				<method signature="void export(java.lang.String, int, int, int, int, android.media.videoeditor.VideoEditor$ExportProgressListener)" static="false" param1="" param2="" param3="" param4="" param5="" param6="listener" permission=""/>
				<method signature="void export(java.lang.String, int, int, android.media.videoeditor.VideoEditor$ExportProgressListener)" static="false" param1="" param2="" param3="" param4="listener" permission=""/>
				<method signature="void generatePreview(android.media.videoeditor.VideoEditor$MediaProcessingProgressListener)" static="false" param1="listener" permission=""/>
				<method signature="void startPreview(android.view.SurfaceHolder, long, long, boolean, int, android.media.videoeditor.VideoEditor$PreviewProgressListener)" static="false" param1="" param2="" param3="" param4="" param5="" param6="listener" permission=""/>
			</class>
			<class name="MediaImageItem">
				<method signature="void getThumbnailList(int, int, long, long, int, int[], android.media.videoeditor.MediaItem$GetThumbnailListCallback)" static="false" param1="" param2="" param3="" param4="" param5="" param6="" param7="listener" permission=""/>
			</class>
			<class name="VideoEditor">
				<method signature="void export(java.lang.String, int, int, int, int, android.media.videoeditor.VideoEditor$ExportProgressListener)" static="false" param1="" param2="" param3="" param4="" param5="" param6="listener" permission=""/>
				<method signature="void export(java.lang.String, int, int, android.media.videoeditor.VideoEditor$ExportProgressListener)" static="false" param1="" param2="" param3="" param4="listener" permission=""/>
				<method signature="void generatePreview(android.media.videoeditor.VideoEditor$MediaProcessingProgressListener)" static="false" param1="listener" permission=""/>
				<method signature="void startPreview(android.view.SurfaceHolder, long, long, boolean, int, android.media.videoeditor.VideoEditor$PreviewProgressListener)" static="false" param1="" param2="" param3="" param4="" param5="" param6="listener" permission=""/>
			</class>
			<class name="MediaItem">
				<method signature="void getThumbnailList(int, int, long, long, int, int[], android.media.videoeditor.MediaItem$GetThumbnailListCallback)" static="false" param1="" param2="" param3="" param4="" param5="" param6="" param7="listener" permission=""/>
			</class>
			<class name="MediaVideoItem">
				<method signature="void extractAudioWaveform(android.media.videoeditor.ExtractAudioWaveformProgressListener)" static="false" param1="listener" permission=""/>
				<method signature="void getThumbnailList(int, int, long, long, int, int[], android.media.videoeditor.MediaItem$GetThumbnailListCallback)" static="false" param1="" param2="" param3="" param4="" param5="" param6="" param7="listener" permission=""/>
			</class>
		</package>
		<package name="com.android.server.accessibility">
			<class name="AccessibilityManagerService">
				<method signature="void &lt;init&gt;(android.content.Context)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS"/>
				<method signature="int addAccessibilityInteractionConnection(android.view.IWindow, android.view.accessibility.IAccessibilityInteractionConnection)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS"/>
				<method signature="int addClient(android.view.accessibility.IAccessibilityManagerClient)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS"/>
				<method signature="java.util.List getEnabledAccessibilityServiceList(int)" static="false" return="track" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS"/>
				<method signature="java.util.List getInstalledAccessibilityServiceList()" static="false" return="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS"/>
				<method signature="void interrupt()" static="false" return="" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void registerUiTestAutomationService(android.accessibilityservice.IAccessibilityServiceClient, android.accessibilityservice.AccessibilityServiceInfo)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS"/>
				<method signature="void removeAccessibilityInteractionConnection(android.view.IWindow)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS"/>
				<method signature="boolean sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS"/>
				<method signature="void touchExplorationGestureEnded()" static="false" return="" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS"/>
				<method signature="void touchExplorationGestureStarted()" static="false" return="" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS"/>
				<method signature="void unregisterUiTestAutomationService(android.accessibilityservice.IAccessibilityServiceClient)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS"/>
			</class>
		</package>
		<package name="com.android.internal.app">
			<class name="IBatteryStats$Stub">
				<method signature="long getAwakeTimeBattery()" static="false" return="" permission="android.permission.BATTERY_STATS"/>
				<method signature="long getAwakeTimePlugged()" static="false" return="" permission="android.permission.BATTERY_STATS"/>
				<method signature="byte[] getStatistics()" static="false" return="track" permission="android.permission.BLUETOOTH,android.permission.BATTERY_STATS"/>
				<method signature="void noteBluetoothOn()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.BLUETOOTH,android.permission.BATTERY_STATS"/>
				<method signature="void setBatteryState(int, int, int, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.BLUETOOTH"/>
			</class>
			<class name="ChooserActivity">
				<method signature="void onCreate(android.os.Bundle)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.INTERNET,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="void onCreate(android.os.Bundle, android.content.Intent, java.lang.CharSequence, android.content.Intent[], java.util.List, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.BLUETOOTH,android.permission.INTERNET,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="void onStop()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="AlertActivity">
				<method signature="void onCreate(android.os.Bundle)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.INTERNET,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="void onPause()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void onStop()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="LocalePicker">
				<method signature="void onListItemClick(android.widget.ListView, android.view.View, int, long)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void updateLocale(java.util.Locale)" static="true" return="" param0="track" permission="android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
			</class>
			<class name="ExternalMediaFormatActivity">
				<method signature="void onCreate(android.os.Bundle)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.INTERNET,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="void onPause()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="NetInitiatedActivity">
				<method signature="void onCreate(android.os.Bundle)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.INTERNET,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="void onPause()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="IBatteryStats">
				<method signature="long getAwakeTimeBattery()" static="false" return="" permission="android.permission.BATTERY_STATS"/>
				<method signature="long getAwakeTimePlugged()" static="false" return="" permission="android.permission.BATTERY_STATS"/>
				<method signature="byte[] getStatistics()" static="false" return="track" permission="android.permission.BLUETOOTH,android.permission.BATTERY_STATS"/>
				<method signature="void noteBluetoothOn()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="void setBatteryState(int, int, int, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.BLUETOOTH"/>
			</class>
			<class name="LocalePicker$LocaleSelectionListener">
				<method signature="void onLocaleSelected(java.util.Locale)" static="false" return="" param1="track" permission="android.permission.CHANGE_CONFIGURATION"/>
			</class>
			<class name="ResolverActivity">
				<method signature="void onCreate(android.os.Bundle)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.INTERNET,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="void onCreate(android.os.Bundle, android.content.Intent, java.lang.CharSequence, android.content.Intent[], java.util.List, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.BLUETOOTH,android.permission.INTERNET,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="void onStop()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="ResolverActivity$1">
				<method signature="boolean onHandleForceStop(android.content.Intent, java.lang.String[], int, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void onPackageRemoved(java.lang.String, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void onReceive(android.content.Context, android.content.Intent)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
		</package>
		<package name="com.android.server.input">
			<class name="InputManagerService">
				<method signature="void start()" static="false" return="" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void systemReady(android.server.BluetoothService)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
			</class>
			<class name="InputManagerService$Callbacks">
				<method signature="android.view.KeyEvent dispatchUnhandledKey(com.android.server.input.InputWindowHandle, android.view.KeyEvent, int)" static="false" return="track" param1="track" param2="track" param3="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.CALL_PHONE,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="long interceptKeyBeforeDispatching(com.android.server.input.InputWindowHandle, android.view.KeyEvent, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="int interceptKeyBeforeQueueing(android.view.KeyEvent, int, boolean)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.CALL_PHONE,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="int interceptMotionBeforeQueueingWhenScreenOff(int)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="long notifyANR(com.android.server.input.InputApplicationHandle, com.android.server.input.InputWindowHandle)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void notifyLidSwitchChanged(long, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
		</package>
		<package name="android.filterfw.core">
			<class name="SyncRunner">
				<method signature="void close()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="boolean performStep()" static="false" return="" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void processFilterNode(android.filterfw.core.Filter)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void run()" static="false" return="" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void setDoneCallback(android.filterfw.core.GraphRunner$OnRunnerDoneListener)" static="false" param1="listener" permission=""/>
				<method signature="int step()" static="false" return="" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
			</class>
			<class name="InputPort">
				<method signature="void transfer(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="FieldPort">
				<method signature="void setFieldFrame(android.filterfw.core.Frame, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void transfer(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="FinalPort">
				<method signature="void setFieldFrame(android.filterfw.core.Frame, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void transfer(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="AsyncRunner">
				<method signature="void close()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setDoneCallback(android.filterfw.core.GraphRunner$OnRunnerDoneListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="FilterFunction">
				<method signature="void close()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="android.filterfw.core.Frame execute(android.filterfw.core.KeyValueMap)" static="false" return="track" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="android.filterfw.core.Frame executeWithArgList(java.lang.Object[])" static="false" return="track" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void tearDown()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="FilterGraph">
				<method signature="void closeFilters(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void tearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="Filter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void initProgramInputs(android.filterfw.core.Program, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void process(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void transferInputPortFrame(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="FilterSurfaceView">
				<method signature="void bindToListener(android.view.SurfaceHolder$Callback, android.filterfw.core.GLEnvironment)" static="false" param1="listener" param2="" permission=""/>
			</class>
			<class name="GraphRunner">
				<method signature="void close()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void run()" static="false" return="" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void setDoneCallback(android.filterfw.core.GraphRunner$OnRunnerDoneListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="FilterContext">
				<method signature="void tearDown()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
		</package>
		<package name="android.location">
			<class name="CountryDetector">
				<method signature="void addCountryListener(android.location.CountryListener, android.os.Looper)" static="false" param1="listener" param2="" permission=""/>
			</class>
			<class name="IGpsStatusProvider">
				<method signature="void addGpsStatusListener(android.location.IGpsStatusListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="ICountryDetector">
				<method signature="void addCountryListener(android.location.ICountryListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="ILocationManager">
				<method signature="boolean addGpsStatusListener(android.location.IGpsStatusListener)" static="false" return="" param1="track, listener, trackListener" permission="android.permission.ACCESS_FINE_LOCATION"/>
				<method signature="void addTestProvider(java.lang.String, boolean, boolean, boolean, boolean, boolean, boolean, boolean, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" param7="track" param8="track" param9="track" param10="track" permission="android.permission.ACCESS_MOCK_LOCATION"/>
				<method signature="void clearTestProviderEnabled(java.lang.String)" static="false" return="" param1="track" permission="android.permission.ACCESS_MOCK_LOCATION"/>
				<method signature="void clearTestProviderLocation(java.lang.String)" static="false" return="" param1="track" permission="android.permission.ACCESS_MOCK_LOCATION"/>
				<method signature="void clearTestProviderStatus(java.lang.String)" static="false" return="" param1="track" permission="android.permission.ACCESS_MOCK_LOCATION"/>
				<method signature="java.lang.String getBestProvider(android.location.Criteria, boolean)" static="false" return="track" param1="track" param2="track" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="android.os.Bundle getProviderInfo(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="java.util.List getProviders(android.location.Criteria, boolean)" static="false" return="track" param1="track" param2="track" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="boolean isProviderEnabled(java.lang.String)" static="false" return="" param1="track" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void locationCallbackFinished(android.location.ILocationListener)" static="false" param1="listener" permission=""/>
				<method signature="void removeTestProvider(java.lang.String)" static="false" return="" param1="track" permission="android.permission.ACCESS_MOCK_LOCATION"/>
				<method signature="void requestLocationUpdates(java.lang.String, android.location.Criteria, long, float, boolean, android.location.ILocationListener, java.lang.String)" static="false" param1="" param2="" param3="" param4="" param5="" param6="listener" param7="" permission=""/>
				<method signature="boolean sendExtraCommand(java.lang.String, java.lang.String, android.os.Bundle)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.ACCESS_LOCATION_EXTRA_COMMANDS,android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void setTestProviderEnabled(java.lang.String, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_MOCK_LOCATION"/>
				<method signature="void setTestProviderLocation(java.lang.String, android.location.Location)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_MOCK_LOCATION"/>
				<method signature="void setTestProviderStatus(java.lang.String, int, android.os.Bundle, long)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.ACCESS_MOCK_LOCATION"/>
			</class>
			<class name="ILocationManager$Stub">
				<method signature="boolean addGpsStatusListener(android.location.IGpsStatusListener)" static="false" return="" param1="track, listener, trackListener" permission="android.permission.ACCESS_FINE_LOCATION"/>
				<method signature="void addTestProvider(java.lang.String, boolean, boolean, boolean, boolean, boolean, boolean, boolean, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" param7="track" param8="track" param9="track" param10="track" permission="android.permission.ACCESS_MOCK_LOCATION"/>
				<method signature="void clearTestProviderEnabled(java.lang.String)" static="false" return="" param1="track" permission="android.permission.ACCESS_MOCK_LOCATION"/>
				<method signature="void clearTestProviderLocation(java.lang.String)" static="false" return="" param1="track" permission="android.permission.ACCESS_MOCK_LOCATION"/>
				<method signature="void clearTestProviderStatus(java.lang.String)" static="false" return="" param1="track" permission="android.permission.ACCESS_MOCK_LOCATION"/>
				<method signature="java.lang.String getBestProvider(android.location.Criteria, boolean)" static="false" return="track" param1="track" param2="track" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="android.os.Bundle getProviderInfo(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="java.util.List getProviders(android.location.Criteria, boolean)" static="false" return="track" param1="track" param2="track" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="boolean isProviderEnabled(java.lang.String)" static="false" return="" param1="track" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.ACCESS_LOCATION_EXTRA_COMMANDS,android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.ACCESS_MOCK_LOCATION"/>
				<method signature="void removeTestProvider(java.lang.String)" static="false" return="" param1="track" permission="android.permission.ACCESS_MOCK_LOCATION"/>
				<method signature="boolean sendExtraCommand(java.lang.String, java.lang.String, android.os.Bundle)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.ACCESS_LOCATION_EXTRA_COMMANDS,android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void setTestProviderEnabled(java.lang.String, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_MOCK_LOCATION"/>
				<method signature="void setTestProviderLocation(java.lang.String, android.location.Location)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_MOCK_LOCATION"/>
				<method signature="void setTestProviderStatus(java.lang.String, int, android.os.Bundle, long)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.ACCESS_MOCK_LOCATION"/>
			</class>
			<class name="LocationManager">
				<method signature="boolean addGpsStatusListener(android.location.GpsStatus$Listener)" static="false" return="" param1="track, listener, trackListener" permission="android.permission.ACCESS_FINE_LOCATION"/>
				<method signature="boolean addNmeaListener(android.location.GpsStatus$NmeaListener)" static="false" return="" param1="track, listener, trackListener" permission="android.permission.ACCESS_FINE_LOCATION"/>
				<method signature="void addProximityAlert(double, double, float, long, android.app.PendingIntent)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void addTestProvider(java.lang.String, boolean, boolean, boolean, boolean, boolean, boolean, boolean, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" param7="track" param8="track" param9="track" param10="track" permission="android.permission.ACCESS_MOCK_LOCATION"/>
				<method signature="void clearTestProviderEnabled(java.lang.String)" static="false" return="" param1="track" permission="android.permission.ACCESS_MOCK_LOCATION"/>
				<method signature="void clearTestProviderLocation(java.lang.String)" static="false" return="" param1="track" permission="android.permission.ACCESS_MOCK_LOCATION"/>
				<method signature="void clearTestProviderStatus(java.lang.String)" static="false" return="" param1="track" permission="android.permission.ACCESS_MOCK_LOCATION"/>
				<method signature="java.lang.String getBestProvider(android.location.Criteria, boolean)" static="false" return="track" param1="track" param2="track" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="android.location.Location getLastKnownLocation(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="android.location.LocationProvider getProvider(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="java.util.List getProviders(android.location.Criteria, boolean)" static="false" return="track" param1="track" param2="track" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="java.util.List getProviders(boolean)" static="false" return="track" param1="track" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="boolean isProviderEnabled(java.lang.String)" static="false" return="" param1="track" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void removeTestProvider(java.lang.String)" static="false" return="" param1="track" permission="android.permission.ACCESS_MOCK_LOCATION"/>
				<method signature="void requestLocationUpdates(long, float, android.location.Criteria, android.app.PendingIntent)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void requestLocationUpdates(long, float, android.location.Criteria, android.location.LocationListener, android.os.Looper)" static="false" return="" param1="track" param2="track" param3="track" param4="track, listener, trackListener" param5="track" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void requestLocationUpdates(java.lang.String, long, float, android.app.PendingIntent)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void requestLocationUpdates(java.lang.String, long, float, android.location.LocationListener)" static="false" return="" param1="track" param2="track" param3="track" param4="track, listener, trackListener" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void requestLocationUpdates(java.lang.String, long, float, android.location.LocationListener, android.os.Looper)" static="false" return="" param1="track" param2="track" param3="track" param4="track, listener, trackListener" param5="track" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void requestSingleUpdate(android.location.Criteria, android.app.PendingIntent)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void requestSingleUpdate(android.location.Criteria, android.location.LocationListener, android.os.Looper)" static="false" return="" param1="track" param2="track, listener, trackListener" param3="track" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void requestSingleUpdate(java.lang.String, android.app.PendingIntent)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void requestSingleUpdate(java.lang.String, android.location.LocationListener, android.os.Looper)" static="false" return="" param1="track" param2="track, listener, trackListener" param3="track" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="boolean sendExtraCommand(java.lang.String, java.lang.String, android.os.Bundle)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.ACCESS_LOCATION_EXTRA_COMMANDS,android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void setTestProviderEnabled(java.lang.String, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_MOCK_LOCATION"/>
				<method signature="void setTestProviderLocation(java.lang.String, android.location.Location)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_MOCK_LOCATION"/>
				<method signature="void setTestProviderStatus(java.lang.String, int, android.os.Bundle, long)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.ACCESS_MOCK_LOCATION"/>
			</class>
		</package>
		<package name="com.android.mail.providers">
			<class name="UIProvider">
				<method signature="void incrementRecipientsTimesContacted(android.content.Context, java.lang.String)" static="true" return="" param0="track" param1="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
		</package>
		<package name="java.awt">
			<class name="KeyboardFocusManager">
				<method signature="void addPropertyChangeListener(java.beans.PropertyChangeListener)" static="false" param1="listener" permission=""/>
				<method signature="void addPropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)" static="false" param1="" param2="listener" permission=""/>
				<method signature="void addVetoableChangeListener(java.beans.VetoableChangeListener)" static="false" param1="listener" permission=""/>
				<method signature="void addVetoableChangeListener(java.lang.String, java.beans.VetoableChangeListener)" static="false" param1="" param2="listener" permission=""/>
			</class>
			<class name="Toolkit">
				<method signature="void addPropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)" static="false" param1="" param2="listener" permission=""/>
			</class>
			<class name="Container">
				<method signature="void addPropertyChangeListener(java.beans.PropertyChangeListener)" static="false" param1="listener" permission=""/>
				<method signature="void addPropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)" static="false" param1="" param2="listener" permission=""/>
			</class>
			<class name="Component">
				<method signature="void addPropertyChangeListener(java.beans.PropertyChangeListener)" static="false" param1="listener" permission=""/>
				<method signature="void addPropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)" static="false" param1="" param2="listener" permission=""/>
			</class>
			<class name="Container$AccessibleAWTContainer">
				<method signature="void addPropertyChangeListener(java.beans.PropertyChangeListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="Window">
				<method signature="void addPropertyChangeListener(java.beans.PropertyChangeListener)" static="false" param1="listener" permission=""/>
				<method signature="void addPropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)" static="false" param1="" param2="listener" permission=""/>
			</class>
			<class name="SystemTray">
				<method signature="void addPropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)" static="false" param1="" param2="listener" permission=""/>
			</class>
			<class name="Component$AccessibleAWTComponent">
				<method signature="void addPropertyChangeListener(java.beans.PropertyChangeListener)" static="false" param1="listener" permission=""/>
			</class>
		</package>
		<package name="javax.xml.transform">
			<class name="Transformer">
				<method signature="void setErrorListener(javax.xml.transform.ErrorListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="TransformerFactory">
				<method signature="void setErrorListener(javax.xml.transform.ErrorListener)" static="false" param1="listener" permission=""/>
			</class>
		</package>
		<package name="android.content">
			<class name="IContentService">
				<method signature="void addPeriodicSync(android.accounts.Account, java.lang.String, android.os.Bundle, long)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SYNC_SETTINGS"/>
				<method signature="java.util.List getCurrentSyncs()" static="false" return="track" permission="android.permission.READ_SYNC_STATS"/>
				<method signature="int getIsSyncable(android.accounts.Account, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_SYNC_SETTINGS"/>
				<method signature="boolean getMasterSyncAutomatically()" static="false" return="" permission="android.permission.READ_SYNC_SETTINGS"/>
				<method signature="java.util.List getPeriodicSyncs(android.accounts.Account, java.lang.String)" static="false" return="track" param1="track" param2="track" permission="android.permission.READ_SYNC_SETTINGS"/>
				<method signature="boolean getSyncAutomatically(android.accounts.Account, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_SYNC_SETTINGS"/>
				<method signature="android.content.SyncStatusInfo getSyncStatus(android.accounts.Account, java.lang.String)" static="false" return="track" param1="track" param2="track" permission="android.permission.READ_SYNC_STATS"/>
				<method signature="boolean isSyncActive(android.accounts.Account, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_SYNC_STATS"/>
				<method signature="boolean isSyncPending(android.accounts.Account, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_SYNC_STATS"/>
				<method signature="void removePeriodicSync(android.accounts.Account, java.lang.String, android.os.Bundle)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SYNC_SETTINGS"/>
				<method signature="void setIsSyncable(android.accounts.Account, java.lang.String, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SYNC_SETTINGS"/>
				<method signature="void setMasterSyncAutomatically(boolean)" static="false" return="" param1="track" permission="android.permission.WRITE_SYNC_SETTINGS"/>
				<method signature="void setSyncAutomatically(android.accounts.Account, java.lang.String, boolean)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SYNC_SETTINGS"/>
			</class>
			<class name="IContentService$Stub">
				<method signature="void addPeriodicSync(android.accounts.Account, java.lang.String, android.os.Bundle, long)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SYNC_SETTINGS"/>
				<method signature="java.util.List getCurrentSyncs()" static="false" return="track" permission="android.permission.READ_SYNC_STATS"/>
				<method signature="int getIsSyncable(android.accounts.Account, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_SYNC_SETTINGS"/>
				<method signature="boolean getMasterSyncAutomatically()" static="false" return="" permission="android.permission.READ_SYNC_SETTINGS"/>
				<method signature="java.util.List getPeriodicSyncs(android.accounts.Account, java.lang.String)" static="false" return="track" param1="track" param2="track" permission="android.permission.READ_SYNC_SETTINGS"/>
				<method signature="boolean getSyncAutomatically(android.accounts.Account, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_SYNC_SETTINGS"/>
				<method signature="android.content.SyncStatusInfo getSyncStatus(android.accounts.Account, java.lang.String)" static="false" return="track" param1="track" param2="track" permission="android.permission.READ_SYNC_STATS"/>
				<method signature="boolean isSyncActive(android.accounts.Account, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_SYNC_STATS"/>
				<method signature="boolean isSyncPending(android.accounts.Account, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_SYNC_STATS"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.READ_SYNC_STATS,android.permission.WRITE_SYNC_SETTINGS,android.permission.READ_SYNC_SETTINGS"/>
				<method signature="void removePeriodicSync(android.accounts.Account, java.lang.String, android.os.Bundle)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SYNC_SETTINGS"/>
				<method signature="void setIsSyncable(android.accounts.Account, java.lang.String, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SYNC_SETTINGS"/>
				<method signature="void setMasterSyncAutomatically(boolean)" static="false" return="" param1="track" permission="android.permission.WRITE_SYNC_SETTINGS"/>
				<method signature="void setSyncAutomatically(android.accounts.Account, java.lang.String, boolean)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SYNC_SETTINGS"/>
			</class>
			<class name="Context">
				<method signature="void clearWallpaper()" static="false" return="" permission="android.permission.SET_WALLPAPER"/>
				<method signature="void removeStickyBroadcast(android.content.Intent)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void sendStickyBroadcast(android.content.Intent)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void sendStickyOrderedBroadcast(android.content.Intent, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void setWallpaper(android.graphics.Bitmap)" static="false" return="" param1="track" permission="android.permission.SET_WALLPAPER"/>
				<method signature="void setWallpaper(java.io.InputStream)" static="false" return="" param1="track" permission="android.permission.SET_WALLPAPER"/>
			</class>
			<class name="AbstractThreadedSyncAdapter$ISyncAdapterImpl">
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SYNC_SETTINGS,android.permission.READ_SYNC_SETTINGS"/>
			</class>
			<class name="ContextWrapper">
				<method signature="void clearWallpaper()" static="false" return="" permission="android.permission.SET_WALLPAPER"/>
				<method signature="void removeStickyBroadcast(android.content.Intent)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void sendStickyBroadcast(android.content.Intent)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void sendStickyOrderedBroadcast(android.content.Intent, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void setWallpaper(android.graphics.Bitmap)" static="false" return="" param1="track" permission="android.permission.SET_WALLPAPER"/>
				<method signature="void setWallpaper(java.io.InputStream)" static="false" return="" param1="track" permission="android.permission.SET_WALLPAPER"/>
			</class>
			<class name="ISyncAdapter$Stub">
				<method signature="void initialize(android.accounts.Account, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SYNC_SETTINGS,android.permission.READ_SYNC_SETTINGS"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SYNC_SETTINGS,android.permission.READ_SYNC_SETTINGS"/>
				<method signature="void startSync(android.content.ISyncContext, java.lang.String, android.accounts.Account, android.os.Bundle)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SYNC_SETTINGS,android.permission.READ_SYNC_SETTINGS"/>
			</class>
			<class name="Loader">
				<method signature="void registerListener(int, android.content.Loader$OnLoadCompleteListener)" static="false" param1="" param2="listener" permission=""/>
				<method signature="void registerOnLoadCanceledListener(android.content.Loader$OnLoadCanceledListener)" static="false" param1="listener" permission=""/>
				<method signature="void unregisterListener(android.content.Loader$OnLoadCompleteListener)" static="false" param1="listener" permission=""/>
				<method signature="void unregisterOnLoadCanceledListener(android.content.Loader$OnLoadCanceledListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="CursorEntityIterator">
				<method signature="android.content.Entity getEntityAndIncrementCursor(android.database.Cursor)" static="false" return="track" param1="track" permission="android.permission.READ_CALENDAR"/>
				<method signature="android.content.Entity next()" static="false" return="track" permission="android.permission.READ_CALENDAR"/>
				<method signature="java.lang.Object next()" static="false" return="track" permission="android.permission.READ_CALENDAR"/>
			</class>
			<class name="ClipboardManager">
				<method signature="void addPrimaryClipChangedListener(android.content.ClipboardManager$OnPrimaryClipChangedListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="SyncManager">
				<method signature="void &lt;init&gt;(android.content.Context, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="void cancelActiveSync(android.accounts.Account, int, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="void clearScheduledSyncOperations(android.accounts.Account, int, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="android.content.SyncAdapterType[] getSyncAdapterTypes()" static="false" return="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="android.content.SyncStorageEngine getSyncStorageEngine()" static="false" return="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void maybeRescheduleSync(android.content.SyncResult, android.content.SyncOperation)" static="false" return="" param1="track" param2="track" permission="android.permission.VIBRATE,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="void onAccountsUpdated(android.accounts.Account[])" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="void scheduleLocalSync(android.accounts.Account, int, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="void scheduleSync(android.accounts.Account, int, java.lang.String, android.os.Bundle, long, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="void scheduleSyncOperation(android.content.SyncOperation)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="ContentService">
				<method signature="void &lt;init&gt;(android.content.Context, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="void addPeriodicSync(android.accounts.Account, java.lang.String, android.os.Bundle, long)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SYNC_SETTINGS,android.permission.RECEIVE_BOOT_COMPLETED,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void addStatusChangeListener(int, android.content.ISyncStatusObserver)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void cancelSync(android.accounts.Account, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="java.util.List getCurrentSyncs()" static="false" return="track" permission="android.permission.READ_SYNC_STATS,android.permission.RECEIVE_BOOT_COMPLETED,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="int getIsSyncable(android.accounts.Account, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.READ_SYNC_SETTINGS,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="boolean getMasterSyncAutomatically()" static="false" return="" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.READ_SYNC_SETTINGS,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="java.util.List getPeriodicSyncs(android.accounts.Account, java.lang.String)" static="false" return="track" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.READ_SYNC_SETTINGS,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="android.content.SyncAdapterType[] getSyncAdapterTypes()" static="false" return="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="boolean getSyncAutomatically(android.accounts.Account, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.READ_SYNC_SETTINGS,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="android.content.SyncStatusInfo getSyncStatus(android.accounts.Account, java.lang.String)" static="false" return="track" param1="track" param2="track" permission="android.permission.READ_SYNC_STATS,android.permission.RECEIVE_BOOT_COMPLETED,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="boolean isSyncActive(android.accounts.Account, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_SYNC_STATS,android.permission.RECEIVE_BOOT_COMPLETED,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="boolean isSyncPending(android.accounts.Account, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_SYNC_STATS,android.permission.RECEIVE_BOOT_COMPLETED,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void notifyChange(android.net.Uri, android.database.IContentObserver, boolean, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.READ_SYNC_STATS,android.permission.WRITE_SYNC_SETTINGS,android.permission.RECEIVE_BOOT_COMPLETED,android.permission.READ_SYNC_SETTINGS,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void registerContentObserver(android.net.Uri, boolean, android.database.IContentObserver)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void removePeriodicSync(android.accounts.Account, java.lang.String, android.os.Bundle)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SYNC_SETTINGS,android.permission.RECEIVE_BOOT_COMPLETED,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void removeStatusChangeListener(android.content.ISyncStatusObserver)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void requestSync(android.accounts.Account, java.lang.String, android.os.Bundle)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void setIsSyncable(android.accounts.Account, java.lang.String, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SYNC_SETTINGS,android.permission.RECEIVE_BOOT_COMPLETED,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void setMasterSyncAutomatically(boolean)" static="false" return="" param1="track" permission="android.permission.WRITE_SYNC_SETTINGS,android.permission.RECEIVE_BOOT_COMPLETED,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void setSyncAutomatically(android.accounts.Account, java.lang.String, boolean)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SYNC_SETTINGS,android.permission.RECEIVE_BOOT_COMPLETED,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void systemReady()" static="false" return="" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void unregisterContentObserver(android.database.IContentObserver)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
			</class>
			<class name="ISyncAdapter">
				<method signature="void initialize(android.accounts.Account, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SYNC_SETTINGS,android.permission.READ_SYNC_SETTINGS"/>
				<method signature="void startSync(android.content.ISyncContext, java.lang.String, android.accounts.Account, android.os.Bundle)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SYNC_SETTINGS,android.permission.READ_SYNC_SETTINGS"/>
			</class>
			<class name="IClipboard">
				<method signature="void addPrimaryClipChangedListener(android.content.IOnPrimaryClipChangedListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="SharedPreferences">
				<method signature="void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)" static="false" param1="listener" permission=""/>
				<method signature="void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="ContentResolver">
				<method signature="void addPeriodicSync(android.accounts.Account, java.lang.String, android.os.Bundle, long)" static="true" return="" param0="track" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SYNC_SETTINGS"/>
				<method signature="android.content.SyncInfo getCurrentSync()" static="true" return="track" permission="android.permission.READ_SYNC_STATS"/>
				<method signature="java.util.List getCurrentSyncs()" static="true" return="track" permission="android.permission.READ_SYNC_STATS"/>
				<method signature="int getIsSyncable(android.accounts.Account, java.lang.String)" static="true" return="" param0="track" param1="track" permission="android.permission.READ_SYNC_SETTINGS"/>
				<method signature="boolean getMasterSyncAutomatically()" static="true" return="" permission="android.permission.READ_SYNC_SETTINGS"/>
				<method signature="java.util.List getPeriodicSyncs(android.accounts.Account, java.lang.String)" static="true" return="track" param0="track" param1="track" permission="android.permission.READ_SYNC_SETTINGS"/>
				<method signature="boolean getSyncAutomatically(android.accounts.Account, java.lang.String)" static="true" return="" param0="track" param1="track" permission="android.permission.READ_SYNC_SETTINGS"/>
				<method signature="android.content.SyncStatusInfo getSyncStatus(android.accounts.Account, java.lang.String)" static="true" return="track" param0="track" param1="track" permission="android.permission.READ_SYNC_STATS"/>
				<method signature="boolean isSyncActive(android.accounts.Account, java.lang.String)" static="true" return="" param0="track" param1="track" permission="android.permission.READ_SYNC_STATS"/>
				<method signature="boolean isSyncPending(android.accounts.Account, java.lang.String)" static="true" return="" param0="track" param1="track" permission="android.permission.READ_SYNC_STATS"/>
				<method signature="void removePeriodicSync(android.accounts.Account, java.lang.String, android.os.Bundle)" static="true" return="" param0="track" param1="track" param2="track" permission="android.permission.WRITE_SYNC_SETTINGS"/>
				<method signature="void setIsSyncable(android.accounts.Account, java.lang.String, int)" static="true" return="" param0="track" param1="track" param2="track" permission="android.permission.WRITE_SYNC_SETTINGS"/>
				<method signature="void setMasterSyncAutomatically(boolean)" static="true" return="" param0="track" permission="android.permission.WRITE_SYNC_SETTINGS"/>
				<method signature="void setSyncAutomatically(android.accounts.Account, java.lang.String, boolean)" static="true" return="" param0="track" param1="track" param2="track" permission="android.permission.WRITE_SYNC_SETTINGS"/>
			</class>
		</package>
		<package name="java.util.prefs">
			<class name="AbstractPreferences">
				<method signature="void addNodeChangeListener(java.util.prefs.NodeChangeListener)" static="false" param1="listener" permission=""/>
				<method signature="void addPreferenceChangeListener(java.util.prefs.PreferenceChangeListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="Preferences">
				<method signature="void addNodeChangeListener(java.util.prefs.NodeChangeListener)" static="false" param1="listener" permission=""/>
				<method signature="void addPreferenceChangeListener(java.util.prefs.PreferenceChangeListener)" static="false" param1="listener" permission=""/>
			</class>
		</package>
		<package name="com.android.internal.telephony.gsm">
			<class name="GsmMmiCode">
				<method signature="void cancel()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void processCode()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void sendUssd(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="GsmSMSDispatcher">
				<method signature="void acknowledgeLastIncomingSms(boolean, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void dispatch(android.content.Intent, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void dispatch(android.content.Intent, java.lang.String, android.content.BroadcastReceiver)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void dispatchBroadcastMessage(android.telephony.SmsCbMessage)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="int dispatchMessage(com.android.internal.telephony.SmsMessageBase)" static="false" return="" param1="track" permission="android.permission.READ_SMS,android.permission.SEND_SMS,android.permission.WRITE_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.WAKE_LOCK"/>
				<method signature="int dispatchNormalMessage(com.android.internal.telephony.SmsMessageBase)" static="false" return="" param1="track" permission="android.permission.READ_SMS,android.permission.SEND_SMS,android.permission.WRITE_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.WAKE_LOCK"/>
				<method signature="void dispatchPdus(byte[][])" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void dispatchPortAddressedPdus(byte[][], int)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="int processMessagePart(byte[], java.lang.String, int, int, int, long, int, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" param7="track" param8="track" permission="android.permission.READ_SMS,android.permission.SEND_SMS,android.permission.WRITE_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.WAKE_LOCK"/>
				<method signature="void sendData(java.lang.String, java.lang.String, int, byte[], android.app.PendingIntent, android.app.PendingIntent)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void sendNewSubmitPdu(java.lang.String, java.lang.String, java.lang.String, com.android.internal.telephony.SmsHeader, int, android.app.PendingIntent, android.app.PendingIntent, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" param7="track" param8="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void sendRawPdu(byte[], byte[], android.app.PendingIntent, android.app.PendingIntent, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void sendSms(com.android.internal.telephony.SMSDispatcher$SmsTracker)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void sendText(java.lang.String, java.lang.String, java.lang.String, android.app.PendingIntent, android.app.PendingIntent)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="GsmCall">
				<method signature="void hangupIfAlive()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="GSMPhone">
				<method signature="void &lt;init&gt;(android.content.Context, com.android.internal.telephony.CommandsInterface, com.android.internal.telephony.PhoneNotifier)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void &lt;init&gt;(android.content.Context, com.android.internal.telephony.CommandsInterface, com.android.internal.telephony.PhoneNotifier, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void &lt;init&gt;(com.android.internal.telephony.PhoneNotifier, android.content.Context, com.android.internal.telephony.CommandsInterface)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void &lt;init&gt;(com.android.internal.telephony.PhoneNotifier, android.content.Context, com.android.internal.telephony.CommandsInterface, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void acceptCall()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void activateCellBroadcastSms(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean canConference()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean canDial()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean canTransfer()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void clearDisconnected()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void conference()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.Connection dial(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.Connection dial(java.lang.String, com.android.internal.telephony.UUSInfo)" static="false" return="track" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void disableLocationUpdates()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void dispose()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void enableEnhancedVoicePrivacy(boolean, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void enableLocationUpdates()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void exitEmergencyCallbackMode()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void explicitCallTransfer()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void getAvailableNetworks(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.Call getBackgroundCall()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.gsm.GsmCall getBackgroundCall()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void getCallForwardingOption(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.CallTracker getCallTracker()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void getCallWaiting(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void getCellBroadcastSmsConfig(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="android.telephony.CellLocation getCellLocation()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.Phone$DataActivityState getDataActivityState()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void getDataCallList(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.Phone$DataState getDataConnectionState(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean getDataRoamingEnabled()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getDeviceId()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getDeviceSvn()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void getEnhancedVoicePrivacy(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="java.lang.String getEsn()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.Call getForegroundCall()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.gsm.GsmCall getForegroundCall()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.IccPhoneBookInterfaceManager getIccPhoneBookInterfaceManager()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getImei()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getLine1AlphaTag()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getLine1Number()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getMeid()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getMsisdn()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean getMute()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void getNeighboringCids(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void getOutgoingCallerIdDisplay(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.util.List getPendingMmiCodes()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getPhoneName()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.PhoneSubInfo getPhoneSubInfo()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="int getPhoneType()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void getPreferredNetworkType(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="com.android.internal.telephony.Call getRingingCall()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.gsm.GsmCall getRingingCall()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="android.telephony.ServiceState getServiceState()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.ServiceStateTracker getServiceStateTracker()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="android.telephony.SignalStrength getSignalStrength()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void getSmscAddress(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="com.android.internal.telephony.Phone$State getState()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getSubscriberId()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getVoiceMailAlphaTag()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getVoiceMailNumber()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean handleInCallMmiCommands(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void handleMessage(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean handlePinMmi(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void invokeOemRilRequestRaw(byte[], android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void invokeOemRilRequestStrings(java.lang.String[], android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="boolean isCspPlmnEnabled()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void notifyCallForwardingIndicator()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void notifyDataConnection(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void notifyDataConnection(java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void notifyDataConnection(java.lang.String, java.lang.String, com.android.internal.telephony.Phone$DataState)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void notifyDataConnectionFailed(java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void notifyServiceStateChanged(android.telephony.ServiceState)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void notifyServiceStateChangedP(android.telephony.ServiceState)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void notifySignalStrength()" static="false" return="" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void queryAvailableBandMode(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void queryCdmaRoamingPreference(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void queryTTYMode(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void registerForSuppServiceNotification(android.os.Handler, int, java.lang.Object)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void rejectCall()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void removeReferences()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void requestIsimAuthentication(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void restoreSavedNetworkSelection(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void saveClirSetting(int)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void selectNetworkManually(com.android.internal.telephony.OperatorInfo, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void sendBurstDtmf(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void sendBurstDtmf(java.lang.String, int, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void sendDtmf(char)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void sendUssdResponse(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setBandMode(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setCallForwardingOption(int, int, java.lang.String, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setCallWaiting(boolean, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setCdmaRoamingPreference(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setCdmaSubscription(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setCellBroadcastSmsConfig(int[], android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setDataRoamingEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setLine1Number(java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setMute(boolean)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setNetworkSelectionModeAutomatic(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setOnPostDialCharacter(android.os.Handler, int, java.lang.Object)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setOutgoingCallerIdDisplay(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setPreferredNetworkType(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setRadioPower(boolean)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setSmscAddress(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setSystemProperty(java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setTTYMode(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setVoiceMailNumber(java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setVoiceMessageWaiting(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void startDtmf(char)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void stopDtmf()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void switchHoldingAndActive()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void syncClirSetting()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void unregisterForSuppServiceNotification(android.os.Handler)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void updateServiceLocation()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
			</class>
			<class name="GsmServiceStateTracker">
				<method signature="void disableLocationUpdates()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void disableSingleLocationUpdate()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void enableLocationUpdates()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void enableSingleLocationUpdate()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void powerOffRadioSafely(com.android.internal.telephony.DataConnectionTracker)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="boolean processPendingRadioPowerOffAfterDataOff()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void reRegisterNetwork(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setRadioPower(boolean)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="GsmDataConnectionTracker">
				<method signature="void &lt;init&gt;(com.android.internal.telephony.PhoneBase)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="void cleanUpAllConnections(boolean, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="int disableApnType(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="void dispose()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="int enableApnType(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="java.lang.String getActiveApnString(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="java.lang.String[] getActiveApnTypes()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="boolean getAnyDataEnabled()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="com.android.internal.telephony.DataConnectionTracker$State getOverallState()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="int getRecoveryAction()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="com.android.internal.telephony.DataConnectionTracker$State getState(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="void gotoIdleAndNotifyDataConnection(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void handleMessage(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="void initApnContextsAndDataConnection()" static="false" return="" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="boolean isApnTypeActive(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="boolean isApnTypeEnabled(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="boolean isDisconnected()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="void notifyDataConnection(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void notifyOffApnsOfAvailability(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onActionIntentReconnectAlarm(android.content.Intent)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onCleanUpAllConnections(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onCleanUpConnection(boolean, int, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onDataConnectionDetached()" static="false" return="" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onDataSetupComplete(android.os.AsyncResult)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK"/>
				<method signature="void onDataStallAlarm(int)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK"/>
				<method signature="void onDisconnectDone(int, android.os.AsyncResult)" static="false" return="" param1="track" param2="track" permission="android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK"/>
				<method signature="void onEnableApn(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onEnableNewApn()" static="false" return="" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onPollPdp()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK"/>
				<method signature="void onRadioAvailable()" static="false" return="" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onRadioOffOrNotAvailable()" static="false" return="" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onResetDone(android.os.AsyncResult)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onRoamingOff()" static="false" return="" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onRoamingOn()" static="false" return="" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onSetDependencyMet(java.lang.String, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onSetInternalDataEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onSetPolicyDataEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onSetUserDataEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="boolean onTrySetupData(com.android.internal.telephony.ApnContext)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="boolean onTrySetupData(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onVoiceCallEnded()" static="false" return="" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onVoiceCallStarted()" static="false" return="" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void putRecoveryAction(int)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="void restartRadio()" static="false" return="" permission="android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK"/>
				<method signature="void setDataOnRoamingEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="SimPhoneBookInterfaceManager">
				<method signature="java.util.List getAdnRecordsInEf(int)" static="false" return="track" param1="track" permission="android.permission.READ_CONTACTS,android.permission.WAKE_LOCK"/>
				<method signature="int[] getAdnRecordsSize(int)" static="false" return="track" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.WAKE_LOCK"/>
				<method signature="boolean updateAdnRecordsInEfByIndex(int, java.lang.String, java.lang.String, int, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.WRITE_CONTACTS,android.permission.WAKE_LOCK"/>
				<method signature="boolean updateAdnRecordsInEfBySearch(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.WRITE_CONTACTS,android.permission.WAKE_LOCK"/>
			</class>
			<class name="GsmDataConnection">
				<method signature="void onConnect(com.android.internal.telephony.DataConnection$ConnectionParams)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="SimSmsInterfaceManager">
				<method signature="boolean copyMessageToIccEf(int, byte[], byte[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
				<method signature="boolean disableCellBroadcast(int)" static="false" return="" param1="track" permission="android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
				<method signature="boolean disableCellBroadcastRange(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
				<method signature="boolean enableCellBroadcast(int)" static="false" return="" param1="track" permission="android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
				<method signature="boolean enableCellBroadcastRange(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
				<method signature="void enforceReceiveAndSend(java.lang.String)" static="false" return="" param1="track" permission="android.permission.SEND_SMS,android.permission.RECEIVE_SMS"/>
				<method signature="java.util.List getAllMessagesFromIccEf()" static="false" return="track" permission="android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
				<method signature="void sendData(java.lang.String, java.lang.String, int, byte[], android.app.PendingIntent, android.app.PendingIntent)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.SEND_SMS"/>
				<method signature="void sendMultipartText(java.lang.String, java.lang.String, java.util.List, java.util.List, java.util.List)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.SEND_SMS"/>
				<method signature="void sendText(java.lang.String, java.lang.String, java.lang.String, android.app.PendingIntent, android.app.PendingIntent)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.SEND_SMS"/>
				<method signature="boolean updateMessageOnIccEf(int, int, byte[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
			</class>
			<class name="GsmConnection">
				<method signature="void &lt;init&gt;(android.content.Context, com.android.internal.telephony.DriverCall, com.android.internal.telephony.gsm.GsmCallTracker, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void &lt;init&gt;(android.content.Context, java.lang.String, com.android.internal.telephony.gsm.GsmCallTracker, com.android.internal.telephony.gsm.GsmCall)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void cancelPostDial()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void dispose()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void finalize()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="java.lang.String getAddress()" static="false" return="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="com.android.internal.telephony.Call getCall()" static="false" return="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="com.android.internal.telephony.gsm.GsmCall getCall()" static="false" return="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="long getConnectTime()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="long getCreateTime()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="com.android.internal.telephony.Connection$DisconnectCause getDisconnectCause()" static="false" return="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="long getDisconnectTime()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="long getDurationMillis()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="long getHoldDurationMillis()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="int getNumberPresentation()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="com.android.internal.telephony.Connection$PostDialState getPostDialState()" static="false" return="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="java.lang.String getRemainingPostDialString()" static="false" return="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="com.android.internal.telephony.Call$State getState()" static="false" return="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="com.android.internal.telephony.UUSInfo getUUSInfo()" static="false" return="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void hangup()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="boolean isIncoming()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void onConnectedInOrOut()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void onDisconnect(com.android.internal.telephony.Connection$DisconnectCause)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void onRemoteDisconnect(int)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void proceedAfterWaitChar()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void proceedAfterWildChar(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void separate()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="boolean update(com.android.internal.telephony.DriverCall)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="SIMFileHandler">
				<method signature="void getEFLinearRecordSize(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void loadEFImgLinearFixed(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void loadEFImgTransparent(int, int, int, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void loadEFLinearFixed(int, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void loadEFLinearFixedAll(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void loadEFTransparent(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void updateEFLinearFixed(int, int, byte[], java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void updateEFTransparent(int, byte[], android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="GsmCallTracker">
				<method signature="void acceptCall()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void conference()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="com.android.internal.telephony.Connection dial(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="com.android.internal.telephony.Connection dial(java.lang.String, int)" static="false" return="track" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="com.android.internal.telephony.Connection dial(java.lang.String, int, com.android.internal.telephony.UUSInfo)" static="false" return="track" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="com.android.internal.telephony.Connection dial(java.lang.String, com.android.internal.telephony.UUSInfo)" static="false" return="track" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void dispose()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void explicitCallTransfer()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void handlePollCalls(android.os.AsyncResult)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void handleRadioAvailable()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void hangup(com.android.internal.telephony.gsm.GsmCall)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void hangup(com.android.internal.telephony.gsm.GsmConnection)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void hangupAllConnections(com.android.internal.telephony.gsm.GsmCall)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void hangupConnectionByIndex(com.android.internal.telephony.gsm.GsmCall, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void hangupForegroundResumeBackground()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void hangupWaitingOrBackground()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void pollCallsWhenSafe()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void rejectCall()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void separate(com.android.internal.telephony.gsm.GsmConnection)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setMute(boolean)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void switchWaitingOrHoldingAndActive()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="SIMRecords">
				<method signature="void fetchSimRecords()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void onAllRecordsLoaded()" static="false" return="" permission="android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void onReady()" static="false" return="" permission="android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK"/>
				<method signature="void onRecordLoaded()" static="false" return="" permission="android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void onRefresh(boolean, int[])" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setMsisdnNumber(java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setVoiceCallForwardingFlag(int, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setVoiceMailNumber(java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setVoiceMessageWaiting(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="UsimPhoneBookManager">
				<method signature="java.util.ArrayList loadEfFilesFromUsim()" static="false" return="track" permission="android.permission.WAKE_LOCK"/>
			</class>
		</package>
		<package name="android.os.storage">
			<class name="StorageManager">
				<method signature="void disableUsbMassStorage()" static="false" return="" permission="android.permission.MOUNT_UNMOUNT_FILESYSTEMS"/>
				<method signature="void enableUsbMassStorage()" static="false" return="" permission="android.permission.MOUNT_UNMOUNT_FILESYSTEMS"/>
			</class>
			<class name="IMountService$Stub">
				<method signature="void finishMediaUpdate()" static="false" return="" permission="android.permission.MOUNT_UNMOUNT_FILESYSTEMS"/>
				<method signature="int formatVolume(java.lang.String)" static="false" return="" param1="track" permission="android.permission.MOUNT_FORMAT_FILESYSTEMS"/>
				<method signature="int[] getStorageUsers(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.MOUNT_UNMOUNT_FILESYSTEMS"/>
				<method signature="int mountVolume(java.lang.String)" static="false" return="" param1="track" permission="android.permission.MOUNT_UNMOUNT_FILESYSTEMS"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.MOUNT_UNMOUNT_FILESYSTEMS,android.permission.MOUNT_FORMAT_FILESYSTEMS"/>
				<method signature="void setUsbMassStorageEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.MOUNT_UNMOUNT_FILESYSTEMS"/>
				<method signature="void shutdown(android.os.storage.IMountShutdownObserver)" static="false" return="" param1="track" permission="android.permission.MOUNT_UNMOUNT_FILESYSTEMS"/>
				<method signature="void unmountVolume(java.lang.String, boolean, boolean)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.MOUNT_UNMOUNT_FILESYSTEMS"/>
			</class>
			<class name="IMountService">
				<method signature="void finishMediaUpdate()" static="false" return="" permission="android.permission.MOUNT_UNMOUNT_FILESYSTEMS"/>
				<method signature="int formatVolume(java.lang.String)" static="false" return="" param1="track" permission="android.permission.MOUNT_FORMAT_FILESYSTEMS"/>
				<method signature="int[] getStorageUsers(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.MOUNT_UNMOUNT_FILESYSTEMS"/>
				<method signature="void mountObb(java.lang.String, java.lang.String, android.os.storage.IObbActionListener, int)" static="false" param1="" param2="" param3="listener" param4="" permission=""/>
				<method signature="int mountVolume(java.lang.String)" static="false" return="" param1="track" permission="android.permission.MOUNT_UNMOUNT_FILESYSTEMS"/>
				<method signature="void registerListener(android.os.storage.IMountServiceListener)" static="false" param1="listener" permission=""/>
				<method signature="void setUsbMassStorageEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.MOUNT_UNMOUNT_FILESYSTEMS"/>
				<method signature="void shutdown(android.os.storage.IMountShutdownObserver)" static="false" return="" param1="track" permission="android.permission.MOUNT_UNMOUNT_FILESYSTEMS"/>
				<method signature="void unmountObb(java.lang.String, boolean, android.os.storage.IObbActionListener, int)" static="false" param1="" param2="" param3="listener" param4="" permission=""/>
				<method signature="void unmountVolume(java.lang.String, boolean, boolean)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.MOUNT_UNMOUNT_FILESYSTEMS"/>
				<method signature="void unregisterListener(android.os.storage.IMountServiceListener)" static="false" param1="listener" permission=""/>
			</class>
		</package>
		<package name="android.animation">
			<class name="ValueAnimator">
				<method signature="void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="LayoutTransition">
				<method signature="void addTransitionListener(android.animation.LayoutTransition$TransitionListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="Animator">
				<method signature="void addListener(android.animation.Animator$AnimatorListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="TimeAnimator">
				<method signature="void setTimeListener(android.animation.TimeAnimator$TimeListener)" static="false" param1="listener" permission=""/>
			</class>
		</package>
		<package name="android.app">
			<class name="IActivityManager">
				<method signature="boolean bindBackupAgent(android.content.pm.ApplicationInfo, int)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="java.util.List getRecentTasks(int, int)" static="false" return="track" param1="track" param2="track" permission="android.permission.GET_TASKS"/>
				<method signature="java.util.List getTasks(int, int, android.app.IThumbnailReceiver)" static="false" return="track" param1="track" param2="track" param3="track" permission="android.permission.GET_TASKS"/>
				<method signature="void goingToSleep()" static="false" return="" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void handleApplicationCrash(android.os.IBinder, android.app.ApplicationErrorReport$CrashInfo)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="boolean handleApplicationWtf(android.os.IBinder, java.lang.String, android.app.ApplicationErrorReport$CrashInfo)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void killAllBackgroundProcesses()" static="false" return="" permission="android.permission.KILL_BACKGROUND_PROCESSES"/>
				<method signature="void killApplicationWithUid(java.lang.String, int)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void killBackgroundProcesses(java.lang.String)" static="false" return="" param1="track" permission="android.permission.RESTART_PACKAGES,android.permission.KILL_BACKGROUND_PROCESSES"/>
				<method signature="void moveTaskBackwards(int)" static="false" return="" param1="track" permission="android.permission.REORDER_TASKS"/>
				<method signature="void moveTaskToBack(int)" static="false" return="" param1="track" permission="android.permission.REORDER_TASKS"/>
				<method signature="void moveTaskToFront(int, int, android.os.Bundle)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.REORDER_TASKS"/>
				<method signature="android.content.Intent registerReceiver(android.app.IApplicationThread, java.lang.String, android.content.IIntentReceiver, android.content.IntentFilter, java.lang.String)" static="false" return="track" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void setAlwaysFinish(boolean)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void setDebugApp(java.lang.String, boolean, boolean)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void setLockScreenShown(boolean)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setProcessLimit(int)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="boolean shutdown(int)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="boolean startInstrumentation(android.content.ComponentName, java.lang.String, int, android.os.Bundle, android.app.IInstrumentationWatcher)" static="false" param1="" param2="" param3="" param4="" param5="listener" permission=""/>
				<method signature="void startRunning(java.lang.String, java.lang.String, java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS"/>
				<method signature="void unbroadcastIntent(android.app.IApplicationThread, android.content.Intent, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void updateConfiguration(android.content.res.Configuration)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void updatePersistentConfiguration(android.content.res.Configuration)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void wakingUp()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="IWallpaperManager">
				<method signature="android.os.ParcelFileDescriptor getWallpaper(android.app.IWallpaperManagerCallback, android.os.Bundle)" static="false" param1="listener" param2="" permission=""/>
				<method signature="void setDimensionHints(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.SET_WALLPAPER_HINTS"/>
				<method signature="android.os.ParcelFileDescriptor setWallpaper(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.SET_WALLPAPER"/>
			</class>
			<class name="IAlarmManager">
				<method signature="void setTimeZone(java.lang.String)" static="false" return="" param1="track" permission="android.permission.SET_TIME_ZONE"/>
			</class>
			<class name="IWallpaperManager$Stub">
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.SET_WALLPAPER_HINTS,android.permission.SET_WALLPAPER"/>
				<method signature="void setDimensionHints(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.SET_WALLPAPER_HINTS"/>
				<method signature="android.os.ParcelFileDescriptor setWallpaper(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.SET_WALLPAPER"/>
			</class>
			<class name="INotificationManager">
				<method signature="void enqueueNotification(java.lang.String, int, android.app.Notification, int[])" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.VIBRATE"/>
				<method signature="void enqueueNotificationWithTag(java.lang.String, java.lang.String, int, android.app.Notification, int[])" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.VIBRATE"/>
			</class>
			<class name="SearchDialog$SearchBar">
				<method signature="android.view.ActionMode startActionModeForChild(android.view.View, android.view.ActionMode$Callback)" static="false" param1="" param2="listener" permission=""/>
			</class>
			<class name="IAlarmManager$Stub">
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.SET_TIME_ZONE"/>
				<method signature="void setTimeZone(java.lang.String)" static="false" return="" param1="track" permission="android.permission.SET_TIME_ZONE"/>
			</class>
			<class name="KeyguardManager">
				<method signature="void exitKeyguardSecurely(android.app.KeyguardManager$OnKeyguardExitResult)" static="false" return="" param1="track" permission="android.permission.DISABLE_KEYGUARD,android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="ActivityThread">
				<method signature="void registerOnActivityPausedListener(android.app.Activity, android.app.OnActivityPausedListener)" static="false" param1="" param2="listener" permission=""/>
				<method signature="void unregisterOnActivityPausedListener(android.app.Activity, android.app.OnActivityPausedListener)" static="false" param1="" param2="listener" permission=""/>
			</class>
			<class name="FragmentBreadCrumbs">
				<method signature="void setOnBreadCrumbClickListener(android.app.FragmentBreadCrumbs$OnBreadCrumbClickListener)" static="false" param1="listener" permission=""/>
				<method signature="void setParentTitle(java.lang.CharSequence, java.lang.CharSequence, android.view.View$OnClickListener)" static="false" param1="" param2="" param3="listener" permission=""/>
			</class>
			<class name="AlertDialog">
				<method signature="void setButton(int, java.lang.CharSequence, android.content.DialogInterface$OnClickListener)" static="false" param1="" param2="" param3="listener" permission=""/>
				<method signature="void setButton(java.lang.CharSequence, android.content.DialogInterface$OnClickListener)" static="false" param1="" param2="listener" permission=""/>
				<method signature="void setButton2(java.lang.CharSequence, android.content.DialogInterface$OnClickListener)" static="false" param1="" param2="listener" permission=""/>
				<method signature="void setButton3(java.lang.CharSequence, android.content.DialogInterface$OnClickListener)" static="false" param1="" param2="listener" permission=""/>
			</class>
			<class name="ActionBar$Tab">
				<method signature="android.app.ActionBar$Tab setTabListener(android.app.ActionBar$TabListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="MediaRouteActionProvider">
				<method signature="void setExtendedSettingsClickListener(android.view.View$OnClickListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="AlertDialog$Builder">
				<method signature="android.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter, android.content.DialogInterface$OnClickListener)" static="false" param1="" param2="listener" permission=""/>
				<method signature="android.app.AlertDialog$Builder setCursor(android.database.Cursor, android.content.DialogInterface$OnClickListener, java.lang.String)" static="false" param1="" param2="listener" param3="" permission=""/>
				<method signature="android.app.AlertDialog$Builder setItems(int, android.content.DialogInterface$OnClickListener)" static="false" param1="" param2="listener" permission=""/>
				<method signature="android.app.AlertDialog$Builder setItems(java.lang.CharSequence[], android.content.DialogInterface$OnClickListener)" static="false" param1="" param2="listener" permission=""/>
				<method signature="android.app.AlertDialog$Builder setMultiChoiceItems(int, boolean[], android.content.DialogInterface$OnMultiChoiceClickListener)" static="false" param1="" param2="" param3="listener" permission=""/>
				<method signature="android.app.AlertDialog$Builder setMultiChoiceItems(android.database.Cursor, java.lang.String, java.lang.String, android.content.DialogInterface$OnMultiChoiceClickListener)" static="false" param1="" param2="" param3="" param4="listener" permission=""/>
				<method signature="android.app.AlertDialog$Builder setMultiChoiceItems(java.lang.CharSequence[], boolean[], android.content.DialogInterface$OnMultiChoiceClickListener)" static="false" param1="" param2="" param3="listener" permission=""/>
				<method signature="android.app.AlertDialog$Builder setNegativeButton(int, android.content.DialogInterface$OnClickListener)" static="false" param1="" param2="listener" permission=""/>
				<method signature="android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence, android.content.DialogInterface$OnClickListener)" static="false" param1="" param2="listener" permission=""/>
				<method signature="android.app.AlertDialog$Builder setNeutralButton(int, android.content.DialogInterface$OnClickListener)" static="false" param1="" param2="listener" permission=""/>
				<method signature="android.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence, android.content.DialogInterface$OnClickListener)" static="false" param1="" param2="listener" permission=""/>
				<method signature="android.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener)" static="false" param1="listener" permission=""/>
				<method signature="android.app.AlertDialog$Builder setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)" static="false" param1="listener" permission=""/>
				<method signature="android.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener)" static="false" param1="listener" permission=""/>
				<method signature="android.app.AlertDialog$Builder setPositiveButton(int, android.content.DialogInterface$OnClickListener)" static="false" param1="" param2="listener" permission=""/>
				<method signature="android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence, android.content.DialogInterface$OnClickListener)" static="false" param1="" param2="listener" permission=""/>
				<method signature="android.app.AlertDialog$Builder setSingleChoiceItems(int, int, android.content.DialogInterface$OnClickListener)" static="false" param1="" param2="" param3="listener" permission=""/>
				<method signature="android.app.AlertDialog$Builder setSingleChoiceItems(android.database.Cursor, int, java.lang.String, android.content.DialogInterface$OnClickListener)" static="false" param1="" param2="" param3="" param4="listener" permission=""/>
				<method signature="android.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter, int, android.content.DialogInterface$OnClickListener)" static="false" param1="" param2="" param3="listener" permission=""/>
				<method signature="android.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[], int, android.content.DialogInterface$OnClickListener)" static="false" param1="" param2="" param3="listener" permission=""/>
			</class>
			<class name="AlarmManager">
				<method signature="void setTimeZone(java.lang.String)" static="false" return="" param1="track" permission="android.permission.SET_TIME_ZONE"/>
			</class>
			<class name="DatePickerDialog">
				<method signature="void &lt;init&gt;(android.content.Context, int, android.app.DatePickerDialog$OnDateSetListener, int, int, int)" static="false" param1="" param2="" param3="listener" param4="" param5="" param6="" permission=""/>
				<method signature="void &lt;init&gt;(android.content.Context, android.app.DatePickerDialog$OnDateSetListener, int, int, int)" static="false" param1="" param2="listener" param3="" param4="" param5="" permission=""/>
			</class>
			<class name="IApplicationThread">
				<method signature="void bindApplication(java.lang.String, android.content.pm.ApplicationInfo, java.util.List, android.content.ComponentName, java.lang.String, android.os.ParcelFileDescriptor, boolean, android.os.Bundle, android.app.IInstrumentationWatcher, int, boolean, boolean, boolean, android.content.res.Configuration, android.content.res.CompatibilityInfo, java.util.Map, android.os.Bundle)" static="false" param1="" param2="" param3="" param4="" param5="" param6="" param7="" param8="" param9="listener" param10="" param11="" param12="" param13="" param14="" param15="" param16="" param17="" permission=""/>
			</class>
			<class name="MediaRouteButton">
				<method signature="void setExtendedSettingsClickListener(android.view.View$OnClickListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="TimePickerDialog">
				<method signature="void &lt;init&gt;(android.content.Context, int, android.app.TimePickerDialog$OnTimeSetListener, int, int, boolean)" static="false" param1="" param2="" param3="listener" param4="" param5="" param6="" permission=""/>
				<method signature="void &lt;init&gt;(android.content.Context, android.app.TimePickerDialog$OnTimeSetListener, int, int, boolean)" static="false" param1="" param2="listener" param3="" param4="" param5="" permission=""/>
			</class>
			<class name="StatusBarManager">
				<method signature="void collapse()" static="false" return="" permission="android.permission.EXPAND_STATUS_BAR"/>
				<method signature="void expand()" static="false" return="" permission="android.permission.EXPAND_STATUS_BAR"/>
			</class>
			<class name="ActivityManagerNative">
				<method signature="boolean bindBackupAgent(android.content.pm.ApplicationInfo, int)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void broadcastStickyIntent(android.content.Intent, java.lang.String)" static="true" return="" param0="track" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="java.util.List getRecentTasks(int, int)" static="false" return="track" param1="track" param2="track" permission="android.permission.GET_TASKS"/>
				<method signature="java.util.List getTasks(int, int, android.app.IThumbnailReceiver)" static="false" return="track" param1="track" param2="track" param3="track" permission="android.permission.GET_TASKS"/>
				<method signature="void goingToSleep()" static="false" return="" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void handleApplicationCrash(android.os.IBinder, android.app.ApplicationErrorReport$CrashInfo)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="boolean handleApplicationWtf(android.os.IBinder, java.lang.String, android.app.ApplicationErrorReport$CrashInfo)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void killAllBackgroundProcesses()" static="false" return="" permission="android.permission.KILL_BACKGROUND_PROCESSES"/>
				<method signature="void killApplicationWithUid(java.lang.String, int)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void killBackgroundProcesses(java.lang.String)" static="false" return="" param1="track" permission="android.permission.RESTART_PACKAGES,android.permission.KILL_BACKGROUND_PROCESSES"/>
				<method signature="void moveTaskBackwards(int)" static="false" return="" param1="track" permission="android.permission.REORDER_TASKS"/>
				<method signature="void moveTaskToBack(int)" static="false" return="" param1="track" permission="android.permission.REORDER_TASKS"/>
				<method signature="void moveTaskToFront(int, int, android.os.Bundle)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.REORDER_TASKS"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.REORDER_TASKS,android.permission.RECEIVE_BOOT_COMPLETED,android.permission.GET_TASKS,android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK,android.permission.RESTART_PACKAGES,android.permission.CHANGE_CONFIGURATION,android.permission.KILL_BACKGROUND_PROCESSES"/>
				<method signature="android.content.Intent registerReceiver(android.app.IApplicationThread, java.lang.String, android.content.IIntentReceiver, android.content.IntentFilter, java.lang.String)" static="false" return="track" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void setAlwaysFinish(boolean)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void setDebugApp(java.lang.String, boolean, boolean)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void setLockScreenShown(boolean)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setProcessLimit(int)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="boolean shutdown(int)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void startRunning(java.lang.String, java.lang.String, java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS"/>
				<method signature="void unbroadcastIntent(android.app.IApplicationThread, android.content.Intent, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void updateConfiguration(android.content.res.Configuration)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void updatePersistentConfiguration(android.content.res.Configuration)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void wakingUp()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="WallpaperManager">
				<method signature="void clear()" static="false" return="" permission="android.permission.SET_WALLPAPER"/>
				<method signature="void setBitmap(android.graphics.Bitmap)" static="false" return="" param1="track" permission="android.permission.SET_WALLPAPER"/>
				<method signature="void setResource(int)" static="false" return="" param1="track" permission="android.permission.SET_WALLPAPER"/>
				<method signature="void setStream(java.io.InputStream)" static="false" return="" param1="track" permission="android.permission.SET_WALLPAPER"/>
				<method signature="void suggestDesiredDimensions(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.SET_WALLPAPER_HINTS"/>
			</class>
			<class name="Dialog">
				<method signature="android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)" static="false" param1="listener" permission=""/>
				<method signature="void setOnCancelListener(android.content.DialogInterface$OnCancelListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnDismissListener(android.content.DialogInterface$OnDismissListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnKeyListener(android.content.DialogInterface$OnKeyListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnShowListener(android.content.DialogInterface$OnShowListener)" static="false" param1="listener" permission=""/>
				<method signature="boolean takeCancelAndDismissListeners(java.lang.String, android.content.DialogInterface$OnCancelListener, android.content.DialogInterface$OnDismissListener)" static="false" param1="" param2="listener" param3="listener" permission=""/>
			</class>
			<class name="ContextImpl$ApplicationContentResolver">
				<method signature="void addPeriodicSync(android.accounts.Account, java.lang.String, android.os.Bundle, long)" static="true" return="" param0="track" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SYNC_SETTINGS"/>
				<method signature="android.content.SyncInfo getCurrentSync()" static="true" return="track" permission="android.permission.READ_SYNC_STATS"/>
				<method signature="java.util.List getCurrentSyncs()" static="true" return="track" permission="android.permission.READ_SYNC_STATS"/>
				<method signature="int getIsSyncable(android.accounts.Account, java.lang.String)" static="true" return="" param0="track" param1="track" permission="android.permission.READ_SYNC_SETTINGS"/>
				<method signature="boolean getMasterSyncAutomatically()" static="true" return="" permission="android.permission.READ_SYNC_SETTINGS"/>
				<method signature="java.util.List getPeriodicSyncs(android.accounts.Account, java.lang.String)" static="true" return="track" param0="track" param1="track" permission="android.permission.READ_SYNC_SETTINGS"/>
				<method signature="boolean getSyncAutomatically(android.accounts.Account, java.lang.String)" static="true" return="" param0="track" param1="track" permission="android.permission.READ_SYNC_SETTINGS"/>
				<method signature="android.content.SyncStatusInfo getSyncStatus(android.accounts.Account, java.lang.String)" static="true" return="track" param0="track" param1="track" permission="android.permission.READ_SYNC_STATS"/>
				<method signature="boolean isSyncActive(android.accounts.Account, java.lang.String)" static="true" return="" param0="track" param1="track" permission="android.permission.READ_SYNC_STATS"/>
				<method signature="boolean isSyncPending(android.accounts.Account, java.lang.String)" static="true" return="" param0="track" param1="track" permission="android.permission.READ_SYNC_STATS"/>
				<method signature="void removePeriodicSync(android.accounts.Account, java.lang.String, android.os.Bundle)" static="true" return="" param0="track" param1="track" param2="track" permission="android.permission.WRITE_SYNC_SETTINGS"/>
				<method signature="void setIsSyncable(android.accounts.Account, java.lang.String, int)" static="true" return="" param0="track" param1="track" param2="track" permission="android.permission.WRITE_SYNC_SETTINGS"/>
				<method signature="void setMasterSyncAutomatically(boolean)" static="true" return="" param0="track" permission="android.permission.WRITE_SYNC_SETTINGS"/>
				<method signature="void setSyncAutomatically(android.accounts.Account, java.lang.String, boolean)" static="true" return="" param0="track" param1="track" param2="track" permission="android.permission.WRITE_SYNC_SETTINGS"/>
			</class>
			<class name="DownloadManager">
				<method signature="long addCompletedDownload(java.lang.String, java.lang.String, boolean, java.lang.String, java.lang.String, long, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" param7="track" permission="android.permission.WRITE_EXTERNAL_STORAGE,android.permission.INTERNET,android.permission.VIBRATE"/>
				<method signature="long enqueue(android.app.DownloadManager$Request)" static="false" return="" param1="track" permission="android.permission.WRITE_EXTERNAL_STORAGE,android.permission.INTERNET,android.permission.VIBRATE"/>
				<method signature="android.net.Uri getUriForDownloadedFile(long)" static="false" return="track" param1="track" permission="android.permission.WRITE_EXTERNAL_STORAGE,android.permission.INTERNET,android.permission.VIBRATE"/>
			</class>
			<class name="ActionBar">
				<method signature="void addOnMenuVisibilityListener(android.app.ActionBar$OnMenuVisibilityListener)" static="false" param1="listener" permission=""/>
				<method signature="void setListNavigationCallbacks(android.widget.SpinnerAdapter, android.app.ActionBar$OnNavigationListener)" static="false" param1="" param2="listener" permission=""/>
			</class>
			<class name="FragmentManager">
				<method signature="void addOnBackStackChangedListener(android.app.FragmentManager$OnBackStackChangedListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="NotificationManager">
				<method signature="void notify(int, android.app.Notification)" static="false" return="" param1="track" param2="track" permission="android.permission.VIBRATE"/>
				<method signature="void notify(java.lang.String, int, android.app.Notification)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.VIBRATE"/>
			</class>
			<class name="SearchManager">
				<method signature="void setOnCancelListener(android.app.SearchManager$OnCancelListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnDismissListener(android.app.SearchManager$OnDismissListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="ActivityManager">
				<method signature="java.util.List getRecentTasks(int, int)" static="false" return="track" param1="track" param2="track" permission="android.permission.GET_TASKS"/>
				<method signature="java.util.List getRunningTasks(int)" static="false" return="track" param1="track" permission="android.permission.GET_TASKS"/>
				<method signature="java.util.List getRunningTasks(int, int, android.app.IThumbnailReceiver)" static="false" return="track" param1="track" param2="track" param3="track" permission="android.permission.GET_TASKS"/>
				<method signature="void killBackgroundProcesses(java.lang.String)" static="false" return="" param1="track" permission="android.permission.RESTART_PACKAGES,android.permission.KILL_BACKGROUND_PROCESSES"/>
				<method signature="void moveTaskToFront(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.REORDER_TASKS"/>
				<method signature="void moveTaskToFront(int, int, android.os.Bundle)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.REORDER_TASKS"/>
				<method signature="void restartPackage(java.lang.String)" static="false" return="" param1="track" permission="android.permission.RESTART_PACKAGES,android.permission.KILL_BACKGROUND_PROCESSES"/>
			</class>
			<class name="INotificationManager$Stub">
				<method signature="void enqueueNotification(java.lang.String, int, android.app.Notification, int[])" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.VIBRATE"/>
				<method signature="void enqueueNotificationWithTag(java.lang.String, java.lang.String, int, android.app.Notification, int[])" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.VIBRATE"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.VIBRATE"/>
			</class>
			<class name="KeyguardManager$KeyguardLock">
				<method signature="void disableKeyguard()" static="false" return="" permission="android.permission.DISABLE_KEYGUARD"/>
				<method signature="void reenableKeyguard()" static="false" return="" permission="android.permission.DISABLE_KEYGUARD"/>
			</class>
			<class name="Activity">
				<method signature="android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)" static="false" param1="listener" permission=""/>
				<method signature="android.view.ActionMode startActionMode(android.view.ActionMode$Callback)" static="false" param1="listener" permission=""/>
			</class>
		</package>
		<package name="android.server">
			<class name="BluetoothAdapterStateMachine$PowerOff">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="BluetoothAdapterStateMachine$BluetoothOn">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="BluetoothService">
				<method signature="int addRfcommServiceRecord(java.lang.String, android.os.ParcelUuid, int, android.os.IBinder)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean allowIncomingProfileConnect(android.bluetooth.BluetoothDevice, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean attemptAutoPair(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean cancelBondProcess(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean cancelDiscovery()" static="false" return="" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean cancelPairingUserInput(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean changeApplicationBluetoothState(boolean, android.bluetooth.IBluetoothStateChangeCallback, android.os.IBinder)" static="false" return="" param1="track" param2="track, listener, trackListener" param3="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean connectChannelToSink(android.bluetooth.BluetoothDevice, android.bluetooth.BluetoothHealthAppConfiguration, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean connectChannelToSource(android.bluetooth.BluetoothDevice, android.bluetooth.BluetoothHealthAppConfiguration)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean connectHeadset(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean connectInputDevice(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean connectInputDeviceInternal(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS"/>
				<method signature="boolean connectPanDevice(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean connectSink(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean createBond(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean createBondOutOfBand(java.lang.String, byte[], byte[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean disable()" static="false" return="" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean disable(boolean)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean disconnectChannel(android.bluetooth.BluetoothDevice, android.bluetooth.BluetoothHealthAppConfiguration, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.BLUETOOTH"/>
				<method signature="void disconnectDevices()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean disconnectHeadset(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean disconnectInputDevice(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean disconnectInputDeviceInternal(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS"/>
				<method signature="boolean disconnectPanDevice(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean disconnectSink(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean enable()" static="false" return="" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean enable(boolean, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean enableNoAutoConnect()" static="false" return="" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean fetchRemoteUuids(java.lang.String, android.os.ParcelUuid, android.bluetooth.IBluetoothCallback)" static="false" return="" param1="track" param2="track" param3="track, listener, trackListener" permission="android.permission.BLUETOOTH"/>
				<method signature="void finishDisable()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="java.lang.String getAddress()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.lang.String getAddressFromObjectPath(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getBluetoothState()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="int getBondState(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.util.List getConnectedHealthDevices()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.util.List getConnectedInputDevices()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.util.List getConnectedPanDevices()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getDiscoverableTimeout()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="int getHealthDeviceConnectionState(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.util.List getHealthDevicesMatchingConnectionStates(int[])" static="false" return="track" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getInputDeviceConnectionState(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getInputDevicePriority(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.util.List getInputDevicesMatchingConnectionStates(int[])" static="false" return="track" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.lang.String[] getKnownDevices()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="android.os.ParcelFileDescriptor getMainChannelFd(android.bluetooth.BluetoothDevice, android.bluetooth.BluetoothHealthAppConfiguration)" static="false" return="track" param1="track" param2="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.lang.String getName()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.lang.String getObjectPathFromAddress(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getPanDeviceConnectionState(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.util.List getPanDevicesMatchingConnectionStates(int[])" static="false" return="track" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getProfileConnectionState(int)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.lang.String getProperty(java.lang.String, boolean)" static="false" return="track" param1="track" param2="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.lang.String getRemoteAlias(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getRemoteClass(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.lang.String[] getRemoteDeviceProperties(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="java.lang.String getRemoteName(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getRemoteServiceChannel(java.lang.String, android.os.ParcelUuid)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH"/>
				<method signature="android.os.ParcelUuid[] getRemoteUuids(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getScanMode()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean getTrustState(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="android.os.ParcelUuid[] getUuidFromCache(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="android.os.ParcelUuid[] getUuids()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="void handleInputDevicePropertyChange(java.lang.String, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void handlePanDeviceStateChange(android.bluetooth.BluetoothDevice, int, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.CHANGE_NETWORK_STATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="void handlePanDeviceStateChange(android.bluetooth.BluetoothDevice, java.lang.String, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.CHANGE_NETWORK_STATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="void initBluetoothAfterTurningOn()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean isDiscovering()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean isEnabled()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean isTetheringOn()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="java.lang.String[] listBonds()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean notifyIncomingA2dpConnection(java.lang.String, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean notifyIncomingConnection(java.lang.String, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH"/>
				<method signature="void onCreatePairedDeviceResult(java.lang.String, int)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="void onHealthDeviceChannelChanged(java.lang.String, java.lang.String, boolean)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.BLUETOOTH"/>
				<method signature="void onHealthDevicePropertyChanged(java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="byte[] readOutOfBandData()" static="false" return="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean registerAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration, android.bluetooth.IBluetoothHealthCallback)" static="false" return="" param1="track" param2="track, listener, trackListener" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean removeBond(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean removeBondInternal(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="void removeServiceRecord(int)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="void runBluetooth()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="void sendUuidIntent(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="void setBluetoothTethering(boolean)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.CHANGE_NETWORK_STATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean setBondState(java.lang.String, int)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean setBondState(java.lang.String, int, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean setDeviceOutOfBandData(java.lang.String, byte[], byte[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean setDiscoverableTimeout(int)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean setInputDevicePriority(android.bluetooth.BluetoothDevice, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="void setLinkTimeout(java.lang.String, int)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean setName(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="void setPairable()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean setPairingConfirmation(java.lang.String, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean setPasskey(java.lang.String, int)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean setPin(java.lang.String, byte[])" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean setRemoteAlias(java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean setRemoteOutOfBandData(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean setScanMode(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH"/>
				<method signature="boolean setTrust(java.lang.String, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean startDiscovery()" static="false" return="" permission="android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean unregisterAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="void updateDeviceServiceChannelCache(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="void updateRemoteDevicePropertiesCache(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
			</class>
			<class name="BluetoothAdapterStateMachine$Switching">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="BluetoothAdapterStateMachine$PerProcessState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="BluetoothAdapterStateMachine$WarmUp">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="BluetoothA2dpService">
				<method signature="void &lt;init&gt;(android.content.Context, android.server.BluetoothService)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean allowIncomingConnect(android.bluetooth.BluetoothDevice, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean connect(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean connectSinkInternal(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean disconnect(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean disconnectSinkInternal(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="java.util.List getConnectedDevices()" static="false" return="track" permission="android.permission.BLUETOOTH,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="int getConnectionState(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="java.util.List getDevicesMatchingConnectionStates(int[])" static="false" return="track" param1="track" permission="android.permission.BLUETOOTH,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="int getPriority(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean isA2dpPlaying(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean resumeSink(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean setPriority(android.bluetooth.BluetoothDevice, int)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean suspendSink(android.bluetooth.BluetoothDevice)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="BluetoothAdapterStateMachine$HotOff">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
		</package>
		<package name="android.media">
			<class name="IMediaScannerListener$Stub">
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_EXTERNAL_STORAGE,android.permission.INTERNET,android.permission.VIBRATE"/>
				<method signature="void scanCompleted(java.lang.String, android.net.Uri)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_EXTERNAL_STORAGE,android.permission.INTERNET,android.permission.VIBRATE"/>
			</class>
			<class name="Ringtone">
				<method signature="void play()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setStreamType(int)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setUri(android.net.Uri)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void stop()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="IMediaScannerListener">
				<method signature="void scanCompleted(java.lang.String, android.net.Uri)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_EXTERNAL_STORAGE,android.permission.INTERNET,android.permission.VIBRATE"/>
			</class>
			<class name="IRingtonePlayer$Stub">
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void play(android.os.IBinder, android.net.Uri, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void playAsync(android.net.Uri, boolean, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void stop(android.os.IBinder)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void stopAsync()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="MediaRecorder">
				<method signature="void setAudioSource(int)" static="false" return="" param1="track" permission="android.permission.RECORD_AUDIO"/>
				<method signature="void setOnErrorListener(android.media.MediaRecorder$OnErrorListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnInfoListener(android.media.MediaRecorder$OnInfoListener)" static="false" param1="listener" permission=""/>
				<method signature="void setVideoSource(int)" static="false" return="" param1="track" permission="android.permission.CAMERA"/>
			</class>
			<class name="RingtoneManager">
				<method signature="android.media.Ringtone getRingtone(int)" static="false" return="track" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="android.media.Ringtone getRingtone(android.content.Context, android.net.Uri)" static="true" return="track" param0="track" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setActualDefaultRingtoneUri(android.content.Context, int, android.net.Uri)" static="true" return="" param0="track" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void stopPreviousRingtone()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="JetPlayer">
				<method signature="void setEventListener(android.media.JetPlayer$OnJetEventListener)" static="false" param1="listener" permission=""/>
				<method signature="void setEventListener(android.media.JetPlayer$OnJetEventListener, android.os.Handler)" static="false" param1="listener" param2="" permission=""/>
			</class>
			<class name="AudioManager">
				<method signature="int abandonAudioFocus(android.media.AudioManager$OnAudioFocusChangeListener)" static="false" param1="listener" permission=""/>
				<method signature="boolean isBluetoothA2dpOn()" static="false" return="" permission="android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean isWiredHeadsetOn()" static="false" return="" permission="android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void registerAudioFocusListener(android.media.AudioManager$OnAudioFocusChangeListener)" static="false" param1="listener" permission=""/>
				<method signature="void reloadAudioSettings()" static="false" return="" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="int requestAudioFocus(android.media.AudioManager$OnAudioFocusChangeListener, int, int)" static="false" param1="listener" param2="" param3="" permission=""/>
				<method signature="int setBluetoothA2dpDeviceConnectionState(android.bluetooth.BluetoothDevice, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setBluetoothScoOn(boolean)" static="false" return="" param1="track" permission="android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void setMicrophoneMute(boolean)" static="false" return="" param1="track" permission="android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void setMode(int)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BROADCAST_STICKY,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void setParameter(java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void setParameters(java.lang.String)" static="false" return="" param1="track" permission="android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void setSpeakerphoneOn(boolean)" static="false" return="" param1="track" permission="android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void setWiredDeviceConnectionState(int, int, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void startBluetoothSco()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.BROADCAST_STICKY,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void stopBluetoothSco()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.BROADCAST_STICKY,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void unregisterAudioFocusListener(android.media.AudioManager$OnAudioFocusChangeListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="AsyncPlayer">
				<method signature="void play(android.content.Context, android.net.Uri, boolean, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void stop()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="MediaPlayer">
				<method signature="void pause()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void release()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void reset()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setOnBufferingUpdateListener(android.media.MediaPlayer$OnBufferingUpdateListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnInfoListener(android.media.MediaPlayer$OnInfoListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnPreparedListener(android.media.MediaPlayer$OnPreparedListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnSeekCompleteListener(android.media.MediaPlayer$OnSeekCompleteListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnTimedTextListener(android.media.MediaPlayer$OnTimedTextListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnVideoSizeChangedListener(android.media.MediaPlayer$OnVideoSizeChangedListener)" static="false" param1="listener" permission=""/>
				<method signature="void setWakeMode(android.content.Context, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void start()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void stop()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="MediaScanner">
				<method signature="void scanMtpFile(java.lang.String, java.lang.String, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="android.net.Uri scanSingleFile(java.lang.String, java.lang.String, java.lang.String)" static="false" return="track" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="IMediaScannerService">
				<method signature="void requestScanFile(java.lang.String, java.lang.String, android.media.IMediaScannerListener)" static="false" param1="" param2="" param3="listener" permission=""/>
			</class>
			<class name="MediaScannerClient">
				<method signature="void scanFile(java.lang.String, long, long, boolean, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="AudioTrack">
				<method signature="void setPlaybackPositionUpdateListener(android.media.AudioTrack$OnPlaybackPositionUpdateListener)" static="false" param1="listener" permission=""/>
				<method signature="void setPlaybackPositionUpdateListener(android.media.AudioTrack$OnPlaybackPositionUpdateListener, android.os.Handler)" static="false" param1="listener" param2="" permission=""/>
			</class>
			<class name="MediaScannerConnection$1">
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_EXTERNAL_STORAGE,android.permission.INTERNET,android.permission.VIBRATE"/>
			</class>
			<class name="IAudioService">
				<method signature="void dispatchMediaKeyEvent(android.view.KeyEvent)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void dispatchMediaKeyEventUnderWakelock(android.view.KeyEvent)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void reloadAudioSettings()" static="false" return="" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="int setBluetoothA2dpDeviceConnectionState(android.bluetooth.BluetoothDevice, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setBluetoothScoOn(boolean)" static="false" return="" param1="track" permission="android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void setMode(int, android.os.IBinder)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH,android.permission.BROADCAST_STICKY,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void setSpeakerphoneOn(boolean)" static="false" return="" param1="track" permission="android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void setWiredDeviceConnectionState(int, int, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void startBluetoothSco(android.os.IBinder)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BROADCAST_STICKY,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void stopBluetoothSco(android.os.IBinder)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BROADCAST_STICKY,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="AudioRecord">
				<method signature="void &lt;init&gt;(int, int, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.RECORD_AUDIO"/>
				<method signature="int getAudioFormat()" static="false" return="" permission="android.permission.RECORD_AUDIO"/>
				<method signature="int getAudioSessionId()" static="false" return="" permission="android.permission.RECORD_AUDIO"/>
				<method signature="int getAudioSource()" static="false" return="" permission="android.permission.RECORD_AUDIO"/>
				<method signature="int getChannelConfiguration()" static="false" return="" permission="android.permission.RECORD_AUDIO"/>
				<method signature="int getChannelCount()" static="false" return="" permission="android.permission.RECORD_AUDIO"/>
				<method signature="int getNotificationMarkerPosition()" static="false" return="" permission="android.permission.RECORD_AUDIO"/>
				<method signature="int getPositionNotificationPeriod()" static="false" return="" permission="android.permission.RECORD_AUDIO"/>
				<method signature="int getRecordingState()" static="false" return="" permission="android.permission.RECORD_AUDIO"/>
				<method signature="int getSampleRate()" static="false" return="" permission="android.permission.RECORD_AUDIO"/>
				<method signature="int getState()" static="false" return="" permission="android.permission.RECORD_AUDIO"/>
				<method signature="int read(java.nio.ByteBuffer, int)" static="false" return="" param1="track" param2="track" permission="android.permission.RECORD_AUDIO"/>
				<method signature="int read(byte[], int, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.RECORD_AUDIO"/>
				<method signature="int read(short[], int, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.RECORD_AUDIO"/>
				<method signature="void release()" static="false" return="" permission="android.permission.RECORD_AUDIO"/>
				<method signature="int setNotificationMarkerPosition(int)" static="false" return="" param1="track" permission="android.permission.RECORD_AUDIO"/>
				<method signature="int setPositionNotificationPeriod(int)" static="false" return="" param1="track" permission="android.permission.RECORD_AUDIO"/>
				<method signature="void setRecordPositionUpdateListener(android.media.AudioRecord$OnRecordPositionUpdateListener)" static="false" return="" param1="track, listener, trackListener" permission="android.permission.RECORD_AUDIO"/>
				<method signature="void setRecordPositionUpdateListener(android.media.AudioRecord$OnRecordPositionUpdateListener, android.os.Handler)" static="false" return="" param1="track, listener, trackListener" param2="track" permission="android.permission.RECORD_AUDIO"/>
				<method signature="void startRecording()" static="false" return="" permission="android.permission.RECORD_AUDIO"/>
				<method signature="void startRecording(android.media.MediaSyncEvent)" static="false" return="" param1="track" permission="android.permission.RECORD_AUDIO"/>
				<method signature="void stop()" static="false" return="" permission="android.permission.RECORD_AUDIO"/>
			</class>
			<class name="AudioService">
				<method signature="void &lt;init&gt;(android.content.Context)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="int abandonAudioFocus(android.media.IAudioFocusDispatcher, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void adjustLocalOrRemoteStreamVolume(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void adjustMasterVolume(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void adjustStreamVolume(int, int, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void adjustSuggestedStreamVolume(int, int, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void adjustVolume(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="boolean checkAudioSettingsPermission(java.lang.String)" static="false" return="" param1="track" permission="android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void clearAllScoClients(int, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH,android.permission.BROADCAST_STICKY,android.permission.ACCESS_COARSE_LOCATION,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void dispatchMediaKeyEvent(android.view.KeyEvent)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION,android.permission.WAKE_LOCK"/>
				<method signature="void dispatchMediaKeyEventUnderWakelock(android.view.KeyEvent)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION,android.permission.WAKE_LOCK"/>
				<method signature="void forceVolumeControlStream(int, android.os.IBinder)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="int getLastAudibleMasterVolume()" static="false" return="" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="int getLastAudibleStreamVolume(int)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="int getMasterMaxVolume()" static="false" return="" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="int getMasterStreamType()" static="false" return="" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="int getMasterVolume()" static="false" return="" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="int getMode()" static="false" return="" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="int getRemoteStreamMaxVolume()" static="false" return="" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="int getRemoteStreamVolume()" static="false" return="" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="int getRingerMode()" static="false" return="" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="android.media.IRingtonePlayer getRingtonePlayer()" static="false" return="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="int getStreamMaxVolume(int)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="int getStreamVolume(int)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="int getVibrateSetting(int)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="boolean isBluetoothA2dpOn()" static="false" return="" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="boolean isBluetoothScoOn()" static="false" return="" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="boolean isMasterMute()" static="false" return="" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="boolean isSpeakerphoneOn()" static="false" return="" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="boolean isStreamAffectedByMute(int)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="boolean isStreamAffectedByRingerMode(int)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="boolean isStreamMute(int)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="boolean loadSoundEffects()" static="false" return="" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void onSendFinished(android.app.PendingIntent, android.content.Intent, int, java.lang.String, android.os.Bundle)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION,android.permission.WAKE_LOCK"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void playSoundEffect(int)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void playSoundEffectVolume(int, float)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void registerMediaButtonEventReceiverForCalls(android.content.ComponentName)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void registerMediaButtonIntent(android.app.PendingIntent, android.content.ComponentName)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="int registerRemoteControlClient(android.app.PendingIntent, android.media.IRemoteControlClient, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void registerRemoteControlDisplay(android.media.IRemoteControlDisplay)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void registerRemoteVolumeObserverForRcc(int, android.media.IRemoteVolumeObserver)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void reloadAudioSettings()" static="false" return="" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void remoteControlDisplayUsesBitmapSize(android.media.IRemoteControlDisplay, int, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="int requestAudioFocus(int, int, android.os.IBinder, android.media.IAudioFocusDispatcher, java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="int setBluetoothA2dpDeviceConnectionState(android.bluetooth.BluetoothDevice, int)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION,android.permission.WAKE_LOCK"/>
				<method signature="void setBluetoothA2dpOn(boolean)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void setBluetoothA2dpOnInt(boolean)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void setBluetoothScoOn(boolean)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void setMasterMute(boolean, int, android.os.IBinder)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void setMasterVolume(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void setMode(int, android.os.IBinder)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH,android.permission.BROADCAST_STICKY,android.permission.ACCESS_COARSE_LOCATION,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void setPlaybackInfoForRcc(int, int, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void setRemoteStreamVolume(int)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void setRingerMode(int)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void setRingtonePlayer(android.media.IRingtonePlayer)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void setSpeakerphoneOn(boolean)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void setStreamMute(int, boolean, android.os.IBinder)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void setStreamSolo(int, boolean, android.os.IBinder)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void setStreamVolume(int, int, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void setVibrateSetting(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void setWiredDeviceConnectionState(int, int, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION,android.permission.WAKE_LOCK"/>
				<method signature="boolean shouldVibrate(int)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void startBluetoothSco(android.os.IBinder)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH,android.permission.BROADCAST_STICKY,android.permission.ACCESS_COARSE_LOCATION,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="android.media.AudioRoutesInfo startWatchingRoutes(android.media.IAudioRoutesObserver)" static="false" return="track" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void stopBluetoothSco(android.os.IBinder)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH,android.permission.BROADCAST_STICKY,android.permission.ACCESS_COARSE_LOCATION,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void unloadSoundEffects()" static="false" return="" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void unregisterAudioFocusClient(java.lang.String)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void unregisterMediaButtonEventReceiverForCalls()" static="false" return="" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void unregisterMediaButtonIntent(android.app.PendingIntent, android.content.ComponentName)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void unregisterRemoteControlClient(android.app.PendingIntent, android.media.IRemoteControlClient)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void unregisterRemoteControlDisplay(android.media.IRemoteControlDisplay)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.ACCESS_COARSE_LOCATION"/>
			</class>
			<class name="SoundPool">
				<method signature="void setOnLoadCompleteListener(android.media.SoundPool$OnLoadCompleteListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="IRingtonePlayer">
				<method signature="void play(android.os.IBinder, android.net.Uri, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void playAsync(android.net.Uri, boolean, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void stop(android.os.IBinder)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void stopAsync()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="IAudioService$Stub">
				<method signature="void dispatchMediaKeyEvent(android.view.KeyEvent)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void dispatchMediaKeyEventUnderWakelock(android.view.KeyEvent)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void reloadAudioSettings()" static="false" return="" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="int setBluetoothA2dpDeviceConnectionState(android.bluetooth.BluetoothDevice, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setBluetoothScoOn(boolean)" static="false" return="" param1="track" permission="android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void setMode(int, android.os.IBinder)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH,android.permission.BROADCAST_STICKY,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void setSpeakerphoneOn(boolean)" static="false" return="" param1="track" permission="android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void setWiredDeviceConnectionState(int, int, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void startBluetoothSco(android.os.IBinder)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BROADCAST_STICKY,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void stopBluetoothSco(android.os.IBinder)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.BROADCAST_STICKY,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
		</package>
		<package name="android.graphics.drawable">
			<class name="Drawable">
				<method signature="void setCallback(android.graphics.drawable.Drawable$Callback)" static="false" param1="listener" permission=""/>
			</class>
		</package>
		<package name="android.hardware">
			<class name="ISerialManager">
				<method signature="java.lang.String[] getSerialPorts()" static="false" return="track" permission="android.permission.SERIAL_PORT"/>
				<method signature="android.os.ParcelFileDescriptor openSerialPort(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.SERIAL_PORT"/>
			</class>
			<class name="SensorManager">
				<method signature="boolean registerListener(android.hardware.SensorEventListener, android.hardware.Sensor, int)" static="false" param1="listener" param2="" param3="" permission=""/>
				<method signature="boolean registerListener(android.hardware.SensorEventListener, android.hardware.Sensor, int, android.os.Handler)" static="false" param1="listener" param2="" param3="" param4="" permission=""/>
				<method signature="boolean registerListener(android.hardware.SensorListener, int)" static="false" param1="listener" param2="" permission=""/>
				<method signature="boolean registerListener(android.hardware.SensorListener, int, int)" static="false" param1="listener" param2="" param3="" permission=""/>
				<method signature="void unregisterListener(android.hardware.SensorEventListener)" static="false" param1="listener" permission=""/>
				<method signature="void unregisterListener(android.hardware.SensorEventListener, android.hardware.Sensor)" static="false" param1="listener" param2="" permission=""/>
				<method signature="void unregisterListener(android.hardware.SensorListener)" static="false" param1="listener" permission=""/>
				<method signature="void unregisterListener(android.hardware.SensorListener, int)" static="false" param1="listener" param2="" permission=""/>
			</class>
			<class name="SerialManager">
				<method signature="java.lang.String[] getSerialPorts()" static="false" return="track" permission="android.permission.SERIAL_PORT"/>
				<method signature="android.hardware.SerialPort openSerialPort(java.lang.String, int)" static="false" return="track" param1="track" param2="track" permission="android.permission.SERIAL_PORT"/>
			</class>
			<class name="ISerialManager$Stub">
				<method signature="java.lang.String[] getSerialPorts()" static="false" return="track" permission="android.permission.SERIAL_PORT"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.SERIAL_PORT"/>
				<method signature="android.os.ParcelFileDescriptor openSerialPort(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.SERIAL_PORT"/>
			</class>
			<class name="Camera">
				<method signature="void addCallbackBuffer(byte[])" static="false" return="" param1="track" permission="android.permission.CAMERA"/>
				<method signature="void addRawImageCallbackBuffer(byte[])" static="false" return="" param1="track" permission="android.permission.CAMERA"/>
				<method signature="void autoFocus(android.hardware.Camera$AutoFocusCallback)" static="false" return="" param1="track, listener, trackListener" permission="android.permission.CAMERA"/>
				<method signature="void cancelAutoFocus()" static="false" return="" permission="android.permission.CAMERA"/>
				<method signature="android.hardware.Camera$Parameters getParameters()" static="false" return="track" permission="android.permission.CAMERA"/>
				<method signature="void lock()" static="false" return="" permission="android.permission.CAMERA"/>
				<method signature="android.hardware.Camera open()" static="true" return="track" permission="android.permission.CAMERA"/>
				<method signature="boolean previewEnabled()" static="false" return="" permission="android.permission.CAMERA"/>
				<method signature="void reconnect()" static="false" return="" permission="android.permission.CAMERA"/>
				<method signature="void release()" static="false" return="" permission="android.permission.CAMERA"/>
				<method signature="void setAutoFocusMoveCallback(android.hardware.Camera$AutoFocusMoveCallback)" static="false" return="" param1="track, listener, trackListener" permission="android.permission.CAMERA"/>
				<method signature="void setDisplayOrientation(int)" static="false" return="" param1="track" permission="android.permission.CAMERA"/>
				<method signature="void setErrorCallback(android.hardware.Camera$ErrorCallback)" static="false" return="" param1="track, listener, trackListener" permission="android.permission.CAMERA"/>
				<method signature="void setFaceDetectionListener(android.hardware.Camera$FaceDetectionListener)" static="false" return="" param1="track, listener, trackListener" permission="android.permission.CAMERA"/>
				<method signature="void setOneShotPreviewCallback(android.hardware.Camera$PreviewCallback)" static="false" return="" param1="track, listener, trackListener" permission="android.permission.CAMERA"/>
				<method signature="void setParameters(android.hardware.Camera$Parameters)" static="false" return="" param1="track" permission="android.permission.CAMERA"/>
				<method signature="void setPreviewCallback(android.hardware.Camera$PreviewCallback)" static="false" return="" param1="track, listener, trackListener" permission="android.permission.CAMERA"/>
				<method signature="void setPreviewCallbackWithBuffer(android.hardware.Camera$PreviewCallback)" static="false" return="" param1="track, listener, trackListener" permission="android.permission.CAMERA"/>
				<method signature="void setPreviewDisplay(android.view.SurfaceHolder)" static="false" return="" param1="track" permission="android.permission.CAMERA"/>
				<method signature="void setPreviewTexture(android.graphics.SurfaceTexture)" static="false" return="" param1="track" permission="android.permission.CAMERA"/>
				<method signature="void setZoomChangeListener(android.hardware.Camera$OnZoomChangeListener)" static="false" return="" param1="track, listener, trackListener" permission="android.permission.CAMERA"/>
				<method signature="void startFaceDetection()" static="false" return="" permission="android.permission.CAMERA"/>
				<method signature="void startPreview()" static="false" return="" permission="android.permission.CAMERA"/>
				<method signature="void startSmoothZoom(int)" static="false" return="" param1="track" permission="android.permission.CAMERA"/>
				<method signature="void stopFaceDetection()" static="false" return="" permission="android.permission.CAMERA"/>
				<method signature="void stopPreview()" static="false" return="" permission="android.permission.CAMERA"/>
				<method signature="void stopSmoothZoom()" static="false" return="" permission="android.permission.CAMERA"/>
				<method signature="void takePicture(android.hardware.Camera$ShutterCallback, android.hardware.Camera$PictureCallback, android.hardware.Camera$PictureCallback)" static="false" return="" param1="track, listener, trackListener" param2="track, listener, trackListener" param3="track, listener, trackListener" permission="android.permission.CAMERA"/>
				<method signature="void takePicture(android.hardware.Camera$ShutterCallback, android.hardware.Camera$PictureCallback, android.hardware.Camera$PictureCallback, android.hardware.Camera$PictureCallback)" static="false" return="" param1="track, listener, trackListener" param2="track, listener, trackListener" param3="track, listener, trackListener" param4="track, listener, trackListener" permission="android.permission.CAMERA"/>
				<method signature="void unlock()" static="false" return="" permission="android.permission.CAMERA"/>
			</class>
		</package>
		<package name="android.support.v4.net">
			<class name="ConnectivityManagerCompat">
				<method signature="boolean isActiveNetworkMetered(android.net.ConnectivityManager)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
			</class>
		</package>
		<package name="android.filterpacks.performance">
			<class name="ThroughputFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
		</package>
		<package name="android.net.wifi.p2p">
			<class name="WifiP2pService$P2pStateMachine$GroupNegotiationState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="WifiP2pService$P2pStateMachine$P2pDisablingState">
				<method signature="void enter()" static="false" return="" permission="android.permission.GET_TASKS,android.permission.ACCESS_WIFI_STATE,android.permission.MODIFY_AUDIO_SETTINGS,android.permission.READ_PHONE_STATE,android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.VIBRATE,android.permission.BROADCAST_STICKY,android.permission.BLUETOOTH_ADMIN,android.permission.CHANGE_NETWORK_STATE,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="WifiP2pService">
				<method signature="android.os.Messenger getMessenger()" static="false" return="track" permission="android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_WIFI_STATE"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_WIFI_STATE"/>
			</class>
			<class name="WifiP2pService$P2pStateMachine$P2pNotSupportedState">
				<method signature="void enter()" static="false" return="" permission="android.permission.GET_TASKS,android.permission.ACCESS_WIFI_STATE,android.permission.MODIFY_AUDIO_SETTINGS,android.permission.READ_PHONE_STATE,android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.VIBRATE,android.permission.BROADCAST_STICKY,android.permission.BLUETOOTH_ADMIN,android.permission.CHANGE_NETWORK_STATE,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="WifiP2pService$P2pStateMachine$ProvisionDiscoveryState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="IWifiP2pManager">
				<method signature="android.os.Messenger getMessenger()" static="false" return="track" permission="android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_WIFI_STATE"/>
			</class>
			<class name="WifiP2pService$P2pStateMachine$P2pDisabledState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="IWifiP2pManager$Stub">
				<method signature="android.os.Messenger getMessenger()" static="false" return="track" permission="android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_WIFI_STATE"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_WIFI_STATE"/>
			</class>
			<class name="WifiP2pService$P2pStateMachine$DefaultState">
				<method signature="void enter()" static="false" return="" permission="android.permission.GET_TASKS,android.permission.ACCESS_WIFI_STATE,android.permission.MODIFY_AUDIO_SETTINGS,android.permission.READ_PHONE_STATE,android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.VIBRATE,android.permission.BROADCAST_STICKY,android.permission.BLUETOOTH_ADMIN,android.permission.CHANGE_NETWORK_STATE,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="WifiP2pManager">
				<method signature="void addLocalService(android.net.wifi.p2p.WifiP2pManager$Channel, android.net.wifi.p2p.nsd.WifiP2pServiceInfo, android.net.wifi.p2p.WifiP2pManager$ActionListener)" static="false" param1="" param2="" param3="listener" permission=""/>
				<method signature="void addServiceRequest(android.net.wifi.p2p.WifiP2pManager$Channel, android.net.wifi.p2p.nsd.WifiP2pServiceRequest, android.net.wifi.p2p.WifiP2pManager$ActionListener)" static="false" param1="" param2="" param3="listener" permission=""/>
				<method signature="void cancelConnect(android.net.wifi.p2p.WifiP2pManager$Channel, android.net.wifi.p2p.WifiP2pManager$ActionListener)" static="false" param1="" param2="listener" permission=""/>
				<method signature="void clearLocalServices(android.net.wifi.p2p.WifiP2pManager$Channel, android.net.wifi.p2p.WifiP2pManager$ActionListener)" static="false" param1="" param2="listener" permission=""/>
				<method signature="void clearServiceRequests(android.net.wifi.p2p.WifiP2pManager$Channel, android.net.wifi.p2p.WifiP2pManager$ActionListener)" static="false" param1="" param2="listener" permission=""/>
				<method signature="void connect(android.net.wifi.p2p.WifiP2pManager$Channel, android.net.wifi.p2p.WifiP2pConfig, android.net.wifi.p2p.WifiP2pManager$ActionListener)" static="false" param1="" param2="" param3="listener" permission=""/>
				<method signature="void createGroup(android.net.wifi.p2p.WifiP2pManager$Channel, android.net.wifi.p2p.WifiP2pManager$ActionListener)" static="false" param1="" param2="listener" permission=""/>
				<method signature="void discoverPeers(android.net.wifi.p2p.WifiP2pManager$Channel, android.net.wifi.p2p.WifiP2pManager$ActionListener)" static="false" param1="" param2="listener" permission=""/>
				<method signature="void discoverServices(android.net.wifi.p2p.WifiP2pManager$Channel, android.net.wifi.p2p.WifiP2pManager$ActionListener)" static="false" param1="" param2="listener" permission=""/>
				<method signature="android.os.Messenger getMessenger()" static="false" return="track" permission="android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_WIFI_STATE"/>
				<method signature="android.net.wifi.p2p.WifiP2pManager$Channel initialize(android.content.Context, android.os.Looper, android.net.wifi.p2p.WifiP2pManager$ChannelListener)" static="false" return="track" param1="track" param2="track" param3="track, listener, trackListener" permission="android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_WIFI_STATE"/>
				<method signature="void requestConnectionInfo(android.net.wifi.p2p.WifiP2pManager$Channel, android.net.wifi.p2p.WifiP2pManager$ConnectionInfoListener)" static="false" param1="" param2="listener" permission=""/>
				<method signature="void requestGroupInfo(android.net.wifi.p2p.WifiP2pManager$Channel, android.net.wifi.p2p.WifiP2pManager$GroupInfoListener)" static="false" param1="" param2="listener" permission=""/>
				<method signature="void requestPeers(android.net.wifi.p2p.WifiP2pManager$Channel, android.net.wifi.p2p.WifiP2pManager$PeerListListener)" static="false" param1="" param2="listener" permission=""/>
				<method signature="void setDeviceName(android.net.wifi.p2p.WifiP2pManager$Channel, java.lang.String, android.net.wifi.p2p.WifiP2pManager$ActionListener)" static="false" param1="" param2="" param3="listener" permission=""/>
				<method signature="void setDialogListener(android.net.wifi.p2p.WifiP2pManager$Channel, android.net.wifi.p2p.WifiP2pManager$DialogListener)" static="false" param1="" param2="listener" permission=""/>
				<method signature="void setDnsSdResponseListeners(android.net.wifi.p2p.WifiP2pManager$Channel, android.net.wifi.p2p.WifiP2pManager$DnsSdServiceResponseListener, android.net.wifi.p2p.WifiP2pManager$DnsSdTxtRecordListener)" static="false" param1="" param2="listener" param3="listener" permission=""/>
				<method signature="void setServiceResponseListener(android.net.wifi.p2p.WifiP2pManager$Channel, android.net.wifi.p2p.WifiP2pManager$ServiceResponseListener)" static="false" param1="" param2="listener" permission=""/>
				<method signature="void setUpnpServiceResponseListener(android.net.wifi.p2p.WifiP2pManager$Channel, android.net.wifi.p2p.WifiP2pManager$UpnpServiceResponseListener)" static="false" param1="" param2="listener" permission=""/>
				<method signature="void stopPeerDiscovery(android.net.wifi.p2p.WifiP2pManager$Channel, android.net.wifi.p2p.WifiP2pManager$ActionListener)" static="false" param1="" param2="listener" permission=""/>
			</class>
			<class name="WifiP2pService$P2pStateMachine$InactiveState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="WifiP2pService$P2pStateMachine$P2pEnablingState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="WifiP2pService$P2pStateMachine$GroupCreatingState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
		</package>
		<package name="com.android.vcard">
			<class name="VCardEntry$AnniversaryData">
				<method signature="void constructInsertOperation(java.util.List, int)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="VCardEntry$WebsiteData">
				<method signature="void constructInsertOperation(java.util.List, int)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="VCardEntryHandler">
				<method signature="void onEntryCreated(com.android.vcard.VCardEntry)" static="false" return="" param1="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.VIBRATE,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="VCardParser_V40">
				<method signature="void parse(java.io.InputStream)" static="false" return="" param1="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.VIBRATE,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="void parse(java.io.InputStream, com.android.vcard.VCardInterpreter)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.VIBRATE,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="void parseOne(java.io.InputStream)" static="false" return="" param1="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.VIBRATE,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="VCardEntry$NameData">
				<method signature="void constructInsertOperation(java.util.List, int)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="VCardEntry$BirthdayData">
				<method signature="void constructInsertOperation(java.util.List, int)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="VCardEntry$PhoneData">
				<method signature="void constructInsertOperation(java.util.List, int)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="VCardEntry$PhotoData">
				<method signature="void constructInsertOperation(java.util.List, int)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="VCardEntry$EntryElement">
				<method signature="void constructInsertOperation(java.util.List, int)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="VCardEntry$PostalData">
				<method signature="void constructInsertOperation(java.util.List, int)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="VCardEntry$AndroidCustomData">
				<method signature="void constructInsertOperation(java.util.List, int)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="VCardEntry$SipData">
				<method signature="void constructInsertOperation(java.util.List, int)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="VCardEntryConstructor">
				<method signature="void onEntryEnded()" static="false" return="" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.VIBRATE,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="VCardEntry$OrganizationData">
				<method signature="void constructInsertOperation(java.util.List, int)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="VCardEntry$NicknameData">
				<method signature="void constructInsertOperation(java.util.List, int)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="VCardParser_V30">
				<method signature="void parse(java.io.InputStream)" static="false" return="" param1="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.VIBRATE,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="void parse(java.io.InputStream, com.android.vcard.VCardInterpreter)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.VIBRATE,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="void parseOne(java.io.InputStream)" static="false" return="" param1="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.VIBRATE,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="VCardParser_V21">
				<method signature="void parse(java.io.InputStream)" static="false" return="" param1="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.VIBRATE,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="void parse(java.io.InputStream, com.android.vcard.VCardInterpreter)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.VIBRATE,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="void parseOne(java.io.InputStream)" static="false" return="" param1="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.VIBRATE,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="VCardEntry$EntryElementIterator">
				<method signature="boolean onElement(com.android.vcard.VCardEntry$EntryElement)" static="false" return="" param1="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="VCardComposer">
				<method signature="boolean init()" static="false" return="" permission="android.permission.READ_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="boolean init(java.lang.String, java.lang.String[])" static="false" return="" param1="track" param2="track" permission="android.permission.READ_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="boolean initWithRawContactsEntityUri(android.net.Uri)" static="false" return="" param1="track" permission="android.permission.READ_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="VCardEntry$ImData">
				<method signature="void constructInsertOperation(java.util.List, int)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="VCardParser">
				<method signature="void parse(java.io.InputStream)" static="false" return="" param1="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.VIBRATE,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="void parse(java.io.InputStream, com.android.vcard.VCardInterpreter)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.VIBRATE,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="void parseOne(java.io.InputStream)" static="false" return="" param1="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.VIBRATE,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="VCardEntry">
				<method signature="java.util.ArrayList constructInsertOperations(android.content.ContentResolver, java.util.ArrayList)" static="false" return="track" param1="track" param2="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="boolean isIgnorable()" static="false" return="" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="void iterateAllData(com.android.vcard.VCardEntry$EntryElementIterator)" static="false" return="" param1="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="java.lang.String toString()" static="false" return="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="VCardEntry$NoteData">
				<method signature="void constructInsertOperation(java.util.List, int)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="VCardEntryCommitter">
				<method signature="void onEntryCreated(com.android.vcard.VCardEntry)" static="false" return="" param1="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="VCardInterpreter">
				<method signature="void onEntryEnded()" static="false" return="" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.VIBRATE,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="VCardEntry$EmailData">
				<method signature="void constructInsertOperation(java.util.List, int)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
		</package>
		<package name="android.test">
			<class name="IsolatedContext$MockAccountManager">
				<method signature="android.accounts.AccountManagerFuture addAccount(java.lang.String, java.lang.String, java.lang.String[], android.os.Bundle, android.app.Activity, android.accounts.AccountManagerCallback, android.os.Handler)" static="false" return="track" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track, listener, trackListener" param7="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS"/>
				<method signature="boolean addAccountExplicitly(android.accounts.Account, java.lang.String, android.os.Bundle)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.AUTHENTICATE_ACCOUNTS"/>
				<method signature="void clearPassword(android.accounts.Account)" static="false" return="" param1="track" permission="android.permission.MANAGE_ACCOUNTS"/>
				<method signature="android.accounts.AccountManagerFuture confirmCredentials(android.accounts.Account, android.os.Bundle, android.app.Activity, android.accounts.AccountManagerCallback, android.os.Handler)" static="false" return="track" param1="track" param2="track" param3="track" param4="track, listener, trackListener" param5="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS"/>
				<method signature="android.accounts.AccountManagerFuture editProperties(java.lang.String, android.app.Activity, android.accounts.AccountManagerCallback, android.os.Handler)" static="false" return="track" param1="track" param2="track" param3="track, listener, trackListener" param4="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS"/>
				<method signature="android.accounts.Account[] getAccountsByType(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.GET_ACCOUNTS"/>
				<method signature="android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account, java.lang.String, android.os.Bundle, android.app.Activity, android.accounts.AccountManagerCallback, android.os.Handler)" static="false" return="track" param1="track" param2="track" param3="track" param4="track" param5="track, listener, trackListener" param6="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS"/>
				<method signature="android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account, java.lang.String, android.os.Bundle, boolean, android.accounts.AccountManagerCallback, android.os.Handler)" static="false" return="track" param1="track" param2="track" param3="track" param4="track" param5="track, listener, trackListener" param6="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS"/>
				<method signature="android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account, java.lang.String, boolean, android.accounts.AccountManagerCallback, android.os.Handler)" static="false" return="track" param1="track" param2="track" param3="track" param4="track, listener, trackListener" param5="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS"/>
				<method signature="android.accounts.AccountManagerFuture getAuthTokenByFeatures(java.lang.String, java.lang.String, java.lang.String[], android.app.Activity, android.os.Bundle, android.os.Bundle, android.accounts.AccountManagerCallback, android.os.Handler)" static="false" return="track" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" param7="track, listener, trackListener" param8="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS"/>
				<method signature="android.accounts.AccountManagerFuture getAuthTokenLabel(java.lang.String, java.lang.String, android.accounts.AccountManagerCallback, android.os.Handler)" static="false" return="track" param1="track" param2="track" param3="track, listener, trackListener" param4="track" permission="android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS"/>
				<method signature="java.lang.String getPassword(android.accounts.Account)" static="false" return="track" param1="track" permission="android.permission.AUTHENTICATE_ACCOUNTS"/>
				<method signature="java.lang.String getUserData(android.accounts.Account, java.lang.String)" static="false" return="track" param1="track" param2="track" permission="android.permission.AUTHENTICATE_ACCOUNTS"/>
				<method signature="android.accounts.AccountManagerFuture hasFeatures(android.accounts.Account, java.lang.String[], android.accounts.AccountManagerCallback, android.os.Handler)" static="false" return="track" param1="track" param2="track" param3="track, listener, trackListener" param4="track" permission="android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS"/>
				<method signature="void invalidateAuthToken(java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS"/>
				<method signature="java.lang.String peekAuthToken(android.accounts.Account, java.lang.String)" static="false" return="track" param1="track" param2="track" permission="android.permission.AUTHENTICATE_ACCOUNTS"/>
				<method signature="android.accounts.AccountManagerFuture removeAccount(android.accounts.Account, android.accounts.AccountManagerCallback, android.os.Handler)" static="false" return="track" param1="track" param2="track" param3="track" permission="android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS"/>
				<method signature="void setAuthToken(android.accounts.Account, java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.AUTHENTICATE_ACCOUNTS"/>
				<method signature="void setPassword(android.accounts.Account, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.AUTHENTICATE_ACCOUNTS"/>
				<method signature="void setUserData(android.accounts.Account, java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.AUTHENTICATE_ACCOUNTS"/>
				<method signature="android.accounts.AccountManagerFuture updateCredentials(android.accounts.Account, java.lang.String, android.os.Bundle, android.app.Activity, android.accounts.AccountManagerCallback, android.os.Handler)" static="false" return="track" param1="track" param2="track" param3="track" param4="track" param5="track, listener, trackListener" param6="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS"/>
			</class>
			<class name="TestRunner">
				<method signature="void addListener(android.test.TestRunner$Listener)" static="false" param1="listener" permission=""/>
			</class>
		</package>
		<package name="com.android.server.connectivity">
			<class name="Tethering$TetherMasterSM$StartTetheringErrorState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="Tethering$TetherMasterSM$SetIpForwardingDisabledErrorState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="Tethering$TetherMasterSM$SetIpForwardingEnabledErrorState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="Tethering$TetherInterfaceSM$TetheredState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="Tethering$TetherMasterSM$StopTetheringErrorState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="Tethering$TetherMasterSM$SetDnsForwardersErrorState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="Tethering$TetherInterfaceSM$StartingState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="Tethering$TetherInterfaceSM$InitialState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="Tethering$TetherInterfaceSM$UnavailableState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="Tethering$TetherMasterSM$InitialState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="Vpn">
				<method signature="void startLegacyVpn(com.android.internal.net.VpnConfig, java.lang.String[], java.lang.String[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.BROADCAST_STICKY,android.permission.VIBRATE"/>
			</class>
			<class name="Tethering$TetherMasterSM$ErrorState">
				<method signature="void enter()" static="false" return="" permission="android.permission.GET_TASKS,android.permission.ACCESS_WIFI_STATE,android.permission.MODIFY_AUDIO_SETTINGS,android.permission.READ_PHONE_STATE,android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.VIBRATE,android.permission.BROADCAST_STICKY,android.permission.BLUETOOTH_ADMIN,android.permission.CHANGE_NETWORK_STATE,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="Tethering$TetherMasterSM$TetherMasterUtilState">
				<method signature="void enter()" static="false" return="" permission="android.permission.GET_TASKS,android.permission.ACCESS_WIFI_STATE,android.permission.MODIFY_AUDIO_SETTINGS,android.permission.READ_PHONE_STATE,android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.VIBRATE,android.permission.BROADCAST_STICKY,android.permission.BLUETOOTH_ADMIN,android.permission.CHANGE_NETWORK_STATE,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
		</package>
		<package name="com.android.internal.widget">
			<class name="TransportControlView">
				<method signature="void onClick(android.view.View)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="SlidingTab">
				<method signature="boolean onInterceptTouchEvent(android.view.MotionEvent)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean onTouchEvent(android.view.MotionEvent)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void onVisibilityChanged(android.view.View, int)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="WaveView">
				<method signature="void onDraw(android.graphics.Canvas)" static="false" return="" param1="track" permission="android.permission.VIBRATE"/>
				<method signature="boolean onHoverEvent(android.view.MotionEvent)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean onTouchEvent(android.view.MotionEvent)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="LockPatternView">
				<method signature="boolean onHoverEvent(android.view.MotionEvent)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean onTouchEvent(android.view.MotionEvent)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="PasswordEntryKeyboardView">
				<method signature="boolean onHoverEvent(android.view.MotionEvent)" static="false" return="" param1="track" permission="android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean onLongPress(android.inputmethodservice.Keyboard$Key)" static="false" return="" param1="track" permission="android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean onTouchEvent(android.view.MotionEvent)" static="false" return="" param1="track" permission="android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void setKeyboard(android.inputmethodservice.Keyboard)" static="false" return="" param1="track" permission="android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="WaveView$OnTriggerListener">
				<method signature="void onGrabbedStateChange(android.view.View, int)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="RotarySelector">
				<method signature="boolean onTouchEvent(android.view.MotionEvent)" static="false" return="" param1="track" permission="android.permission.VIBRATE"/>
			</class>
			<class name="PasswordEntryKeyboardHelper">
				<method signature="void onKey(int, int[])" static="false" return="" param1="track" param2="track" permission="android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void setKeyboardMode(int)" static="false" return="" param1="track" permission="android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="SlidingTab$OnTriggerListener">
				<method signature="void onGrabbedStateChange(android.view.View, int)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void onTrigger(android.view.View, int)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="LockPatternView$OnPatternListener">
				<method signature="void onPatternCellAdded(java.util.List)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void onPatternDetected(java.util.List)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="LockScreenWidgetCallback">
				<method signature="void userActivity(android.view.View)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
		</package>
		<package name="java.net">
			<class name="DatagramSocket">
				<method signature="void &lt;init&gt;(int)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void bind(java.net.SocketAddress)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void close()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="void connect(java.net.InetAddress, int)" static="false" return="" param1="track" param2="track" permission="android.permission.INTERNET"/>
				<method signature="void connect(java.net.SocketAddress)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void disconnect()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="boolean getBroadcast()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="java.nio.channels.DatagramChannel getChannel()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="java.net.InetAddress getInetAddress()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="java.net.InetAddress getLocalAddress()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="int getLocalPort()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="java.net.SocketAddress getLocalSocketAddress()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="int getPort()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="int getReceiveBufferSize()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="java.net.SocketAddress getRemoteSocketAddress()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="boolean getReuseAddress()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="int getSendBufferSize()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="int getSoTimeout()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="int getTrafficClass()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="boolean isBound()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="boolean isClosed()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="boolean isConnected()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="void receive(java.net.DatagramPacket)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void send(java.net.DatagramPacket)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setBroadcast(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setReceiveBufferSize(int)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setReuseAddress(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setSendBufferSize(int)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setSoTimeout(int)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setTrafficClass(int)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
			</class>
			<class name="URLConnection">
				<method signature="void connect()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="java.io.InputStream getInputStream()" static="false" return="track" permission="android.permission.INTERNET"/>
			</class>
			<class name="URL">
				<method signature="java.lang.Object getContent()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="java.net.URLConnection openConnection()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="java.io.InputStream openStream()" static="false" return="track" permission="android.permission.INTERNET"/>
			</class>
			<class name="MulticastSocket">
				<method signature="void &lt;init&gt;(int)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="java.net.InetAddress getInterface()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="boolean getLoopbackMode()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="java.net.NetworkInterface getNetworkInterface()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="byte getTTL()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="int getTimeToLive()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="void joinGroup(java.net.InetAddress)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void joinGroup(java.net.SocketAddress, java.net.NetworkInterface)" static="false" return="" param1="track" param2="track" permission="android.permission.INTERNET"/>
				<method signature="void leaveGroup(java.net.InetAddress)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void leaveGroup(java.net.SocketAddress, java.net.NetworkInterface)" static="false" return="" param1="track" param2="track" permission="android.permission.INTERNET"/>
				<method signature="void send(java.net.DatagramPacket, byte)" static="false" return="" param1="track" param2="track" permission="android.permission.INTERNET"/>
				<method signature="void setInterface(java.net.InetAddress)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setLoopbackMode(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setNetworkInterface(java.net.NetworkInterface)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setTTL(byte)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setTimeToLive(int)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
			</class>
			<class name="ServerSocket">
				<method signature="void &lt;init&gt;(int)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="java.net.Socket accept()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="void bind(java.net.SocketAddress)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void bind(java.net.SocketAddress, int)" static="false" return="" param1="track" param2="track" permission="android.permission.INTERNET"/>
				<method signature="void close()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="java.nio.channels.ServerSocketChannel getChannel()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="java.net.InetAddress getInetAddress()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="int getLocalPort()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="java.net.SocketAddress getLocalSocketAddress()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="int getReceiveBufferSize()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="boolean getReuseAddress()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="int getSoTimeout()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="boolean isBound()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="boolean isClosed()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="void setPerformancePreferences(int, int, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.INTERNET"/>
				<method signature="void setReceiveBufferSize(int)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setReuseAddress(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setSoTimeout(int)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="java.lang.String toString()" static="false" return="track" permission="android.permission.INTERNET"/>
			</class>
			<class name="HttpURLConnection">
				<method signature="void connect()" static="false" return="" permission="android.permission.INTERNET"/>
			</class>
		</package>
		<package name="android.net.sip">
			<class name="ISipSession">
				<method signature="void setListener(android.net.sip.ISipSessionListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="ISipService">
				<method signature="void close(java.lang.String)" static="false" return="" param1="track" permission="android.permission.USE_SIP,android.permission.WAKE_LOCK"/>
				<method signature="android.net.sip.ISipSession createSession(android.net.sip.SipProfile, android.net.sip.ISipSessionListener)" static="false" return="track" param1="track" param2="track, listener, trackListener" permission="android.permission.USE_SIP"/>
				<method signature="android.net.sip.SipProfile[] getListOfProfiles()" static="false" return="track" permission="android.permission.USE_SIP"/>
				<method signature="android.net.sip.ISipSession getPendingSession(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.USE_SIP"/>
				<method signature="boolean isOpened(java.lang.String)" static="false" return="" param1="track" permission="android.permission.USE_SIP"/>
				<method signature="boolean isRegistered(java.lang.String)" static="false" return="" param1="track" permission="android.permission.USE_SIP"/>
				<method signature="void open(android.net.sip.SipProfile)" static="false" return="" param1="track" permission="android.permission.USE_SIP"/>
				<method signature="void open3(android.net.sip.SipProfile, android.app.PendingIntent, android.net.sip.ISipSessionListener)" static="false" return="" param1="track" param2="track" param3="track, listener, trackListener" permission="android.permission.USE_SIP,android.permission.WAKE_LOCK"/>
				<method signature="void setRegistrationListener(java.lang.String, android.net.sip.ISipSessionListener)" static="false" return="" param1="track" param2="track, listener, trackListener" permission="android.permission.USE_SIP"/>
			</class>
			<class name="SipAudioCall">
				<method signature="void close()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void endCall()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setSpeakerMode(boolean)" static="false" return="" param1="track" permission="android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void startAudio()" static="false" return="" permission="android.permission.ACCESS_WIFI_STATE,android.permission.WAKE_LOCK"/>
			</class>
			<class name="SipManager">
				<method signature="void close(java.lang.String)" static="false" return="" param1="track" permission="android.permission.USE_SIP,android.permission.WAKE_LOCK"/>
				<method signature="android.net.sip.SipSession createSipSession(android.net.sip.SipProfile, android.net.sip.SipSession$Listener)" static="false" return="track" param1="track" param2="track" permission="android.permission.USE_SIP"/>
				<method signature="android.net.sip.SipProfile[] getListOfProfiles()" static="false" return="track" permission="android.permission.USE_SIP"/>
				<method signature="android.net.sip.SipSession getSessionFor(android.content.Intent)" static="false" return="track" param1="track" permission="android.permission.USE_SIP"/>
				<method signature="boolean isOpened(java.lang.String)" static="false" return="" param1="track" permission="android.permission.USE_SIP"/>
				<method signature="boolean isRegistered(java.lang.String)" static="false" return="" param1="track" permission="android.permission.USE_SIP"/>
				<method signature="android.net.sip.SipAudioCall makeAudioCall(android.net.sip.SipProfile, android.net.sip.SipProfile, android.net.sip.SipAudioCall$Listener, int)" static="false" return="track" param1="track" param2="track" param3="track" param4="track" permission="android.permission.USE_SIP"/>
				<method signature="android.net.sip.SipAudioCall makeAudioCall(java.lang.String, java.lang.String, android.net.sip.SipAudioCall$Listener, int)" static="false" return="track" param1="track" param2="track" param3="track" param4="track" permission="android.permission.USE_SIP"/>
				<method signature="void open(android.net.sip.SipProfile)" static="false" return="" param1="track" permission="android.permission.USE_SIP"/>
				<method signature="void open(android.net.sip.SipProfile, android.app.PendingIntent, android.net.sip.SipRegistrationListener)" static="false" return="" param1="track" param2="track" param3="track, listener, trackListener" permission="android.permission.USE_SIP,android.permission.WAKE_LOCK"/>
				<method signature="void register(android.net.sip.SipProfile, int, android.net.sip.SipRegistrationListener)" static="false" return="" param1="track" param2="track" param3="track, listener, trackListener" permission="android.permission.USE_SIP"/>
				<method signature="void setRegistrationListener(java.lang.String, android.net.sip.SipRegistrationListener)" static="false" return="" param1="track" param2="track, listener, trackListener" permission="android.permission.USE_SIP"/>
				<method signature="android.net.sip.SipAudioCall takeAudioCall(android.content.Intent, android.net.sip.SipAudioCall$Listener)" static="false" return="track" param1="track" param2="track" permission="android.permission.USE_SIP"/>
				<method signature="void unregister(android.net.sip.SipProfile, android.net.sip.SipRegistrationListener)" static="false" return="" param1="track" param2="track, listener, trackListener" permission="android.permission.USE_SIP"/>
			</class>
			<class name="ISipService$Stub">
				<method signature="void close(java.lang.String)" static="false" return="" param1="track" permission="android.permission.USE_SIP,android.permission.WAKE_LOCK"/>
				<method signature="android.net.sip.ISipSession createSession(android.net.sip.SipProfile, android.net.sip.ISipSessionListener)" static="false" return="track" param1="track" param2="track, listener, trackListener" permission="android.permission.USE_SIP"/>
				<method signature="android.net.sip.SipProfile[] getListOfProfiles()" static="false" return="track" permission="android.permission.USE_SIP"/>
				<method signature="android.net.sip.ISipSession getPendingSession(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.USE_SIP"/>
				<method signature="boolean isOpened(java.lang.String)" static="false" return="" param1="track" permission="android.permission.USE_SIP"/>
				<method signature="boolean isRegistered(java.lang.String)" static="false" return="" param1="track" permission="android.permission.USE_SIP"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.USE_SIP,android.permission.WAKE_LOCK"/>
				<method signature="void open(android.net.sip.SipProfile)" static="false" return="" param1="track" permission="android.permission.USE_SIP"/>
				<method signature="void open3(android.net.sip.SipProfile, android.app.PendingIntent, android.net.sip.ISipSessionListener)" static="false" return="" param1="track" param2="track" param3="track, listener, trackListener" permission="android.permission.USE_SIP,android.permission.WAKE_LOCK"/>
				<method signature="void setRegistrationListener(java.lang.String, android.net.sip.ISipSessionListener)" static="false" return="" param1="track" param2="track, listener, trackListener" permission="android.permission.USE_SIP"/>
			</class>
		</package>
		<package name="android.filterpacks.numeric">
			<class name="SinWaveFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
		</package>
		<package name="com.android.commands.monkey">
			<class name="MonkeyRotationEvent">
				<method signature="int injectEvent(android.view.IWindowManager, android.app.IActivityManager, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="MonkeyNetworkMonitor">
				<method signature="void register(android.app.IActivityManager)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
			</class>
			<class name="Monkey">
				<method signature="void main(java.lang.String[])" static="true" return="" param0="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS,android.permission.WAKE_LOCK"/>
			</class>
			<class name="MonkeyEvent">
				<method signature="int injectEvent(android.view.IWindowManager, android.app.IActivityManager, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
		</package>
		<package name="android.view.inputmethod">
			<class name="InputMethodSession">
				<method signature="void dispatchKeyEvent(int, android.view.KeyEvent, android.view.inputmethod.InputMethodSession$EventCallback)" static="false" param1="" param2="" param3="listener" permission=""/>
				<method signature="void dispatchTrackballEvent(int, android.view.MotionEvent, android.view.inputmethod.InputMethodSession$EventCallback)" static="false" param1="" param2="" param3="listener" permission=""/>
			</class>
			<class name="InputMethod">
				<method signature="void createSession(android.view.inputmethod.InputMethod$SessionCallback)" static="false" param1="listener" permission=""/>
			</class>
		</package>
		<package name="android.filterpacks.base">
			<class name="CallbackFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="GLTextureTarget">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="GLTextureSource">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="FrameFetch">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="RetargetFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="FrameStore">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="ObjectSource">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="FrameSource">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="FrameBranch">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="OutputStreamTarget">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="NullFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="InputStreamSource">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
		</package>
		<package name="com.android.server">
			<class name="InputMethodManagerService">
				<method signature="void &lt;init&gt;(android.content.Context, com.android.server.wm.WindowManagerService)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void addClient(com.android.internal.view.IInputMethodClient, com.android.internal.view.IInputContext, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void buildInputMethodListLocked(java.util.ArrayList, java.util.HashMap)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void finishInput(com.android.internal.view.IInputMethodClient)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()" static="false" return="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="java.util.List getEnabledInputMethodList()" static="false" return="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="java.util.List getEnabledInputMethodSubtypeList(android.view.inputmethod.InputMethodInfo, boolean)" static="false" return="track" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="java.util.List getEnabledInputMethodSubtypeListLocked(android.view.inputmethod.InputMethodInfo, boolean)" static="false" return="track" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="java.util.List getInputMethodList()" static="false" return="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype()" static="false" return="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="java.util.List getShortcutInputMethodsAndSubtypes()" static="false" return="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="boolean handleMessage(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void hideMySoftInput(android.os.IBinder, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="boolean hideSoftInput(com.android.internal.view.IInputMethodClient, int, android.os.ResultReceiver)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="boolean notifySuggestionPicked(android.text.style.SuggestionSpan, java.lang.String, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void onServiceConnected(android.content.ComponentName, android.os.IBinder)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void onServiceDisconnected(android.content.ComponentName)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void registerSuggestionSpansForNotification(android.text.style.SuggestionSpan[])" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void removeClient(com.android.internal.view.IInputMethodClient)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void setAdditionalInputMethodSubtypes(java.lang.String, android.view.inputmethod.InputMethodSubtype[])" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="boolean setCurrentInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void setImeWindowStatus(android.os.IBinder, int, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void setInputMethod(android.os.IBinder, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void setInputMethodAndSubtype(android.os.IBinder, java.lang.String, android.view.inputmethod.InputMethodSubtype)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="boolean setInputMethodEnabled(java.lang.String, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="boolean setInputMethodEnabledLocked(java.lang.String, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void showInputMethodAndSubtypeEnablerFromClient(com.android.internal.view.IInputMethodClient, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void showInputMethodPickerFromClient(com.android.internal.view.IInputMethodClient)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void showMySoftInput(android.os.IBinder, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="boolean showSoftInput(com.android.internal.view.IInputMethodClient, int, android.os.ResultReceiver)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="com.android.internal.view.InputBindResult startInput(com.android.internal.view.IInputMethodClient, com.android.internal.view.IInputContext, android.view.inputmethod.EditorInfo, int)" static="false" return="track" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="boolean switchToLastInputMethod(android.os.IBinder)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="boolean switchToNextInputMethod(android.os.IBinder, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void systemReady(com.android.server.StatusBarManagerService)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void updateFromSettingsLocked()" static="false" return="" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void updateStatusIcon(android.os.IBinder, java.lang.String, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="com.android.internal.view.InputBindResult windowGainedFocus(com.android.internal.view.IInputMethodClient, android.os.IBinder, int, int, int, android.view.inputmethod.EditorInfo, com.android.internal.view.IInputContext)" static="false" return="track" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" param7="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="AlarmManagerService">
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.SET_TIME_ZONE"/>
			</class>
			<class name="WallpaperManagerService">
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.SET_WALLPAPER_HINTS,android.permission.SET_WALLPAPER"/>
			</class>
			<class name="BackupManagerService">
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SETTINGS,android.permission.WAKE_LOCK"/>
			</class>
			<class name="ThrottleService">
				<method signature="void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="long getByteCount(java.lang.String, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="int getCliffLevel(java.lang.String, int)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="long getCliffThreshold(java.lang.String, int)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="java.lang.String getHelpUri()" static="false" return="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="long getPeriodStartTime(java.lang.String)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="long getResetTime(java.lang.String)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="int getThrottle(java.lang.String)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="void shutdown()" static="false" return="" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void systemReady()" static="false" return="" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="NetworkTimeUpdateService">
				<method signature="void systemReady()" static="false" return="" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="RecognitionManagerService$MyPackageMonitor">
				<method signature="boolean onHandleForceStop(android.content.Intent, java.lang.String[], int, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void onPackageRemoved(java.lang.String, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void onReceive(android.content.Context, android.content.Intent)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="DevicePolicyManagerService$MyPackageMonitor">
				<method signature="boolean onHandleForceStop(android.content.Intent, java.lang.String[], int, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void onPackageRemoved(java.lang.String, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void onReceive(android.content.Context, android.content.Intent)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="DeviceStorageMonitorService">
				<method signature="void &lt;init&gt;(android.content.Context)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY,android.permission.VIBRATE,android.permission.CLEAR_APP_CACHE"/>
				<method signature="long getMemoryLowThreshold()" static="false" return="" permission="android.permission.VIBRATE,android.permission.BROADCAST_STICKY,android.permission.CLEAR_APP_CACHE"/>
				<method signature="boolean isMemoryLow()" static="false" return="" permission="android.permission.VIBRATE,android.permission.BROADCAST_STICKY,android.permission.CLEAR_APP_CACHE"/>
				<method signature="void updateMemory()" static="false" return="" permission="android.permission.VIBRATE,android.permission.BROADCAST_STICKY,android.permission.CLEAR_APP_CACHE"/>
			</class>
			<class name="DevicePolicyManagerService">
				<method signature="void wipeDataLocked(int)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="ConnectivityService$VpnCallback">
				<method signature="void override(java.util.List, java.util.List)" static="false" return="" param1="track" param2="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void restore()" static="false" return="" permission="android.permission.BROADCAST_STICKY"/>
			</class>
			<class name="LightsService$1">
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.FLASHLIGHT"/>
			</class>
			<class name="BootReceiver">
				<method signature="void onReceive(android.content.Context, android.content.Intent)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_EXTERNAL_STORAGE,android.permission.INTERNET,android.permission.VIBRATE"/>
			</class>
			<class name="NsdService$NsdStateMachine$DefaultState">
				<method signature="void enter()" static="false" return="" permission="android.permission.GET_TASKS,android.permission.ACCESS_WIFI_STATE,android.permission.MODIFY_AUDIO_SETTINGS,android.permission.READ_PHONE_STATE,android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.VIBRATE,android.permission.BROADCAST_STICKY,android.permission.BLUETOOTH_ADMIN,android.permission.CHANGE_NETWORK_STATE,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="InputMethodManagerService$MyPackageMonitor">
				<method signature="void onPackageRemoved(java.lang.String, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void onReceive(android.content.Context, android.content.Intent)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="TelephonyRegistry">
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.READ_PHONE_STATE,android.permission.BROADCAST_STICKY,android.permission.ACCESS_COARSE_LOCATION"/>
			</class>
			<class name="ConnectivityService">
				<method signature="void &lt;init&gt;(android.content.Context, android.os.INetworkManagementService, android.net.INetworkStatsService, android.net.INetworkPolicyManager)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE"/>
				<method signature="android.os.ParcelFileDescriptor establishVpn(com.android.internal.net.VpnConfig)" static="false" return="track" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE"/>
				<method signature="android.net.LinkProperties getActiveLinkProperties()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="android.net.NetworkInfo getActiveNetworkInfo()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="android.net.NetworkInfo getActiveNetworkInfoForUid(int)" static="false" return="track" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE"/>
				<method signature="android.net.NetworkQuotaInfo getActiveNetworkQuotaInfo()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="android.net.NetworkInfo[] getAllNetworkInfo()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="android.net.NetworkState[] getAllNetworkState()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="android.net.ProxyProperties getGlobalProxy()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE"/>
				<method signature="int getLastTetherError(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="com.android.internal.net.LegacyVpnInfo getLegacyVpnInfo()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE"/>
				<method signature="android.net.LinkProperties getLinkProperties(int)" static="false" return="track" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean getMobileDataEnabled()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="android.net.NetworkInfo getNetworkInfo(int)" static="false" return="track" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="int getNetworkPreference()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="android.net.ProxyProperties getProxy()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE"/>
				<method signature="java.lang.String[] getTetherableBluetoothRegexs()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="java.lang.String[] getTetherableIfaces()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="java.lang.String[] getTetherableUsbRegexs()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="java.lang.String[] getTetherableWifiRegexs()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="java.lang.String[] getTetheredIfacePairs()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="java.lang.String[] getTetheredIfaces()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="java.lang.String[] getTetheringErroredIfaces()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean isActiveNetworkMetered()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean isNetworkSupported(int)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean isTetheringSupported()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.READ_PHONE_STATE,android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.VIBRATE,android.permission.ACCESS_WIFI_STATE,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean prepareVpn(java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE"/>
				<method signature="boolean protectVpn(android.os.ParcelFileDescriptor)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void reportInetCondition(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY"/>
				<method signature="void requestNetworkTransitionWakelock(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.WAKE_LOCK"/>
				<method signature="boolean requestRouteToHost(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_NETWORK_STATE"/>
				<method signature="boolean requestRouteToHostAddress(int, byte[])" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_NETWORK_STATE"/>
				<method signature="void setDataDependency(int, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void setGlobalProxy(android.net.ProxyProperties)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_NETWORK_STATE"/>
				<method signature="void setMobileDataEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_NETWORK_STATE"/>
				<method signature="void setNetworkPreference(int)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="void setPolicyDataEnable(int, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE"/>
				<method signature="boolean setRadio(int, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_NETWORK_STATE"/>
				<method signature="boolean setRadios(boolean)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_NETWORK_STATE"/>
				<method signature="int setUsbTethering(boolean)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="void startLegacyVpn(com.android.internal.net.VpnConfig, java.lang.String[], java.lang.String[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.VIBRATE"/>
				<method signature="int startUsingNetworkFeature(int, java.lang.String, android.os.IBinder)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.READ_PHONE_STATE,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_WIFI_STATE,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="int stopUsingNetworkFeature(int, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="void systemReady()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE"/>
				<method signature="int tether(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_NETWORK_STATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="int untether(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_NETWORK_STATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="void updateNetworkSettings(android.net.NetworkStateTracker)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE"/>
			</class>
			<class name="StatusBarManagerService">
				<method signature="void collapse()" static="false" return="" permission="android.permission.EXPAND_STATUS_BAR"/>
				<method signature="void expand()" static="false" return="" permission="android.permission.EXPAND_STATUS_BAR"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.EXPAND_STATUS_BAR"/>
			</class>
			<class name="SerialService">
				<method signature="java.lang.String[] getSerialPorts()" static="false" return="track" permission="android.permission.SERIAL_PORT"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.SERIAL_PORT"/>
				<method signature="android.os.ParcelFileDescriptor openSerialPort(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.SERIAL_PORT"/>
			</class>
			<class name="NsdService">
				<method signature="com.android.server.NsdService create(android.content.Context)" static="true" return="track" param0="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="android.os.Messenger getMessenger()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.INTERNET"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SETTINGS,android.permission.INTERNET"/>
				<method signature="void setEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="VibratorService">
				<method signature="void cancelVibrate(android.os.IBinder)" static="false" return="" param1="track" permission="android.permission.VIBRATE"/>
				<method signature="void onInputDeviceAdded(int)" static="false" return="" param1="track" permission="android.permission.VIBRATE,android.permission.WAKE_LOCK"/>
				<method signature="void onInputDeviceChanged(int)" static="false" return="" param1="track" permission="android.permission.VIBRATE,android.permission.WAKE_LOCK"/>
				<method signature="void onInputDeviceRemoved(int)" static="false" return="" param1="track" permission="android.permission.VIBRATE,android.permission.WAKE_LOCK"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.VIBRATE,android.permission.WAKE_LOCK"/>
				<method signature="void systemReady()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.VIBRATE,android.permission.WAKE_LOCK"/>
				<method signature="void vibrate(long, android.os.IBinder)" static="false" return="" param1="track" param2="track" permission="android.permission.VIBRATE,android.permission.WAKE_LOCK"/>
				<method signature="void vibratePattern(long[], int, android.os.IBinder)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.VIBRATE"/>
			</class>
			<class name="WallpaperManagerService$MyPackageMonitor">
				<method signature="void onPackageRemoved(java.lang.String, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void onReceive(android.content.Context, android.content.Intent)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="RecognitionManagerService">
				<method signature="void setCurRecognizer(android.content.ComponentName)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void systemReady()" static="false" return="" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="PowerManagerService">
				<method signature="void acquireWakeLock(int, android.os.IBinder, java.lang.String, android.os.WorkSource)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SETTINGS,android.permission.WAKE_LOCK"/>
				<method signature="void releaseWakeLock(android.os.IBinder, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setStayOnSetting(int)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="WifiService">
				<method signature="void &lt;init&gt;(android.content.Context)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void acquireMulticastLock(android.os.IBinder, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.CHANGE_WIFI_MULTICAST_STATE,android.permission.WRITE_SETTINGS"/>
				<method signature="boolean acquireWifiLock(android.os.IBinder, int, java.lang.String, android.os.WorkSource)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SETTINGS,android.permission.WAKE_LOCK"/>
				<method signature="int addOrUpdateNetwork(android.net.wifi.WifiConfiguration)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void addToBlacklist(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void checkAndStartWifi()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_WIFI_STATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="void clearBlacklist()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE"/>
				<method signature="boolean disableNetwork(int)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void disconnect()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE"/>
				<method signature="boolean enableNetwork(int, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE"/>
				<method signature="java.lang.String getConfigFile()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.ACCESS_WIFI_STATE"/>
				<method signature="java.util.List getConfiguredNetworks()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.ACCESS_WIFI_STATE"/>
				<method signature="android.net.wifi.WifiInfo getConnectionInfo()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.ACCESS_WIFI_STATE"/>
				<method signature="android.net.DhcpInfo getDhcpInfo()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.ACCESS_WIFI_STATE"/>
				<method signature="int getFrequencyBand()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.ACCESS_WIFI_STATE"/>
				<method signature="java.util.List getScanResults()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.ACCESS_WIFI_STATE"/>
				<method signature="android.net.wifi.WifiConfiguration getWifiApConfiguration()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.ACCESS_WIFI_STATE"/>
				<method signature="int getWifiApEnabledState()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.ACCESS_WIFI_STATE"/>
				<method signature="int getWifiEnabledState()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.ACCESS_WIFI_STATE"/>
				<method signature="android.os.Messenger getWifiServiceMessenger()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_WIFI_STATE"/>
				<method signature="android.os.Messenger getWifiStateMachineMessenger()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_WIFI_STATE"/>
				<method signature="void initializeMulticastFiltering()" static="false" return="" permission="android.permission.CHANGE_WIFI_MULTICAST_STATE,android.permission.WRITE_SETTINGS"/>
				<method signature="boolean isDualBandSupported()" static="false" return="" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="boolean isMulticastEnabled()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.ACCESS_WIFI_STATE"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.CHANGE_WIFI_MULTICAST_STATE,android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_WIFI_STATE,android.permission.WAKE_LOCK"/>
				<method signature="boolean pingSupplicant()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.ACCESS_WIFI_STATE"/>
				<method signature="void reassociate()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void reconnect()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void releaseMulticastLock()" static="false" return="" permission="android.permission.CHANGE_WIFI_MULTICAST_STATE,android.permission.WRITE_SETTINGS"/>
				<method signature="boolean releaseWifiLock(android.os.IBinder)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.WAKE_LOCK"/>
				<method signature="boolean removeNetwork(int)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE"/>
				<method signature="boolean saveConfiguration()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void setCountryCode(java.lang.String, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void setFrequencyBand(int, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void setWifiApConfiguration(android.net.wifi.WifiConfiguration)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void setWifiApEnabled(android.net.wifi.WifiConfiguration, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE"/>
				<method signature="boolean setWifiEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void startScan(boolean)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void startWifi()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void stopWifi()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void updateWifiLockWorkSource(android.os.IBinder, android.os.WorkSource)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="LocationManagerService">
				<method signature="boolean addGpsStatusListener(android.location.IGpsStatusListener)" static="false" return="" param1="track, listener, trackListener" permission="android.permission.ACCESS_FINE_LOCATION"/>
				<method signature="void addTestProvider(java.lang.String, boolean, boolean, boolean, boolean, boolean, boolean, boolean, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" param7="track" param8="track" param9="track" param10="track" permission="android.permission.ACCESS_MOCK_LOCATION"/>
				<method signature="void clearTestProviderEnabled(java.lang.String)" static="false" return="" param1="track" permission="android.permission.ACCESS_MOCK_LOCATION"/>
				<method signature="void clearTestProviderLocation(java.lang.String)" static="false" return="" param1="track" permission="android.permission.ACCESS_MOCK_LOCATION"/>
				<method signature="void clearTestProviderStatus(java.lang.String)" static="false" return="" param1="track" permission="android.permission.ACCESS_MOCK_LOCATION"/>
				<method signature="java.lang.String getBestProvider(android.location.Criteria, boolean)" static="false" return="track" param1="track" param2="track" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="android.os.Bundle getProviderInfo(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="java.util.List getProviders(android.location.Criteria, boolean)" static="false" return="track" param1="track" param2="track" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="boolean isProviderEnabled(java.lang.String)" static="false" return="" param1="track" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.ACCESS_LOCATION_EXTRA_COMMANDS,android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.ACCESS_MOCK_LOCATION"/>
				<method signature="void removeTestProvider(java.lang.String)" static="false" return="" param1="track" permission="android.permission.ACCESS_MOCK_LOCATION"/>
				<method signature="boolean sendExtraCommand(java.lang.String, java.lang.String, android.os.Bundle)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.ACCESS_LOCATION_EXTRA_COMMANDS,android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void setTestProviderEnabled(java.lang.String, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_MOCK_LOCATION"/>
				<method signature="void setTestProviderLocation(java.lang.String, android.location.Location)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_MOCK_LOCATION"/>
				<method signature="void setTestProviderStatus(java.lang.String, int, android.os.Bundle, long)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.ACCESS_MOCK_LOCATION"/>
			</class>
			<class name="TextServicesManagerService$TextServicesMonitor">
				<method signature="boolean onHandleForceStop(android.content.Intent, java.lang.String[], int, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void onPackageRemoved(java.lang.String, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void onReceive(android.content.Context, android.content.Intent)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="LocationManagerService$2">
				<method signature="boolean onHandleForceStop(android.content.Intent, java.lang.String[], int, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void onPackageRemoved(java.lang.String, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void onReceive(android.content.Context, android.content.Intent)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void onSomePackagesChanged()" static="false" return="" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="MountService">
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.MOUNT_UNMOUNT_FILESYSTEMS,android.permission.MOUNT_FORMAT_FILESYSTEMS"/>
			</class>
			<class name="NotificationManagerService">
				<method signature="void &lt;init&gt;(android.content.Context, com.android.server.StatusBarManagerService, com.android.server.LightsService)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="boolean areNotificationsEnabledForPackage(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void cancelAllNotifications(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void cancelNotification(java.lang.String, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void cancelNotificationWithTag(java.lang.String, java.lang.String, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void cancelToast(java.lang.String, android.app.ITransientNotification)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void enqueueNotification(java.lang.String, int, android.app.Notification, int[])" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SETTINGS,android.permission.VIBRATE"/>
				<method signature="void enqueueNotificationInternal(java.lang.String, int, int, java.lang.String, int, android.app.Notification, int[])" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" param7="track" permission="android.permission.WRITE_SETTINGS,android.permission.VIBRATE"/>
				<method signature="void enqueueNotificationWithTag(java.lang.String, java.lang.String, int, android.app.Notification, int[])" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.WRITE_SETTINGS,android.permission.VIBRATE"/>
				<method signature="void enqueueToast(java.lang.String, android.app.ITransientNotification, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.VIBRATE"/>
				<method signature="void setNotificationsEnabledForPackage(java.lang.String, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="NsdService$NsdStateMachine$DisabledState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="CertBlacklister">
				<method signature="void &lt;init&gt;(android.content.Context)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="SamplingProfilerService">
				<method signature="void &lt;init&gt;(android.content.Context)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
		</package>
		<package name="android.net.nsd">
			<class name="INsdManager">
				<method signature="android.os.Messenger getMessenger()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="void setEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="NsdManager">
				<method signature="void &lt;init&gt;(android.content.Context, android.net.nsd.INsdManager)" static="false" return="" param1="track" param2="track" permission="android.permission.INTERNET"/>
				<method signature="void discoverServices(java.lang.String, int, android.net.nsd.NsdManager$DiscoveryListener)" static="false" return="" param1="track" param2="track" param3="track, listener, trackListener" permission="android.permission.INTERNET"/>
				<method signature="void registerService(android.net.nsd.NsdServiceInfo, int, android.net.nsd.NsdManager$RegistrationListener)" static="false" return="" param1="track" param2="track" param3="track, listener, trackListener" permission="android.permission.INTERNET"/>
				<method signature="void resolveService(android.net.nsd.NsdServiceInfo, android.net.nsd.NsdManager$ResolveListener)" static="false" return="" param1="track" param2="track, listener, trackListener" permission="android.permission.INTERNET"/>
				<method signature="void setEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET,android.permission.WRITE_SETTINGS"/>
				<method signature="void stopServiceDiscovery(android.net.nsd.NsdManager$DiscoveryListener)" static="false" return="" param1="track, listener, trackListener" permission="android.permission.INTERNET"/>
				<method signature="void unregisterService(android.net.nsd.NsdManager$RegistrationListener)" static="false" return="" param1="track, listener, trackListener" permission="android.permission.INTERNET"/>
			</class>
			<class name="INsdManager$Stub">
				<method signature="android.os.Messenger getMessenger()" static="false" return="track" permission="android.permission.INTERNET"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SETTINGS,android.permission.INTERNET"/>
				<method signature="void setEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
		</package>
		<package name="android.bordeaux.services">
			<class name="Learning_StochasticLinearRanker">
				<method signature="void setModelChangeCallback(android.bordeaux.services.IBordeauxLearner$ModelChangeCallback)" static="false" param1="listener" permission=""/>
			</class>
			<class name="IBordeauxService">
				<method signature="void registerCallback(android.bordeaux.services.IBordeauxServiceCallback)" static="false" param1="listener" permission=""/>
				<method signature="void unregisterCallback(android.bordeaux.services.IBordeauxServiceCallback)" static="false" param1="listener" permission=""/>
			</class>
		</package>
		<package name="android.filterpacks.ui">
			<class name="SurfaceRenderFilter">
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="SurfaceTargetFilter">
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
		</package>
		<package name="com.android.internal.telephony.test">
			<class name="ModelInterpreter">
				<method signature="void &lt;init&gt;(java.net.InetSocketAddress)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void pauseResponses()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="void progressConnectingCallState()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="void progressConnectingToActive()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="void resumeResponses()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="void run()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="void sendUnsolicited(java.lang.String)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setAutoProgressConnectingCall(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setNextCallFailCause(int)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void setNextDialFailImmediately(boolean)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void shutdown()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="void triggerHangupAll()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="void triggerHangupBackground()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="void triggerHangupForeground()" static="false" return="" permission="android.permission.INTERNET"/>
				<method signature="void triggerIncomingSMS(java.lang.String)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void triggerIncomingUssd(java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.INTERNET"/>
				<method signature="void triggerRing(java.lang.String)" static="false" return="" param1="track" permission="android.permission.INTERNET"/>
				<method signature="void triggerSsn(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.INTERNET"/>
			</class>
			<class name="SimulatedCommands">
				<method signature="void &lt;init&gt;()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void acceptCall(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void acknowledgeIncomingGsmSmsWithPdu(boolean, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void acknowledgeLastIncomingCdmaSms(boolean, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void acknowledgeLastIncomingGsmSms(boolean, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void cancelPendingUssd(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void changeBarringPassword(java.lang.String, java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void changeIccPin(java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void changeIccPin2(java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void changeIccPin2ForApp(java.lang.String, java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void changeIccPinForApp(java.lang.String, java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void conference(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void deactivateDataCall(int, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void deleteSmsOnRuim(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void deleteSmsOnSim(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void dial(java.lang.String, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void dial(java.lang.String, int, com.android.internal.telephony.UUSInfo, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void exitEmergencyCallbackMode(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void explicitCallTransfer(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void forceDataDormancy(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getAvailableNetworks(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getBasebandVersion(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getCDMASubscription(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getCLIR(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getCdmaBroadcastConfig(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getCdmaSubscriptionSource(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getCurrentCalls(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getDataCallList(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getDataRegistrationState(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getDeviceIdentity(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getGsmBroadcastConfig(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getIMEI(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getIMEISV(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getIMSI(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getIMSIForApp(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getIccCardStatus(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getLastCallFailCause(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getLastDataCallFailCause(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getLastPdpFailCause(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getMute(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getNeighboringCids(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getNetworkSelectionMode(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getOperator(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getPDPContextList(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getPreferredNetworkType(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getPreferredVoicePrivacy(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getSignalStrength(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getSmscAddress(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getVoiceRadioTechnology(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getVoiceRegistrationState(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void handleCallSetupRequestFromSim(boolean, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void hangupConnection(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void hangupForegroundResumeBackground(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void hangupWaitingOrBackground(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void iccIO(int, int, java.lang.String, int, int, int, java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" param7="track" param8="track" param9="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void iccIOForApp(int, int, java.lang.String, int, int, int, java.lang.String, java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" param7="track" param8="track" param9="track" param10="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void invokeOemRilRequestRaw(byte[], android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void invokeOemRilRequestStrings(java.lang.String[], android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void onRadioAvailable()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void pauseResponses()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void progressConnectingCallState()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void progressConnectingToActive()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void queryAvailableBandMode(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void queryCLIP(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void queryCallForwardStatus(int, int, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void queryCallWaiting(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void queryCdmaRoamingPreference(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void queryFacilityLock(java.lang.String, java.lang.String, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void queryFacilityLockForApp(java.lang.String, java.lang.String, int, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void queryTTYMode(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void rejectCall(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void reportSmsMemoryStatus(boolean, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void reportStkServiceIsRunning(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void requestIsimAuthentication(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void resetRadio(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void resumeResponses()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void sendBurstDtmf(java.lang.String, int, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void sendCDMAFeatureCode(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void sendCdmaSms(byte[], android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void sendDtmf(char, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void sendEnvelope(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void sendEnvelopeWithStatus(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void sendSMS(java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void sendTerminalResponse(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void sendUSSD(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void separateConnection(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setAutoProgressConnectingCall(boolean)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setBandMode(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setCLIR(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setCallForward(int, int, int, java.lang.String, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setCallWaiting(boolean, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setCdmaBroadcastActivation(boolean, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setCdmaBroadcastConfig(int[], android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setCdmaRoamingPreference(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setCdmaSubscriptionSource(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setCurrentPreferredNetworkType()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setFacilityLock(java.lang.String, boolean, java.lang.String, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setFacilityLockForApp(java.lang.String, boolean, java.lang.String, int, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setGsmBroadcastActivation(boolean, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setGsmBroadcastConfig(com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[], android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setLocationUpdates(boolean, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setMute(boolean, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setNetworkSelectionModeAutomatic(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setNetworkSelectionModeManual(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setNextCallFailCause(int)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setNextDialFailImmediately(boolean)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setPhoneType(int)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setPreferredNetworkType(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setPreferredVoicePrivacy(boolean, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setRadioPower(boolean, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setRadioState(com.android.internal.telephony.CommandsInterface$RadioState)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setSmscAddress(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setSuppServiceNotifications(boolean, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setTTYMode(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setupDataCall(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" param7="track" param8="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void shutdown()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void startDtmf(char, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void stopDtmf(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void supplyIccPin(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void supplyIccPin2(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void supplyIccPin2ForApp(java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void supplyIccPinForApp(java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void supplyIccPuk(java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void supplyIccPuk2(java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void supplyIccPuk2ForApp(java.lang.String, java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void supplyIccPukForApp(java.lang.String, java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void supplyNetworkDepersonalization(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void switchWaitingOrHoldingAndActive(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void triggerHangupAll()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void triggerHangupBackground()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void triggerHangupForeground()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void triggerIncomingSMS(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void triggerIncomingUssd(java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void triggerRing(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void triggerSsn(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void writeSmsToRuim(int, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void writeSmsToSim(int, java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
			</class>
		</package>
		<package name="android.speech">
			<class name="IRecognitionService$Stub">
				<method signature="void cancel(android.speech.IRecognitionListener)" static="false" return="" param1="track, listener, trackListener" permission="android.permission.RECORD_AUDIO"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.RECORD_AUDIO"/>
				<method signature="void startListening(android.content.Intent, android.speech.IRecognitionListener)" static="false" return="" param1="track" param2="track, listener, trackListener" permission="android.permission.RECORD_AUDIO"/>
				<method signature="void stopListening(android.speech.IRecognitionListener)" static="false" return="" param1="track, listener, trackListener" permission="android.permission.RECORD_AUDIO"/>
			</class>
			<class name="IRecognitionService">
				<method signature="void cancel(android.speech.IRecognitionListener)" static="false" return="" param1="track, listener, trackListener" permission="android.permission.RECORD_AUDIO"/>
				<method signature="void startListening(android.content.Intent, android.speech.IRecognitionListener)" static="false" return="" param1="track" param2="track, listener, trackListener" permission="android.permission.RECORD_AUDIO"/>
				<method signature="void stopListening(android.speech.IRecognitionListener)" static="false" return="" param1="track, listener, trackListener" permission="android.permission.RECORD_AUDIO"/>
			</class>
			<class name="RecognitionService$RecognitionServiceBinder">
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.RECORD_AUDIO"/>
			</class>
			<class name="SpeechRecognizer">
				<method signature="void cancel()" static="false" return="" permission="android.permission.RECORD_AUDIO"/>
				<method signature="void setRecognitionListener(android.speech.RecognitionListener)" static="false" return="" param1="track, listener, trackListener" permission="android.permission.RECORD_AUDIO"/>
				<method signature="void startListening(android.content.Intent)" static="false" return="" param1="track" permission="android.permission.RECORD_AUDIO"/>
				<method signature="void stopListening()" static="false" return="" permission="android.permission.RECORD_AUDIO"/>
			</class>
		</package>
		<package name="com.android.internal.telephony.ims">
			<class name="IsimUiccRecords">
				<method signature="int fetchIsimRecords(com.android.internal.telephony.IccFileHandler, android.os.Handler)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
			</class>
		</package>
		<package name="android.database.sqlite">
			<class name="SQLiteSession">
				<method signature="void beginTransaction(int, android.database.sqlite.SQLiteTransactionListener, int, android.os.CancellationSignal)" static="false" param1="" param2="listener" param3="" param4="" permission=""/>
			</class>
			<class name="SQLiteDatabase">
				<method signature="void beginTransactionWithListener(android.database.sqlite.SQLiteTransactionListener)" static="false" param1="listener" permission=""/>
				<method signature="void beginTransactionWithListenerNonExclusive(android.database.sqlite.SQLiteTransactionListener)" static="false" param1="listener" permission=""/>
			</class>
		</package>
		<package name="javax.sql.rowset">
			<class name="BaseRowSet">
				<method signature="void addRowSetListener(javax.sql.RowSetListener)" static="false" param1="listener" permission=""/>
			</class>
		</package>
		<package name="android.provider">
			<class name="Browser">
				<method signature="void addSearchUrl(android.content.ContentResolver, java.lang.String)" static="true" return="" param0="track" param1="track" permission="com.android.browser.permission.WRITE_HISTORY_BOOKMARKS,android.permission.GET_ACCOUNTS,com.android.browser.permission.READ_HISTORY_BOOKMARKS"/>
				<method signature="boolean canClearHistory(android.content.ContentResolver)" static="true" return="" param0="track" permission="com.android.browser.permission.READ_HISTORY_BOOKMARKS"/>
				<method signature="void clearHistory(android.content.ContentResolver)" static="true" return="" param0="track" permission="com.android.browser.permission.WRITE_HISTORY_BOOKMARKS,android.permission.GET_ACCOUNTS,com.android.browser.permission.READ_HISTORY_BOOKMARKS"/>
				<method signature="void clearSearches(android.content.ContentResolver)" static="true" return="" param0="track" permission="com.android.browser.permission.WRITE_HISTORY_BOOKMARKS,android.permission.GET_ACCOUNTS,com.android.browser.permission.READ_HISTORY_BOOKMARKS"/>
				<method signature="void deleteFromHistory(android.content.ContentResolver, java.lang.String)" static="true" return="" param0="track" param1="track" permission="com.android.browser.permission.WRITE_HISTORY_BOOKMARKS,android.permission.GET_ACCOUNTS,com.android.browser.permission.READ_HISTORY_BOOKMARKS"/>
				<method signature="void deleteHistoryTimeFrame(android.content.ContentResolver, long, long)" static="true" return="" param0="track" param1="track" param2="track" permission="com.android.browser.permission.WRITE_HISTORY_BOOKMARKS,android.permission.GET_ACCOUNTS,com.android.browser.permission.READ_HISTORY_BOOKMARKS"/>
				<method signature="android.database.Cursor getAllBookmarks(android.content.ContentResolver)" static="true" return="track" param0="track" permission="com.android.browser.permission.READ_HISTORY_BOOKMARKS"/>
				<method signature="android.database.Cursor getAllVisitedUrls(android.content.ContentResolver)" static="true" return="track" param0="track" permission="com.android.browser.permission.READ_HISTORY_BOOKMARKS"/>
				<method signature="java.lang.String[] getVisitedHistory(android.content.ContentResolver)" static="true" return="track" param0="track" permission="com.android.browser.permission.READ_HISTORY_BOOKMARKS"/>
				<method signature="void truncateHistory(android.content.ContentResolver)" static="true" return="" param0="track" permission="com.android.browser.permission.WRITE_HISTORY_BOOKMARKS,android.permission.GET_ACCOUNTS,com.android.browser.permission.READ_HISTORY_BOOKMARKS"/>
				<method signature="void updateVisitedHistory(android.content.ContentResolver, java.lang.String, boolean)" static="true" return="" param0="track" param1="track" param2="track" permission="com.android.browser.permission.WRITE_HISTORY_BOOKMARKS,android.permission.GET_ACCOUNTS,com.android.browser.permission.READ_HISTORY_BOOKMARKS"/>
			</class>
			<class name="CalendarContract$EventDays">
				<method signature="android.database.Cursor query(android.content.ContentResolver, int, int, java.lang.String[])" static="true" return="track" param0="track" param1="track" param2="track" param3="track" permission="android.permission.READ_CALENDAR"/>
			</class>
			<class name="Telephony$Sms$Outbox">
				<method signature="android.net.Uri addMessage(android.content.ContentResolver, java.lang.String, java.lang.String, java.lang.String, java.lang.Long, boolean, long)" static="true" return="track" param0="track" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.READ_SMS,android.permission.SEND_SMS,android.permission.WRITE_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="ContactsContract$SyncState">
				<method signature="byte[] get(android.content.ContentProviderClient, android.accounts.Account)" static="true" return="track" param0="track" param1="track" permission="android.permission.READ_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="android.util.Pair getWithUri(android.content.ContentProviderClient, android.accounts.Account)" static="true" return="track" param0="track" param1="track" permission="android.permission.READ_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="android.content.ContentProviderOperation newSetOperation(android.accounts.Account, byte[])" static="true" return="track" param0="track" param1="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="void set(android.content.ContentProviderClient, android.accounts.Account, byte[])" static="true" return="" param0="track" param1="track" param2="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="BrowserContract$Bookmarks">
				<method signature="android.net.Uri buildFolderUri(long)" static="true" return="track" param0="track" permission="com.android.browser.permission.WRITE_HISTORY_BOOKMARKS,android.permission.GET_ACCOUNTS,com.android.browser.permission.READ_HISTORY_BOOKMARKS"/>
			</class>
			<class name="ContactsContract$Contacts$AggregationSuggestions$Builder">
				<method signature="android.net.Uri build()" static="false" return="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="ContactsContract$RawContacts$EntityIteratorImpl">
				<method signature="android.content.Entity next()" static="false" return="track" permission="android.permission.READ_CALENDAR"/>
				<method signature="java.lang.Object next()" static="false" return="track" permission="android.permission.READ_CALENDAR"/>
			</class>
			<class name="ContactsContract$ProfileSyncState">
				<method signature="byte[] get(android.content.ContentProviderClient, android.accounts.Account)" static="true" return="track" param0="track" param1="track" permission="android.permission.READ_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="android.util.Pair getWithUri(android.content.ContentProviderClient, android.accounts.Account)" static="true" return="track" param0="track" param1="track" permission="android.permission.READ_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="android.content.ContentProviderOperation newSetOperation(android.accounts.Account, byte[])" static="true" return="track" param0="track" param1="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="void set(android.content.ContentProviderClient, android.accounts.Account, byte[])" static="true" return="" param0="track" param1="track" param2="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="UserDictionary$Words">
				<method signature="void addWord(android.content.Context, java.lang.String, int, int)" static="true" return="" param0="track" param1="track" param2="track" param3="track" permission="android.permission.WRITE_USER_DICTIONARY,android.permission.READ_USER_DICTIONARY"/>
				<method signature="void addWord(android.content.Context, java.lang.String, int, java.lang.String, java.util.Locale)" static="true" return="" param0="track" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_USER_DICTIONARY,android.permission.READ_USER_DICTIONARY"/>
			</class>
			<class name="Settings$Secure">
				<method signature="android.net.Uri getUriFor(java.lang.String)" static="true" return="track" param0="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="boolean putFloat(android.content.ContentResolver, java.lang.String, float)" static="true" return="" param0="track" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="boolean putInt(android.content.ContentResolver, java.lang.String, int)" static="true" return="" param0="track" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="boolean putLong(android.content.ContentResolver, java.lang.String, long)" static="true" return="" param0="track" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="boolean putString(android.content.ContentResolver, java.lang.String, java.lang.String)" static="true" return="" param0="track" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void setLocationProviderEnabled(android.content.ContentResolver, java.lang.String, boolean)" static="true" return="" param0="track" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="ContactsContract$RawContacts">
				<method signature="android.net.Uri getContactLookupUri(android.content.ContentResolver, android.net.Uri)" static="true" return="track" param0="track" param1="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="Contacts$ContactMethods">
				<method signature="void addPostalLocation(android.content.Context, long, double, double)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="CalendarContract$Instances">
				<method signature="android.database.Cursor query(android.content.ContentResolver, java.lang.String[], long, long)" static="true" return="track" param0="track" param1="track" param2="track" param3="track" permission="android.permission.READ_CALENDAR"/>
				<method signature="android.database.Cursor query(android.content.ContentResolver, java.lang.String[], long, long, java.lang.String)" static="true" return="track" param0="track" param1="track" param2="track" param3="track" param4="track" permission="android.permission.READ_CALENDAR"/>
			</class>
			<class name="Contacts$Settings">
				<method signature="java.lang.String getSetting(android.content.ContentResolver, java.lang.String, java.lang.String)" static="true" return="track" param0="track" param1="track" param2="track" permission="android.permission.READ_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="void setSetting(android.content.ContentResolver, java.lang.String, java.lang.String, java.lang.String)" static="true" return="" param0="track" param1="track" param2="track" param3="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="Telephony$Sms$Sent">
				<method signature="android.net.Uri addMessage(android.content.ContentResolver, java.lang.String, java.lang.String, java.lang.String, java.lang.Long)" static="true" return="track" param0="track" param1="track" param2="track" param3="track" param4="track" permission="android.permission.READ_SMS,android.permission.SEND_SMS,android.permission.WRITE_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="Downloads">
				<method signature="void removeAllDownloadsByPackage(android.content.Context, java.lang.String, java.lang.String)" static="true" return="" param0="track" param1="track" param2="track" permission="android.permission.WRITE_EXTERNAL_STORAGE,android.permission.INTERNET,android.permission.VIBRATE"/>
			</class>
			<class name="CalendarContract$Reminders">
				<method signature="android.database.Cursor query(android.content.ContentResolver, long, java.lang.String[])" static="true" return="track" param0="track" param1="track" param2="track" permission="android.permission.READ_CALENDAR"/>
			</class>
			<class name="Telephony$Sms$Draft">
				<method signature="android.net.Uri addMessage(android.content.ContentResolver, java.lang.String, java.lang.String, java.lang.String, java.lang.Long)" static="true" return="track" param0="track" param1="track" param2="track" param3="track" param4="track" permission="android.permission.READ_SMS,android.permission.SEND_SMS,android.permission.WRITE_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="ContactsContract$Directory">
				<method signature="void notifyDirectoryChange(android.content.ContentResolver)" static="true" return="" param0="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="Telephony$Mms">
				<method signature="android.database.Cursor query(android.content.ContentResolver, java.lang.String[])" static="true" return="track" param0="track" param1="track" permission="android.permission.READ_SMS"/>
				<method signature="android.database.Cursor query(android.content.ContentResolver, java.lang.String[], java.lang.String, java.lang.String)" static="true" return="track" param0="track" param1="track" param2="track" param3="track" permission="android.permission.READ_SMS"/>
			</class>
			<class name="Telephony$Sms$Inbox">
				<method signature="android.net.Uri addMessage(android.content.ContentResolver, java.lang.String, java.lang.String, java.lang.String, java.lang.Long, boolean)" static="true" return="track" param0="track" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.READ_SMS,android.permission.SEND_SMS,android.permission.WRITE_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="Contacts$People">
				<method signature="android.net.Uri addToGroup(android.content.ContentResolver, long, long)" static="true" return="track" param0="track" param1="track" param2="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="android.net.Uri addToGroup(android.content.ContentResolver, long, java.lang.String)" static="true" return="track" param0="track" param1="track" param2="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="android.net.Uri addToMyContactsGroup(android.content.ContentResolver, long)" static="true" return="track" param0="track" param1="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="android.net.Uri createPersonInMyContactsGroup(android.content.ContentResolver, android.content.ContentValues)" static="true" return="track" param0="track" param1="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="void markAsContacted(android.content.ContentResolver, long)" static="true" return="" param0="track" param1="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="android.database.Cursor queryGroups(android.content.ContentResolver, long)" static="true" return="track" param0="track" param1="track" permission="android.permission.READ_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="long tryGetMyContactsGroupId(android.content.ContentResolver)" static="true" return="" param0="track" permission="android.permission.READ_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="Settings$System">
				<method signature="android.net.Uri getUriFor(java.lang.String)" static="true" return="track" param0="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="boolean putConfiguration(android.content.ContentResolver, android.content.res.Configuration)" static="true" return="" param0="track" param1="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="boolean putFloat(android.content.ContentResolver, java.lang.String, float)" static="true" return="" param0="track" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="boolean putInt(android.content.ContentResolver, java.lang.String, int)" static="true" return="" param0="track" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="boolean putLong(android.content.ContentResolver, java.lang.String, long)" static="true" return="" param0="track" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="boolean putString(android.content.ContentResolver, java.lang.String, java.lang.String)" static="true" return="" param0="track" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void setShowGTalkServiceStatus(android.content.ContentResolver, boolean)" static="true" return="" param0="track" param1="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="ContactsContract$Data">
				<method signature="android.net.Uri getContactLookupUri(android.content.ContentResolver, android.net.Uri)" static="true" return="track" param0="track" param1="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="CallLog$Calls">
				<method signature="android.net.Uri addCall(com.android.internal.telephony.CallerInfo, android.content.Context, java.lang.String, int, int, long, int)" static="true" return="track" param0="track" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="com.android.voicemail.permission.ADD_VOICEMAIL,android.permission.WRITE_CALL_LOG,android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="java.lang.String getLastOutgoingCall(android.content.Context)" static="true" return="track" param0="track" permission="com.android.voicemail.permission.ADD_VOICEMAIL,android.permission.READ_CALL_LOG"/>
			</class>
			<class name="CalendarContract$CalendarAlerts">
				<method signature="boolean alarmExists(android.content.ContentResolver, long, long, long)" static="true" return="" param0="track" param1="track" param2="track" param3="track" permission="android.permission.READ_CALENDAR"/>
				<method signature="long findNextAlarmTime(android.content.ContentResolver, long)" static="true" return="" param0="track" param1="track" permission="android.permission.READ_CALENDAR"/>
				<method signature="android.net.Uri insert(android.content.ContentResolver, long, long, long, long, int)" static="true" return="track" param0="track" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.WRITE_CALENDAR,android.permission.READ_CALENDAR"/>
				<method signature="void rescheduleMissedAlarms(android.content.ContentResolver, android.content.Context, android.app.AlarmManager)" static="true" return="" param0="track" param1="track" param2="track" permission="android.permission.READ_CALENDAR"/>
			</class>
			<class name="VoicemailContract$Voicemails">
				<method signature="android.net.Uri buildSourceUri(java.lang.String)" static="true" return="track" param0="track" permission="com.android.voicemail.permission.ADD_VOICEMAIL"/>
			</class>
			<class name="VoicemailContract$Status">
				<method signature="android.net.Uri buildSourceUri(java.lang.String)" static="true" return="track" param0="track" permission="com.android.voicemail.permission.ADD_VOICEMAIL"/>
			</class>
			<class name="CalendarContract$CalendarEntity$EntityIteratorImpl">
				<method signature="android.content.Entity next()" static="false" return="track" permission="android.permission.READ_CALENDAR"/>
				<method signature="java.lang.Object next()" static="false" return="track" permission="android.permission.READ_CALENDAR"/>
			</class>
			<class name="Settings$Bookmarks">
				<method signature="android.net.Uri add(android.content.ContentResolver, android.content.Intent, java.lang.String, java.lang.String, char, int)" static="true" return="track" param0="track" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="Telephony$Threads">
				<method signature="long getOrCreateThreadId(android.content.Context, java.lang.String)" static="true" return="" param0="track" param1="track" permission="android.permission.READ_SMS"/>
				<method signature="long getOrCreateThreadId(android.content.Context, java.util.Set)" static="true" return="" param0="track" param1="track" permission="android.permission.READ_SMS"/>
			</class>
			<class name="BrowserContract$SyncState">
				<method signature="byte[] get(android.content.ContentProviderClient, android.accounts.Account)" static="true" return="track" param0="track" param1="track" permission="com.android.browser.permission.READ_HISTORY_BOOKMARKS"/>
				<method signature="android.util.Pair getWithUri(android.content.ContentProviderClient, android.accounts.Account)" static="true" return="track" param0="track" param1="track" permission="com.android.browser.permission.READ_HISTORY_BOOKMARKS"/>
				<method signature="android.content.ContentProviderOperation newSetOperation(android.accounts.Account, byte[])" static="true" return="track" param0="track" param1="track" permission="com.android.browser.permission.WRITE_HISTORY_BOOKMARKS,android.permission.GET_ACCOUNTS,com.android.browser.permission.READ_HISTORY_BOOKMARKS"/>
				<method signature="void set(android.content.ContentProviderClient, android.accounts.Account, byte[])" static="true" return="" param0="track" param1="track" param2="track" permission="com.android.browser.permission.WRITE_HISTORY_BOOKMARKS,android.permission.GET_ACCOUNTS,com.android.browser.permission.READ_HISTORY_BOOKMARKS"/>
			</class>
			<class name="Telephony$Sms">
				<method signature="android.database.Cursor query(android.content.ContentResolver, java.lang.String[])" static="true" return="track" param0="track" param1="track" permission="android.permission.READ_SMS,android.permission.RECEIVE_SMS"/>
				<method signature="android.database.Cursor query(android.content.ContentResolver, java.lang.String[], java.lang.String, java.lang.String)" static="true" return="track" param0="track" param1="track" param2="track" param3="track" permission="android.permission.READ_SMS,android.permission.RECEIVE_SMS"/>
			</class>
			<class name="BrowserContract$Settings">
				<method signature="boolean isSyncEnabled(android.content.Context)" static="true" return="" param0="track" permission="com.android.browser.permission.READ_HISTORY_BOOKMARKS"/>
				<method signature="void setSyncEnabled(android.content.Context, boolean)" static="true" return="" param0="track" param1="track" permission="com.android.browser.permission.WRITE_HISTORY_BOOKMARKS,android.permission.GET_ACCOUNTS,com.android.browser.permission.READ_HISTORY_BOOKMARKS"/>
			</class>
			<class name="CalendarContract$Attendees">
				<method signature="android.database.Cursor query(android.content.ContentResolver, long, java.lang.String[])" static="true" return="track" param0="track" param1="track" param2="track" permission="android.permission.READ_CALENDAR"/>
			</class>
			<class name="ContactsContract$Groups$EntityIteratorImpl">
				<method signature="android.content.Entity next()" static="false" return="track" permission="android.permission.READ_CALENDAR"/>
				<method signature="java.lang.Object next()" static="false" return="track" permission="android.permission.READ_CALENDAR"/>
			</class>
			<class name="CalendarContract$EventsEntity$EntityIteratorImpl">
				<method signature="android.content.Entity next()" static="false" return="track" permission="android.permission.READ_CALENDAR"/>
				<method signature="java.lang.Object next()" static="false" return="track" permission="android.permission.READ_CALENDAR"/>
			</class>
			<class name="ContactsContract$Contacts">
				<method signature="android.net.Uri getLookupUri(long, java.lang.String)" static="true" return="track" param0="track" param1="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="android.net.Uri getLookupUri(android.content.ContentResolver, android.net.Uri)" static="true" return="track" param0="track" param1="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="void markAsContacted(android.content.ContentResolver, long)" static="true" return="" param0="track" param1="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
		</package>
		<package name="android.speech.tts">
			<class name="TextToSpeech">
				<method signature="void &lt;init&gt;(android.content.Context, android.speech.tts.TextToSpeech$OnInitListener)" static="false" param1="" param2="listener" permission=""/>
				<method signature="void &lt;init&gt;(android.content.Context, android.speech.tts.TextToSpeech$OnInitListener, java.lang.String)" static="false" param1="" param2="listener" param3="" permission=""/>
				<method signature="void &lt;init&gt;(android.content.Context, android.speech.tts.TextToSpeech$OnInitListener, java.lang.String, java.lang.String, boolean)" static="false" param1="" param2="listener" param3="" param4="" param5="" permission=""/>
				<method signature="int setOnUtteranceCompletedListener(android.speech.tts.TextToSpeech$OnUtteranceCompletedListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="TtsEngines">
				<method signature="void updateLocalePrefForEngine(java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="ITextToSpeechService">
				<method signature="void setCallback(android.os.IBinder, android.speech.tts.ITextToSpeechCallback)" static="false" param1="" param2="listener" permission=""/>
			</class>
		</package>
		<package name="android.view">
			<class name="SurfaceHolder">
				<method signature="void addCallback(android.view.SurfaceHolder$Callback)" static="false" param1="listener" permission=""/>
			</class>
			<class name="Window$Callback">
				<method signature="android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)" static="false" param1="listener" permission=""/>
			</class>
			<class name="ViewParent">
				<method signature="android.view.ActionMode startActionModeForChild(android.view.View, android.view.ActionMode$Callback)" static="false" param1="" param2="listener" permission=""/>
			</class>
			<class name="IApplicationToken">
				<method signature="boolean keyDispatchingTimedOut()" static="false" return="" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void windowsVisible()" static="false" return="" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
			</class>
			<class name="MenuItem">
				<method signature="android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)" static="false" param1="listener" permission=""/>
				<method signature="android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="VolumePanel">
				<method signature="void onMuteChanged(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.VIBRATE"/>
				<method signature="void onRemoteVolumeChanged(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.VIBRATE"/>
				<method signature="void onRemoteVolumeUpdateIfShown()" static="false" return="" permission="android.permission.VIBRATE"/>
				<method signature="void onShowVolumeChanged(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.VIBRATE"/>
				<method signature="void onVibrate()" static="false" return="" permission="android.permission.VIBRATE,android.permission.WAKE_LOCK"/>
				<method signature="void onVolumeChanged(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.VIBRATE"/>
			</class>
			<class name="IWindowManager$Stub">
				<method signature="void clearForcedDisplaySize()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.WAKE_LOCK"/>
				<method signature="void disableKeyguard(android.os.IBinder, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.DISABLE_KEYGUARD"/>
				<method signature="void dismissKeyguard()" static="false" return="" permission="android.permission.DISABLE_KEYGUARD"/>
				<method signature="void exitKeyguardSecurely(android.view.IOnKeyguardExitResult)" static="false" return="" param1="track" permission="android.permission.DISABLE_KEYGUARD,android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void freezeRotation(int)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.DISABLE_KEYGUARD,android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void prepareAppTransition(int, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void reenableKeyguard(android.os.IBinder)" static="false" return="" param1="track" permission="android.permission.DISABLE_KEYGUARD"/>
				<method signature="void setForcedDisplaySize(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.WAKE_LOCK"/>
				<method signature="void setNewConfiguration(android.content.res.Configuration)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void thawRotation()" static="false" return="" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="Window">
				<method signature="void setCallback(android.view.Window$Callback)" static="false" param1="listener" permission=""/>
				<method signature="void takeInputQueue(android.view.InputQueue$Callback)" static="false" param1="listener" permission=""/>
			</class>
			<class name="IApplicationToken$Stub">
				<method signature="boolean keyDispatchingTimedOut()" static="false" return="" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
				<method signature="void windowsVisible()" static="false" return="" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
			</class>
			<class name="ViewRootImpl">
				<method signature="android.view.ActionMode startActionModeForChild(android.view.View, android.view.ActionMode$Callback)" static="false" param1="" param2="listener" permission=""/>
			</class>
			<class name="KeyEvent">
				<method signature="boolean dispatch(android.view.KeyEvent$Callback)" static="false" param1="listener" permission=""/>
				<method signature="boolean dispatch(android.view.KeyEvent$Callback, android.view.KeyEvent$DispatcherState, java.lang.Object)" static="false" param1="listener" param2="" param3="" permission=""/>
			</class>
			<class name="ViewGroup">
				<method signature="void setLayoutAnimationListener(android.view.animation.Animation$AnimationListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)" static="false" param1="listener" permission=""/>
				<method signature="android.view.ActionMode startActionModeForChild(android.view.View, android.view.ActionMode$Callback)" static="false" param1="" param2="listener" permission=""/>
			</class>
			<class name="WindowManagerPolicy">
				<method signature="int checkAddPermission(android.view.WindowManager$LayoutParams)" static="false" return="" param1="track" permission="android.permission.SYSTEM_ALERT_WINDOW"/>
				<method signature="android.view.KeyEvent dispatchUnhandledKey(android.view.WindowManagerPolicy$WindowState, android.view.KeyEvent, int)" static="false" return="track" param1="track" param2="track" param3="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.CALL_PHONE,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void enableKeyguard(boolean)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void exitKeyguardSecurely(android.view.WindowManagerPolicy$OnKeyguardExitResult)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void init(android.content.Context, android.view.IWindowManager, android.view.WindowManagerPolicy$WindowManagerFuncs, android.os.LocalPowerManager)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.USE_CREDENTIALS,android.permission.WRITE_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.BROADCAST_STICKY,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="long interceptKeyBeforeDispatching(android.view.WindowManagerPolicy$WindowState, android.view.KeyEvent, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="int interceptKeyBeforeQueueing(android.view.KeyEvent, int, boolean)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.CALL_PHONE,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="int interceptMotionBeforeQueueingWhenScreenOff(int)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void notifyLidSwitchChanged(long, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean performHapticFeedbackLw(android.view.WindowManagerPolicy$WindowState, int, boolean)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.VIBRATE"/>
				<method signature="void screenTurnedOff(int)" static="false" return="" param1="track" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void screenTurningOn(android.view.WindowManagerPolicy$ScreenOnListener)" static="false" return="" param1="track, listener, trackListener" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void setSafeMode(boolean)" static="false" return="" param1="track" permission="android.permission.VIBRATE"/>
				<method signature="void setUserRotationMode(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void systemReady()" static="false" return="" permission="android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="IWindowManager">
				<method signature="void clearForcedDisplaySize()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.WAKE_LOCK"/>
				<method signature="void disableKeyguard(android.os.IBinder, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.DISABLE_KEYGUARD"/>
				<method signature="void dismissKeyguard()" static="false" return="" permission="android.permission.DISABLE_KEYGUARD"/>
				<method signature="void exitKeyguardSecurely(android.view.IOnKeyguardExitResult)" static="false" return="" param1="track" permission="android.permission.DISABLE_KEYGUARD,android.permission.USE_CREDENTIALS,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void freezeRotation(int)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void overridePendingAppTransition(java.lang.String, int, int, android.os.IRemoteCallback)" static="false" param1="" param2="" param3="" param4="listener" permission=""/>
				<method signature="void overridePendingAppTransitionThumb(android.graphics.Bitmap, int, int, android.os.IRemoteCallback, boolean)" static="false" param1="" param2="" param3="" param4="listener" param5="" permission=""/>
				<method signature="void prepareAppTransition(int, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void reenableKeyguard(android.os.IBinder)" static="false" return="" param1="track" permission="android.permission.DISABLE_KEYGUARD"/>
				<method signature="void setForcedDisplaySize(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.WAKE_LOCK"/>
				<method signature="void setNewConfiguration(android.content.res.Configuration)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void thawRotation()" static="false" return="" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void waitForWindowDrawn(android.os.IBinder, android.os.IRemoteCallback)" static="false" param1="" param2="listener" permission=""/>
				<method signature="int watchRotation(android.view.IRotationWatcher)" static="false" param1="listener" permission=""/>
			</class>
			<class name="Choreographer">
				<method signature="void postFrameCallback(android.view.Choreographer$FrameCallback)" static="false" param1="listener" permission=""/>
				<method signature="void postFrameCallbackDelayed(android.view.Choreographer$FrameCallback, long)" static="false" param1="listener" param2="" permission=""/>
			</class>
			<class name="ViewStub">
				<method signature="void setOnInflateListener(android.view.ViewStub$OnInflateListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="ViewPropertyAnimator">
				<method signature="android.view.ViewPropertyAnimator setListener(android.animation.Animator$AnimatorListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="ViewTreeObserver">
				<method signature="void addOnComputeInternalInsetsListener(android.view.ViewTreeObserver$OnComputeInternalInsetsListener)" static="false" param1="listener" permission=""/>
				<method signature="void addOnDrawListener(android.view.ViewTreeObserver$OnDrawListener)" static="false" param1="listener" permission=""/>
				<method signature="void addOnGlobalFocusChangeListener(android.view.ViewTreeObserver$OnGlobalFocusChangeListener)" static="false" param1="listener" permission=""/>
				<method signature="void addOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)" static="false" param1="listener" permission=""/>
				<method signature="void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)" static="false" param1="listener" permission=""/>
				<method signature="void addOnScrollChangedListener(android.view.ViewTreeObserver$OnScrollChangedListener)" static="false" param1="listener" permission=""/>
				<method signature="void addOnTouchModeChangeListener(android.view.ViewTreeObserver$OnTouchModeChangeListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="IWindowSession">
				<method signature="int add(android.view.IWindow, int, android.view.WindowManager$LayoutParams, int, android.graphics.Rect, android.view.InputChannel)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.SYSTEM_ALERT_WINDOW"/>
				<method signature="int addWithoutInputChannel(android.view.IWindow, int, android.view.WindowManager$LayoutParams, int, android.graphics.Rect)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.SYSTEM_ALERT_WINDOW"/>
				<method signature="boolean performDrag(android.view.IWindow, android.os.IBinder, float, float, float, float, android.content.ClipData)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" param7="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="android.os.IBinder prepareDrag(android.view.IWindow, int, int, int, android.view.Surface)" static="false" return="track" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="IWindowSession$Stub">
				<method signature="int add(android.view.IWindow, int, android.view.WindowManager$LayoutParams, int, android.graphics.Rect, android.view.InputChannel)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.SYSTEM_ALERT_WINDOW"/>
				<method signature="int addWithoutInputChannel(android.view.IWindow, int, android.view.WindowManager$LayoutParams, int, android.graphics.Rect)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.SYSTEM_ALERT_WINDOW"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.SYSTEM_ALERT_WINDOW,android.permission.WAKE_LOCK"/>
				<method signature="boolean performDrag(android.view.IWindow, android.os.IBinder, float, float, float, float, android.content.ClipData)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" param7="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="android.os.IBinder prepareDrag(android.view.IWindow, int, int, int, android.view.Surface)" static="false" return="track" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="GestureDetector">
				<method signature="void &lt;init&gt;(android.content.Context, android.view.GestureDetector$OnGestureListener)" static="false" param1="" param2="listener" permission=""/>
				<method signature="void &lt;init&gt;(android.content.Context, android.view.GestureDetector$OnGestureListener, android.os.Handler)" static="false" param1="" param2="listener" param3="" permission=""/>
				<method signature="void &lt;init&gt;(android.content.Context, android.view.GestureDetector$OnGestureListener, android.os.Handler, boolean)" static="false" param1="" param2="listener" param3="" param4="" permission=""/>
				<method signature="void &lt;init&gt;(android.view.GestureDetector$OnGestureListener)" static="false" param1="listener" permission=""/>
				<method signature="void &lt;init&gt;(android.view.GestureDetector$OnGestureListener, android.os.Handler)" static="false" param1="listener" param2="" permission=""/>
				<method signature="void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="WindowManagerPolicy$WindowManagerFuncs">
				<method signature="void rebootSafeMode()" static="false" return="" permission="android.permission.MOUNT_UNMOUNT_FILESYSTEMS,android.permission.RECEIVE_BOOT_COMPLETED,android.permission.VIBRATE,android.permission.WAKE_LOCK"/>
				<method signature="void reevaluateStatusBarVisibility()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void shutdown()" static="false" return="" permission="android.permission.MOUNT_UNMOUNT_FILESYSTEMS,android.permission.RECEIVE_BOOT_COMPLETED,android.permission.VIBRATE,android.permission.WAKE_LOCK"/>
			</class>
			<class name="ScaleGestureDetector">
				<method signature="void &lt;init&gt;(android.content.Context, android.view.ScaleGestureDetector$OnScaleGestureListener)" static="false" param1="" param2="listener" permission=""/>
			</class>
			<class name="FallbackEventHandler">
				<method signature="boolean dispatchKeyEvent(android.view.KeyEvent)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="TextureView">
				<method signature="void setSurfaceTextureListener(android.view.TextureView$SurfaceTextureListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="View">
				<method signature="void addOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)" static="false" param1="listener" permission=""/>
				<method signature="void addOnLayoutChangeListener(android.view.View$OnLayoutChangeListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnClickListener(android.view.View$OnClickListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnCreateContextMenuListener(android.view.View$OnCreateContextMenuListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnDragListener(android.view.View$OnDragListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnFocusChangeListener(android.view.View$OnFocusChangeListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnGenericMotionListener(android.view.View$OnGenericMotionListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnHoverListener(android.view.View$OnHoverListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnKeyListener(android.view.View$OnKeyListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnLongClickListener(android.view.View$OnLongClickListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnSystemUiVisibilityChangeListener(android.view.View$OnSystemUiVisibilityChangeListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnTouchListener(android.view.View$OnTouchListener)" static="false" param1="listener" permission=""/>
				<method signature="android.view.ActionMode startActionMode(android.view.ActionMode$Callback)" static="false" param1="listener" permission=""/>
				<method signature="boolean startDrag(android.content.ClipData, android.view.View$DragShadowBuilder, java.lang.Object, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="ActionProvider">
				<method signature="void setSubUiVisibilityListener(android.view.ActionProvider$SubUiVisibilityListener)" static="false" param1="listener" permission=""/>
				<method signature="void setVisibilityListener(android.view.ActionProvider$VisibilityListener)" static="false" param1="listener" permission=""/>
			</class>
		</package>
		<package name="android.support.v4.content">
			<class name="Loader">
				<method signature="void registerListener(int, android.support.v4.content.Loader$OnLoadCompleteListener)" static="false" param1="" param2="listener" permission=""/>
				<method signature="void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener)" static="false" param1="listener" permission=""/>
			</class>
		</package>
		<package name="android.test.mock">
			<class name="MockContentResolver">
				<method signature="void addPeriodicSync(android.accounts.Account, java.lang.String, android.os.Bundle, long)" static="true" return="" param0="track" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SYNC_SETTINGS"/>
				<method signature="android.content.SyncInfo getCurrentSync()" static="true" return="track" permission="android.permission.READ_SYNC_STATS"/>
				<method signature="java.util.List getCurrentSyncs()" static="true" return="track" permission="android.permission.READ_SYNC_STATS"/>
				<method signature="int getIsSyncable(android.accounts.Account, java.lang.String)" static="true" return="" param0="track" param1="track" permission="android.permission.READ_SYNC_SETTINGS"/>
				<method signature="boolean getMasterSyncAutomatically()" static="true" return="" permission="android.permission.READ_SYNC_SETTINGS"/>
				<method signature="java.util.List getPeriodicSyncs(android.accounts.Account, java.lang.String)" static="true" return="track" param0="track" param1="track" permission="android.permission.READ_SYNC_SETTINGS"/>
				<method signature="boolean getSyncAutomatically(android.accounts.Account, java.lang.String)" static="true" return="" param0="track" param1="track" permission="android.permission.READ_SYNC_SETTINGS"/>
				<method signature="android.content.SyncStatusInfo getSyncStatus(android.accounts.Account, java.lang.String)" static="true" return="track" param0="track" param1="track" permission="android.permission.READ_SYNC_STATS"/>
				<method signature="boolean isSyncActive(android.accounts.Account, java.lang.String)" static="true" return="" param0="track" param1="track" permission="android.permission.READ_SYNC_STATS"/>
				<method signature="boolean isSyncPending(android.accounts.Account, java.lang.String)" static="true" return="" param0="track" param1="track" permission="android.permission.READ_SYNC_STATS"/>
				<method signature="void removePeriodicSync(android.accounts.Account, java.lang.String, android.os.Bundle)" static="true" return="" param0="track" param1="track" param2="track" permission="android.permission.WRITE_SYNC_SETTINGS"/>
				<method signature="void setIsSyncable(android.accounts.Account, java.lang.String, int)" static="true" return="" param0="track" param1="track" param2="track" permission="android.permission.WRITE_SYNC_SETTINGS"/>
				<method signature="void setMasterSyncAutomatically(boolean)" static="true" return="" param0="track" permission="android.permission.WRITE_SYNC_SETTINGS"/>
				<method signature="void setSyncAutomatically(android.accounts.Account, java.lang.String, boolean)" static="true" return="" param0="track" param1="track" param2="track" permission="android.permission.WRITE_SYNC_SETTINGS"/>
			</class>
		</package>
		<package name="com.android.internal.util">
			<class name="IState">
				<method signature="void enter()" static="false" return="" permission="android.permission.GET_TASKS,android.permission.ACCESS_WIFI_STATE,android.permission.MODIFY_AUDIO_SETTINGS,android.permission.READ_PHONE_STATE,android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.VIBRATE,android.permission.BROADCAST_STICKY,android.permission.BLUETOOTH_ADMIN,android.permission.CHANGE_NETWORK_STATE,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean processMessage(android.os.Message)" static="false" return="" param1="track" permission="android.permission.GET_TASKS,android.permission.ACCESS_WIFI_STATE,android.permission.MODIFY_AUDIO_SETTINGS,android.permission.READ_PHONE_STATE,android.permission.BLUETOOTH,android.permission.INTERNET,android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.VIBRATE,android.permission.BROADCAST_STICKY,android.permission.BLUETOOTH_ADMIN,android.permission.CHANGE_NETWORK_STATE,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="State">
				<method signature="void enter()" static="false" return="" permission="android.permission.GET_TASKS,android.permission.ACCESS_WIFI_STATE,android.permission.MODIFY_AUDIO_SETTINGS,android.permission.READ_PHONE_STATE,android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.VIBRATE,android.permission.BROADCAST_STICKY,android.permission.BLUETOOTH_ADMIN,android.permission.CHANGE_NETWORK_STATE,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean processMessage(android.os.Message)" static="false" return="" param1="track" permission="android.permission.GET_TASKS,android.permission.ACCESS_WIFI_STATE,android.permission.MODIFY_AUDIO_SETTINGS,android.permission.READ_PHONE_STATE,android.permission.BLUETOOTH,android.permission.INTERNET,android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.VIBRATE,android.permission.BROADCAST_STICKY,android.permission.BLUETOOTH_ADMIN,android.permission.CHANGE_NETWORK_STATE,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="StateMachine$SmHandler$HaltingState">
				<method signature="void enter()" static="false" return="" permission="android.permission.GET_TASKS,android.permission.ACCESS_WIFI_STATE,android.permission.MODIFY_AUDIO_SETTINGS,android.permission.READ_PHONE_STATE,android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.VIBRATE,android.permission.BROADCAST_STICKY,android.permission.BLUETOOTH_ADMIN,android.permission.CHANGE_NETWORK_STATE,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="StateMachine$SmHandler$QuittingState">
				<method signature="void enter()" static="false" return="" permission="android.permission.GET_TASKS,android.permission.ACCESS_WIFI_STATE,android.permission.MODIFY_AUDIO_SETTINGS,android.permission.READ_PHONE_STATE,android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.VIBRATE,android.permission.BROADCAST_STICKY,android.permission.BLUETOOTH_ADMIN,android.permission.CHANGE_NETWORK_STATE,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
		</package>
		<package name="java.beans">
			<class name="Customizer">
				<method signature="void addPropertyChangeListener(java.beans.PropertyChangeListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="XMLDecoder">
				<method signature="void &lt;init&gt;(java.io.InputStream, java.lang.Object, java.beans.ExceptionListener)" static="false" param1="" param2="" param3="listener" permission=""/>
				<method signature="void &lt;init&gt;(java.io.InputStream, java.lang.Object, java.beans.ExceptionListener, java.lang.ClassLoader)" static="false" param1="" param2="" param3="listener" param4="" permission=""/>
				<method signature="void setExceptionListener(java.beans.ExceptionListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="VetoableChangeSupport">
				<method signature="void addVetoableChangeListener(java.beans.VetoableChangeListener)" static="false" param1="listener" permission=""/>
				<method signature="void addVetoableChangeListener(java.lang.String, java.beans.VetoableChangeListener)" static="false" param1="" param2="listener" permission=""/>
			</class>
			<class name="PropertyChangeListenerProxy">
				<method signature="void &lt;init&gt;(java.lang.String, java.beans.PropertyChangeListener)" static="false" param1="" param2="listener" permission=""/>
			</class>
			<class name="Encoder">
				<method signature="void setExceptionListener(java.beans.ExceptionListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="PropertyChangeSupport">
				<method signature="void addPropertyChangeListener(java.beans.PropertyChangeListener)" static="false" param1="listener" permission=""/>
				<method signature="void addPropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)" static="false" param1="" param2="listener" permission=""/>
			</class>
			<class name="PropertyEditorSupport">
				<method signature="void addPropertyChangeListener(java.beans.PropertyChangeListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="PropertyEditor">
				<method signature="void addPropertyChangeListener(java.beans.PropertyChangeListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="VetoableChangeListenerProxy">
				<method signature="void &lt;init&gt;(java.lang.String, java.beans.VetoableChangeListener)" static="false" param1="" param2="listener" permission=""/>
			</class>
		</package>
		<package name="android.support.v4.view.accessibility">
			<class name="AccessibilityNodeProviderCompat">
				<method signature="boolean performAction(int, int, android.os.Bundle)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.READ_SOCIAL_STREAM,android.permission.VIBRATE,android.permission.READ_CONTACTS,android.permission.READ_USER_DICTIONARY,android.permission.WRITE_CONTACTS"/>
			</class>
		</package>
		<package name="com.android.internal.preference">
			<class name="YesNoPreference">
				<method signature="void onDialogClosed(boolean)" static="false" return="" param1="track" permission="com.android.browser.permission.WRITE_HISTORY_BOOKMARKS,android.permission.GET_ACCOUNTS,com.android.browser.permission.READ_HISTORY_BOOKMARKS"/>
			</class>
		</package>
		<package name="com.android.internal.os.storage">
			<class name="ExternalStorageFormatter">
				<method signature="void onCancel(android.content.DialogInterface)" static="false" return="" param1="track" permission="android.permission.MOUNT_UNMOUNT_FILESYSTEMS"/>
				<method signature="void onCreate()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void onDestroy()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="int onStartCommand(android.content.Intent, int, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.MOUNT_UNMOUNT_FILESYSTEMS,android.permission.MOUNT_FORMAT_FILESYSTEMS"/>
				<method signature="void updateProgressState()" static="false" return="" permission="android.permission.MOUNT_UNMOUNT_FILESYSTEMS,android.permission.MOUNT_FORMAT_FILESYSTEMS"/>
			</class>
		</package>
		<package name="com.android.uiautomator.core">
			<class name="UiDevice">
				<method signature="void freezeRotation()" static="false" return="" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void unfreezeRotation()" static="false" return="" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="UiAutomatorBridge">
				<method signature="void disconnect()" static="false" return="" permission="android.permission.WRITE_SETTINGS"/>
			</class>
		</package>
		<package name="com.android.emailcommon.service">
			<class name="IPolicyService">
				<method signature="void setAccountPolicy(long, com.android.emailcommon.provider.Policy, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.VIBRATE"/>
			</class>
			<class name="IPolicyService$Stub">
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.VIBRATE"/>
				<method signature="void setAccountPolicy(long, com.android.emailcommon.provider.Policy, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.VIBRATE"/>
			</class>
			<class name="IAccountService$Stub">
				<method signature="java.lang.String getDeviceId()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="void notifyLoginFailed(long)" static="false" return="" param1="track" permission="android.permission.VIBRATE"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.READ_PHONE_STATE,android.permission.READ_CALENDAR,android.permission.MANAGE_ACCOUNTS,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK"/>
				<method signature="void reconcileAccounts(java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_PHONE_STATE,android.permission.READ_CALENDAR,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK"/>
			</class>
			<class name="IAccountService">
				<method signature="java.lang.String getDeviceId()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="void notifyLoginFailed(long)" static="false" return="" param1="track" permission="android.permission.VIBRATE"/>
				<method signature="void reconcileAccounts(java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_PHONE_STATE,android.permission.READ_CALENDAR,android.permission.MANAGE_ACCOUNTS,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK"/>
			</class>
			<class name="IEmailService">
				<method signature="android.os.Bundle autoDiscover(java.lang.String, java.lang.String)" static="false" return="track" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void deleteAccountPIMData(long)" static="false" return="" param1="track" permission="android.permission.READ_CALENDAR,android.permission.WAKE_LOCK"/>
				<method signature="void hostChanged(long)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void loadAttachment(long, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.VIBRATE,android.permission.WAKE_LOCK"/>
				<method signature="int searchMessages(long, com.android.emailcommon.service.SearchParams, long)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.READ_CALENDAR,android.permission.READ_SYNC_SETTINGS,android.permission.VIBRATE,android.permission.WAKE_LOCK"/>
				<method signature="void sendMeetingResponse(long, int)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.VIBRATE,android.permission.WAKE_LOCK"/>
				<method signature="void startSync(long, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.VIBRATE,android.permission.WAKE_LOCK"/>
				<method signature="void stopSync(long)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void updateFolderList(long)" static="false" return="" param1="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.VIBRATE,android.permission.WAKE_LOCK"/>
				<method signature="android.os.Bundle validate(com.android.emailcommon.provider.HostAuth)" static="false" return="track" param1="track" permission="android.permission.READ_CALENDAR"/>
			</class>
			<class name="IEmailService$Stub">
				<method signature="android.os.Bundle autoDiscover(java.lang.String, java.lang.String)" static="false" return="track" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void deleteAccountPIMData(long)" static="false" return="" param1="track" permission="android.permission.READ_CALENDAR,android.permission.WAKE_LOCK"/>
				<method signature="void hostChanged(long)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void loadAttachment(long, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.VIBRATE,android.permission.WAKE_LOCK"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.READ_CALENDAR,android.permission.READ_SYNC_SETTINGS,android.permission.VIBRATE,android.permission.WAKE_LOCK"/>
				<method signature="int searchMessages(long, com.android.emailcommon.service.SearchParams, long)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.READ_CALENDAR,android.permission.READ_SYNC_SETTINGS,android.permission.VIBRATE,android.permission.WAKE_LOCK"/>
				<method signature="void sendMeetingResponse(long, int)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.VIBRATE,android.permission.WAKE_LOCK"/>
				<method signature="void startSync(long, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.VIBRATE,android.permission.WAKE_LOCK"/>
				<method signature="void stopSync(long)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void updateFolderList(long)" static="false" return="" param1="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.VIBRATE,android.permission.WAKE_LOCK"/>
				<method signature="android.os.Bundle validate(com.android.emailcommon.provider.HostAuth)" static="false" return="track" param1="track" permission="android.permission.READ_CALENDAR"/>
			</class>
			<class name="ServiceProxy$ProxyTask">
				<method signature="void run()" static="false" return="" permission="android.permission.READ_PHONE_STATE,android.permission.READ_CALENDAR,android.permission.READ_SYNC_SETTINGS,android.permission.MANAGE_ACCOUNTS,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.WAKE_LOCK"/>
			</class>
			<class name="IEmailServiceCallback$Stub">
				<method signature="void loadAttachmentStatus(long, long, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.VIBRATE"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.VIBRATE"/>
				<method signature="void sendMessageStatus(long, java.lang.String, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.VIBRATE"/>
				<method signature="void syncMailboxListStatus(long, int, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.VIBRATE"/>
				<method signature="void syncMailboxStatus(long, int, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.VIBRATE"/>
			</class>
			<class name="EmailServiceProxy">
				<method signature="void &lt;init&gt;(android.content.Context, android.content.Intent, com.android.emailcommon.service.IEmailServiceCallback)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="void &lt;init&gt;(android.content.Context, java.lang.String, com.android.emailcommon.service.IEmailServiceCallback)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="android.os.IBinder asBinder()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="android.os.Bundle autoDiscover(java.lang.String, java.lang.String)" static="false" return="track" param1="track" param2="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="boolean createFolder(long, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="void deleteAccountPIMData(long)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="boolean deleteFolder(long, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="int getApiLevel()" static="false" return="" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="void hostChanged(long)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="boolean isRemote()" static="false" return="" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="void loadAttachment(long, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="void loadMore(long)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="void onConnected(android.os.IBinder)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="boolean renameFolder(long, java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="int searchMessages(long, com.android.emailcommon.service.SearchParams, long)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="void sendMail(long)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="void sendMeetingResponse(long, int)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="void setCallback(com.android.emailcommon.service.IEmailServiceCallback)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="void setLogging(int)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="void startSync(long, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="void stopSync(long)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="void updateFolderList(long)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="android.os.Bundle validate(com.android.emailcommon.provider.HostAuth)" static="false" return="track" param1="track" permission="android.permission.READ_PHONE_STATE"/>
			</class>
			<class name="IEmailServiceCallback">
				<method signature="void loadAttachmentStatus(long, long, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.VIBRATE"/>
				<method signature="void sendMessageStatus(long, java.lang.String, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.VIBRATE"/>
				<method signature="void syncMailboxListStatus(long, int, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.VIBRATE"/>
				<method signature="void syncMailboxStatus(long, int, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.VIBRATE"/>
			</class>
		</package>
		<package name="com.android.internal.content">
			<class name="PackageMonitor">
				<method signature="boolean onHandleForceStop(android.content.Intent, java.lang.String[], int, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void onPackageRemoved(java.lang.String, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void onReceive(android.content.Context, android.content.Intent)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void onSomePackagesChanged()" static="false" return="" permission="android.permission.WRITE_SETTINGS"/>
			</class>
		</package>
		<package name="android.hardware.input">
			<class name="InputManager">
				<method signature="void registerInputDeviceListener(android.hardware.input.InputManager$InputDeviceListener, android.os.Handler)" static="false" param1="listener" param2="" permission=""/>
				<method signature="void setPointerSpeed(android.content.Context, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void unregisterInputDeviceListener(android.hardware.input.InputManager$InputDeviceListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="IInputManager">
				<method signature="void registerInputDevicesChangedListener(android.hardware.input.IInputDevicesChangedListener)" static="false" param1="listener" permission=""/>
			</class>
		</package>
		<package name="android.filterpacks.videosrc">
			<class name="CameraSource">
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="MediaSource">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void pauseVideo(boolean)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void process(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="SurfaceTextureSource">
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="SurfaceTextureTarget">
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
		</package>
		<package name="com.android.internal.widget.multiwaveview">
			<class name="GlowPadView">
				<method signature="boolean onHoverEvent(android.view.MotionEvent)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.USE_CREDENTIALS,android.permission.BLUETOOTH,android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.MANAGE_ACCOUNTS,android.permission.WRITE_SOCIAL_STREAM,android.permission.BROADCAST_STICKY,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean onTouchEvent(android.view.MotionEvent)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.USE_CREDENTIALS,android.permission.BLUETOOTH,android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.MANAGE_ACCOUNTS,android.permission.WRITE_SOCIAL_STREAM,android.permission.BROADCAST_STICKY,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="GlowPadView$OnTriggerListener">
				<method signature="void onGrabbedStateChange(android.view.View, int)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_PHONE_STATE,android.permission.USE_CREDENTIALS,android.permission.BLUETOOTH,android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.MANAGE_ACCOUNTS,android.permission.WRITE_SOCIAL_STREAM,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void onTrigger(android.view.View, int)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_PHONE_STATE,android.permission.USE_CREDENTIALS,android.permission.BLUETOOTH,android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.MANAGE_ACCOUNTS,android.permission.WRITE_SOCIAL_STREAM,android.permission.BROADCAST_STICKY,android.permission.VIBRATE,android.permission.GET_ACCOUNTS,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="MultiWaveView">
				<method signature="boolean onHoverEvent(android.view.MotionEvent)" static="false" return="" param1="track" permission="android.permission.VIBRATE"/>
				<method signature="boolean onTouchEvent(android.view.MotionEvent)" static="false" return="" param1="track" permission="android.permission.VIBRATE"/>
			</class>
		</package>
		<package name="java.util.jar">
			<class name="Pack200$Unpacker">
				<method signature="void addPropertyChangeListener(java.beans.PropertyChangeListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="Pack200$Packer">
				<method signature="void addPropertyChangeListener(java.beans.PropertyChangeListener)" static="false" param1="listener" permission=""/>
			</class>
		</package>
		<package name="android.net.wifi">
			<class name="WifiStateMachine$DriverUnloadingState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="WifiStateMachine$VerifyingLinkState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="WifiStateMachine$DriverLoadedState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="WifiStateTracker">
				<method signature="boolean reconnect()" static="false" return="" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="boolean setRadio(boolean)" static="false" return="" param1="track" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="boolean teardown()" static="false" return="" permission="android.permission.CHANGE_WIFI_STATE"/>
			</class>
			<class name="WifiApConfigStore$DefaultState">
				<method signature="void enter()" static="false" return="" permission="android.permission.GET_TASKS,android.permission.ACCESS_WIFI_STATE,android.permission.MODIFY_AUDIO_SETTINGS,android.permission.READ_PHONE_STATE,android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.VIBRATE,android.permission.BROADCAST_STICKY,android.permission.BLUETOOTH_ADMIN,android.permission.CHANGE_NETWORK_STATE,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="SupplicantStateTracker$DormantState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean processMessage(android.os.Message)" static="false" return="" param1="track" permission="android.permission.GET_TASKS,android.permission.ACCESS_WIFI_STATE,android.permission.MODIFY_AUDIO_SETTINGS,android.permission.READ_PHONE_STATE,android.permission.BLUETOOTH,android.permission.INTERNET,android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.VIBRATE,android.permission.BROADCAST_STICKY,android.permission.BLUETOOTH_ADMIN,android.permission.CHANGE_NETWORK_STATE,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="WifiStateMachine$DisconnectingState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="WifiWatchdogStateMachine$OnlineWatchState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="WifiWatchdogStateMachine$ConnectedState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="WifiWatchdogStateMachine$VerifyingLinkState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="WifiStateMachine$SoftApStoppingState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="SupplicantStateTracker$UninitializedState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean processMessage(android.os.Message)" static="false" return="" param1="track" permission="android.permission.GET_TASKS,android.permission.ACCESS_WIFI_STATE,android.permission.MODIFY_AUDIO_SETTINGS,android.permission.READ_PHONE_STATE,android.permission.BLUETOOTH,android.permission.INTERNET,android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.VIBRATE,android.permission.BROADCAST_STICKY,android.permission.BLUETOOTH_ADMIN,android.permission.CHANGE_NETWORK_STATE,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="WifiStateMachine$TetheringState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="WifiStateMachine$DriverStoppedState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="WifiStateMachine$SoftApStartingState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="WifiStateMachine$ScanModeState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="WifiStateMachine$DriverFailedState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="WifiWatchdogStateMachine$OnlineState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean processMessage(android.os.Message)" static="false" return="" param1="track" permission="android.permission.GET_TASKS,android.permission.ACCESS_WIFI_STATE,android.permission.MODIFY_AUDIO_SETTINGS,android.permission.READ_PHONE_STATE,android.permission.BLUETOOTH,android.permission.INTERNET,android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.VIBRATE,android.permission.BROADCAST_STICKY,android.permission.BLUETOOTH_ADMIN,android.permission.CHANGE_NETWORK_STATE,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="IWifiManager">
				<method signature="void acquireMulticastLock(android.os.IBinder, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.CHANGE_WIFI_MULTICAST_STATE"/>
				<method signature="boolean acquireWifiLock(android.os.IBinder, int, java.lang.String, android.os.WorkSource)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="int addOrUpdateNetwork(android.net.wifi.WifiConfiguration)" static="false" return="" param1="track" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void addToBlacklist(java.lang.String)" static="false" return="" param1="track" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void clearBlacklist()" static="false" return="" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="boolean disableNetwork(int)" static="false" return="" param1="track" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void disconnect()" static="false" return="" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="boolean enableNetwork(int, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="java.lang.String getConfigFile()" static="false" return="track" permission="android.permission.ACCESS_WIFI_STATE"/>
				<method signature="java.util.List getConfiguredNetworks()" static="false" return="track" permission="android.permission.ACCESS_WIFI_STATE"/>
				<method signature="android.net.wifi.WifiInfo getConnectionInfo()" static="false" return="track" permission="android.permission.ACCESS_WIFI_STATE"/>
				<method signature="android.net.DhcpInfo getDhcpInfo()" static="false" return="track" permission="android.permission.ACCESS_WIFI_STATE"/>
				<method signature="int getFrequencyBand()" static="false" return="" permission="android.permission.ACCESS_WIFI_STATE"/>
				<method signature="java.util.List getScanResults()" static="false" return="track" permission="android.permission.ACCESS_WIFI_STATE"/>
				<method signature="android.net.wifi.WifiConfiguration getWifiApConfiguration()" static="false" return="track" permission="android.permission.ACCESS_WIFI_STATE"/>
				<method signature="int getWifiApEnabledState()" static="false" return="" permission="android.permission.ACCESS_WIFI_STATE"/>
				<method signature="int getWifiEnabledState()" static="false" return="" permission="android.permission.ACCESS_WIFI_STATE"/>
				<method signature="android.os.Messenger getWifiServiceMessenger()" static="false" return="track" permission="android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_WIFI_STATE"/>
				<method signature="android.os.Messenger getWifiStateMachineMessenger()" static="false" return="track" permission="android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_WIFI_STATE"/>
				<method signature="void initializeMulticastFiltering()" static="false" return="" permission="android.permission.CHANGE_WIFI_MULTICAST_STATE"/>
				<method signature="boolean isMulticastEnabled()" static="false" return="" permission="android.permission.ACCESS_WIFI_STATE"/>
				<method signature="boolean pingSupplicant()" static="false" return="" permission="android.permission.ACCESS_WIFI_STATE"/>
				<method signature="void reassociate()" static="false" return="" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void reconnect()" static="false" return="" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void releaseMulticastLock()" static="false" return="" permission="android.permission.CHANGE_WIFI_MULTICAST_STATE"/>
				<method signature="boolean releaseWifiLock(android.os.IBinder)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="boolean removeNetwork(int)" static="false" return="" param1="track" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="boolean saveConfiguration()" static="false" return="" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void setCountryCode(java.lang.String, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void setFrequencyBand(int, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void setWifiApConfiguration(android.net.wifi.WifiConfiguration)" static="false" return="" param1="track" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void setWifiApEnabled(android.net.wifi.WifiConfiguration, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="boolean setWifiEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void startScan(boolean)" static="false" return="" param1="track" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void startWifi()" static="false" return="" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void stopWifi()" static="false" return="" permission="android.permission.CHANGE_WIFI_STATE"/>
			</class>
			<class name="WifiStateMachine$ObtainingIpState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="WifiStateMachine$SoftApStartedState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="WifiStateMachine$DriverStoppingState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="WifiStateMachine$ConnectModeState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="WifiStateMachine$DriverLoadingState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="SupplicantStateTracker$ScanState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean processMessage(android.os.Message)" static="false" return="" param1="track" permission="android.permission.GET_TASKS,android.permission.ACCESS_WIFI_STATE,android.permission.MODIFY_AUDIO_SETTINGS,android.permission.READ_PHONE_STATE,android.permission.BLUETOOTH,android.permission.INTERNET,android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.VIBRATE,android.permission.BROADCAST_STICKY,android.permission.BLUETOOTH_ADMIN,android.permission.CHANGE_NETWORK_STATE,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="WifiWatchdogStateMachine$DefaultState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="WifiStateMachine$SupplicantStartingState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="SupplicantStateTracker$HandshakeState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="WifiManager">
				<method signature="int addNetwork(android.net.wifi.WifiConfiguration)" static="false" return="" param1="track" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="boolean addToBlacklist(java.lang.String)" static="false" return="" param1="track" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void cancelWps(android.net.wifi.WifiManager$Channel, android.net.wifi.WifiManager$ActionListener)" static="false" param1="" param2="listener" permission=""/>
				<method signature="boolean clearBlacklist()" static="false" return="" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void connect(android.net.wifi.WifiManager$Channel, int, android.net.wifi.WifiManager$ActionListener)" static="false" param1="" param2="" param3="listener" permission=""/>
				<method signature="void connect(android.net.wifi.WifiManager$Channel, android.net.wifi.WifiConfiguration, android.net.wifi.WifiManager$ActionListener)" static="false" param1="" param2="" param3="listener" permission=""/>
				<method signature="void disable(android.net.wifi.WifiManager$Channel, int, android.net.wifi.WifiManager$ActionListener)" static="false" param1="" param2="" param3="listener" permission=""/>
				<method signature="boolean disableNetwork(int)" static="false" return="" param1="track" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="boolean disconnect()" static="false" return="" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="boolean enableNetwork(int, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void forget(android.net.wifi.WifiManager$Channel, int, android.net.wifi.WifiManager$ActionListener)" static="false" param1="" param2="" param3="listener" permission=""/>
				<method signature="java.lang.String getConfigFile()" static="false" return="track" permission="android.permission.ACCESS_WIFI_STATE"/>
				<method signature="java.util.List getConfiguredNetworks()" static="false" return="track" permission="android.permission.ACCESS_WIFI_STATE"/>
				<method signature="android.net.wifi.WifiInfo getConnectionInfo()" static="false" return="track" permission="android.permission.ACCESS_WIFI_STATE"/>
				<method signature="android.net.DhcpInfo getDhcpInfo()" static="false" return="track" permission="android.permission.ACCESS_WIFI_STATE"/>
				<method signature="int getFrequencyBand()" static="false" return="" permission="android.permission.ACCESS_WIFI_STATE"/>
				<method signature="java.util.List getScanResults()" static="false" return="track" permission="android.permission.ACCESS_WIFI_STATE"/>
				<method signature="android.net.wifi.WifiConfiguration getWifiApConfiguration()" static="false" return="track" permission="android.permission.ACCESS_WIFI_STATE"/>
				<method signature="int getWifiApState()" static="false" return="" permission="android.permission.ACCESS_WIFI_STATE"/>
				<method signature="android.os.Messenger getWifiServiceMessenger()" static="false" return="track" permission="android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_WIFI_STATE"/>
				<method signature="int getWifiState()" static="false" return="" permission="android.permission.ACCESS_WIFI_STATE"/>
				<method signature="android.os.Messenger getWifiStateMachineMessenger()" static="false" return="track" permission="android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_WIFI_STATE"/>
				<method signature="android.net.wifi.WifiManager$Channel initialize(android.content.Context, android.os.Looper, android.net.wifi.WifiManager$ChannelListener)" static="false" return="track" param1="track" param2="track" param3="track, listener, trackListener" permission="android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_WIFI_STATE"/>
				<method signature="boolean initializeMulticastFiltering()" static="false" return="" permission="android.permission.CHANGE_WIFI_MULTICAST_STATE"/>
				<method signature="boolean isMulticastEnabled()" static="false" return="" permission="android.permission.ACCESS_WIFI_STATE"/>
				<method signature="boolean isWifiApEnabled()" static="false" return="" permission="android.permission.ACCESS_WIFI_STATE"/>
				<method signature="boolean isWifiEnabled()" static="false" return="" permission="android.permission.ACCESS_WIFI_STATE"/>
				<method signature="boolean pingSupplicant()" static="false" return="" permission="android.permission.ACCESS_WIFI_STATE"/>
				<method signature="boolean reassociate()" static="false" return="" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="boolean reconnect()" static="false" return="" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="boolean removeNetwork(int)" static="false" return="" param1="track" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void save(android.net.wifi.WifiManager$Channel, android.net.wifi.WifiConfiguration, android.net.wifi.WifiManager$ActionListener)" static="false" param1="" param2="" param3="listener" permission=""/>
				<method signature="boolean saveConfiguration()" static="false" return="" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void setCountryCode(java.lang.String, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void setFrequencyBand(int, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE"/>
				<method signature="boolean setWifiApConfiguration(android.net.wifi.WifiConfiguration)" static="false" return="" param1="track" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="boolean setWifiApEnabled(android.net.wifi.WifiConfiguration, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="boolean setWifiEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="boolean startScan()" static="false" return="" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="boolean startScanActive()" static="false" return="" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="boolean startWifi()" static="false" return="" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void startWps(android.net.wifi.WifiManager$Channel, android.net.wifi.WpsInfo, android.net.wifi.WifiManager$WpsListener)" static="false" param1="" param2="" param3="listener" permission=""/>
				<method signature="boolean stopWifi()" static="false" return="" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="int updateNetwork(android.net.wifi.WifiConfiguration)" static="false" return="" param1="track" permission="android.permission.CHANGE_WIFI_STATE"/>
			</class>
			<class name="SupplicantStateTracker$DisconnectedState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean processMessage(android.os.Message)" static="false" return="" param1="track" permission="android.permission.GET_TASKS,android.permission.ACCESS_WIFI_STATE,android.permission.MODIFY_AUDIO_SETTINGS,android.permission.READ_PHONE_STATE,android.permission.BLUETOOTH,android.permission.INTERNET,android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.VIBRATE,android.permission.BROADCAST_STICKY,android.permission.BLUETOOTH_ADMIN,android.permission.CHANGE_NETWORK_STATE,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="WifiWatchdogStateMachine$WatchdogDisabledState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="SupplicantStateTracker$InactiveState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean processMessage(android.os.Message)" static="false" return="" param1="track" permission="android.permission.GET_TASKS,android.permission.ACCESS_WIFI_STATE,android.permission.MODIFY_AUDIO_SETTINGS,android.permission.READ_PHONE_STATE,android.permission.BLUETOOTH,android.permission.INTERNET,android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.VIBRATE,android.permission.BROADCAST_STICKY,android.permission.BLUETOOTH_ADMIN,android.permission.CHANGE_NETWORK_STATE,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="SupplicantStateTracker$DefaultState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="WifiManager$WifiLock">
				<method signature="void acquire()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void finalize()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void release()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="WifiStateMachine$DriverUnloadedState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="WifiApConfigStore$ActiveState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="WifiStateMachine$DefaultState">
				<method signature="void enter()" static="false" return="" permission="android.permission.GET_TASKS,android.permission.ACCESS_WIFI_STATE,android.permission.MODIFY_AUDIO_SETTINGS,android.permission.READ_PHONE_STATE,android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.VIBRATE,android.permission.BROADCAST_STICKY,android.permission.BLUETOOTH_ADMIN,android.permission.CHANGE_NETWORK_STATE,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="WifiApConfigStore$InactiveState">
				<method signature="void enter()" static="false" return="" permission="android.permission.GET_TASKS,android.permission.ACCESS_WIFI_STATE,android.permission.MODIFY_AUDIO_SETTINGS,android.permission.READ_PHONE_STATE,android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.VIBRATE,android.permission.BROADCAST_STICKY,android.permission.BLUETOOTH_ADMIN,android.permission.CHANGE_NETWORK_STATE,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="WifiStateMachine$DriverStartingState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="WifiStateMachine">
				<method signature="void setCountryCode(java.lang.String, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void setFrequencyBand(int, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="WifiWatchdogStateMachine$NotConnectedState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean processMessage(android.os.Message)" static="false" return="" param1="track" permission="android.permission.GET_TASKS,android.permission.ACCESS_WIFI_STATE,android.permission.MODIFY_AUDIO_SETTINGS,android.permission.READ_PHONE_STATE,android.permission.BLUETOOTH,android.permission.INTERNET,android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.VIBRATE,android.permission.BROADCAST_STICKY,android.permission.BLUETOOTH_ADMIN,android.permission.CHANGE_NETWORK_STATE,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="WifiWatchdogStateMachine$RssiMonitoringState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="WifiStateMachine$InitialState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean processMessage(android.os.Message)" static="false" return="" param1="track" permission="android.permission.GET_TASKS,android.permission.ACCESS_WIFI_STATE,android.permission.MODIFY_AUDIO_SETTINGS,android.permission.READ_PHONE_STATE,android.permission.BLUETOOTH,android.permission.INTERNET,android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.VIBRATE,android.permission.BROADCAST_STICKY,android.permission.BLUETOOTH_ADMIN,android.permission.CHANGE_NETWORK_STATE,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="WifiWatchdogStateMachine$WalledGardenCheckState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="IWifiManager$Stub">
				<method signature="void acquireMulticastLock(android.os.IBinder, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.CHANGE_WIFI_MULTICAST_STATE"/>
				<method signature="boolean acquireWifiLock(android.os.IBinder, int, java.lang.String, android.os.WorkSource)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="int addOrUpdateNetwork(android.net.wifi.WifiConfiguration)" static="false" return="" param1="track" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void addToBlacklist(java.lang.String)" static="false" return="" param1="track" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void clearBlacklist()" static="false" return="" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="boolean disableNetwork(int)" static="false" return="" param1="track" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void disconnect()" static="false" return="" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="boolean enableNetwork(int, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="java.lang.String getConfigFile()" static="false" return="track" permission="android.permission.ACCESS_WIFI_STATE"/>
				<method signature="java.util.List getConfiguredNetworks()" static="false" return="track" permission="android.permission.ACCESS_WIFI_STATE"/>
				<method signature="android.net.wifi.WifiInfo getConnectionInfo()" static="false" return="track" permission="android.permission.ACCESS_WIFI_STATE"/>
				<method signature="android.net.DhcpInfo getDhcpInfo()" static="false" return="track" permission="android.permission.ACCESS_WIFI_STATE"/>
				<method signature="int getFrequencyBand()" static="false" return="" permission="android.permission.ACCESS_WIFI_STATE"/>
				<method signature="java.util.List getScanResults()" static="false" return="track" permission="android.permission.ACCESS_WIFI_STATE"/>
				<method signature="android.net.wifi.WifiConfiguration getWifiApConfiguration()" static="false" return="track" permission="android.permission.ACCESS_WIFI_STATE"/>
				<method signature="int getWifiApEnabledState()" static="false" return="" permission="android.permission.ACCESS_WIFI_STATE"/>
				<method signature="int getWifiEnabledState()" static="false" return="" permission="android.permission.ACCESS_WIFI_STATE"/>
				<method signature="android.os.Messenger getWifiServiceMessenger()" static="false" return="track" permission="android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_WIFI_STATE"/>
				<method signature="android.os.Messenger getWifiStateMachineMessenger()" static="false" return="track" permission="android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_WIFI_STATE"/>
				<method signature="void initializeMulticastFiltering()" static="false" return="" permission="android.permission.CHANGE_WIFI_MULTICAST_STATE"/>
				<method signature="boolean isMulticastEnabled()" static="false" return="" permission="android.permission.ACCESS_WIFI_STATE"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.CHANGE_WIFI_MULTICAST_STATE,android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_WIFI_STATE,android.permission.WAKE_LOCK"/>
				<method signature="boolean pingSupplicant()" static="false" return="" permission="android.permission.ACCESS_WIFI_STATE"/>
				<method signature="void reassociate()" static="false" return="" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void reconnect()" static="false" return="" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void releaseMulticastLock()" static="false" return="" permission="android.permission.CHANGE_WIFI_MULTICAST_STATE"/>
				<method signature="boolean releaseWifiLock(android.os.IBinder)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="boolean removeNetwork(int)" static="false" return="" param1="track" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="boolean saveConfiguration()" static="false" return="" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void setCountryCode(java.lang.String, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void setFrequencyBand(int, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void setWifiApConfiguration(android.net.wifi.WifiConfiguration)" static="false" return="" param1="track" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void setWifiApEnabled(android.net.wifi.WifiConfiguration, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="boolean setWifiEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void startScan(boolean)" static="false" return="" param1="track" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void startWifi()" static="false" return="" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="void stopWifi()" static="false" return="" permission="android.permission.CHANGE_WIFI_STATE"/>
			</class>
			<class name="WifiManager$MulticastLock">
				<method signature="void acquire()" static="false" return="" permission="android.permission.CHANGE_WIFI_MULTICAST_STATE"/>
				<method signature="void finalize()" static="false" return="" permission="android.permission.CHANGE_WIFI_MULTICAST_STATE"/>
				<method signature="void release()" static="false" return="" permission="android.permission.CHANGE_WIFI_MULTICAST_STATE"/>
			</class>
			<class name="WifiStateMachine$TetheredState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="SupplicantStateTracker$CompletedState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="WifiStateMachine$SupplicantStoppingState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="WifiWatchdogStateMachine">
				<method signature="void dump(java.io.PrintWriter)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_WIFI_STATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="android.net.wifi.WifiWatchdogStateMachine makeWifiWatchdogStateMachine(android.content.Context)" static="true" return="track" param0="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_WIFI_STATE,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
		</package>
		<package name="android.view.accessibility">
			<class name="AccessibilityManager">
				<method signature="boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager$AccessibilityStateChangeListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="IAccessibilityManager$Stub">
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void unregisterUiTestAutomationService(android.accessibilityservice.IAccessibilityServiceClient)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="IAccessibilityManager">
				<method signature="void unregisterUiTestAutomationService(android.accessibilityservice.IAccessibilityServiceClient)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="IAccessibilityInteractionConnection">
				<method signature="void findAccessibilityNodeInfoByAccessibilityId(long, int, int, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, int, int, long)" static="false" param1="" param2="" param3="" param4="" param5="listener" param6="" param7="" param8="" permission=""/>
				<method signature="void findAccessibilityNodeInfoByViewId(long, int, int, int, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, int, int, long)" static="false" param1="" param2="" param3="" param4="" param5="" param6="listener" param7="" param8="" param9="" permission=""/>
				<method signature="void findAccessibilityNodeInfosByText(long, java.lang.String, int, int, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, int, int, long)" static="false" param1="" param2="" param3="" param4="" param5="" param6="listener" param7="" param8="" param9="" permission=""/>
				<method signature="void findFocus(long, int, int, int, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, int, int, long)" static="false" param1="" param2="" param3="" param4="" param5="" param6="listener" param7="" param8="" param9="" permission=""/>
				<method signature="void focusSearch(long, int, int, int, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, int, int, long)" static="false" param1="" param2="" param3="" param4="" param5="" param6="listener" param7="" param8="" param9="" permission=""/>
				<method signature="void performAccessibilityAction(long, int, android.os.Bundle, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, int, int, long)" static="false" param1="" param2="" param3="" param4="" param5="listener" param6="" param7="" param8="" permission=""/>
			</class>
		</package>
		<package name="android.filterpacks.videosink">
			<class name="MediaEncoderFilter">
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void process(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO"/>
			</class>
		</package>
		<package name="android.app.backup">
			<class name="IBackupManager">
				<method signature="void clearBackupData(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void restoreAtInstall(java.lang.String, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="java.lang.String selectBackupTransport(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void setAutoRestore(boolean)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void setBackupEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="IBackupManager$Stub">
				<method signature="void clearBackupData(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SETTINGS,android.permission.WAKE_LOCK"/>
				<method signature="void restoreAtInstall(java.lang.String, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="java.lang.String selectBackupTransport(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void setAutoRestore(boolean)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void setBackupEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
		</package>
		<package name="com.android.internal.view">
			<class name="RotationPolicy">
				<method signature="void registerRotationPolicyListener(android.content.Context, com.android.internal.view.RotationPolicy$RotationPolicyListener)" static="true" return="" param0="track" param1="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void setRotationLock(android.content.Context, boolean)" static="true" return="" param0="track" param1="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void setRotationLockForAccessibility(android.content.Context, boolean)" static="true" return="" param0="track" param1="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
		</package>
		<package name="android.support.v4.app">
			<class name="FragmentManager">
				<method signature="void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener)" static="false" param1="listener" permission=""/>
			</class>
		</package>
		<package name="com.android.internal.statusbar">
			<class name="IStatusBarService">
				<method signature="void collapse()" static="false" return="" permission="android.permission.EXPAND_STATUS_BAR"/>
				<method signature="void expand()" static="false" return="" permission="android.permission.EXPAND_STATUS_BAR"/>
			</class>
			<class name="IStatusBarService$Stub">
				<method signature="void collapse()" static="false" return="" permission="android.permission.EXPAND_STATUS_BAR"/>
				<method signature="void expand()" static="false" return="" permission="android.permission.EXPAND_STATUS_BAR"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.EXPAND_STATUS_BAR"/>
			</class>
		</package>
		<package name="javax.net.ssl">
			<class name="SSLSocket">
				<method signature="void addHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener)" static="false" param1="listener" permission=""/>
			</class>
		</package>
		<package name="android.content.pm">
			<class name="RegisteredServicesCache">
				<method signature="void setListener(android.content.pm.RegisteredServicesCacheListener, android.os.Handler)" static="false" param1="listener" param2="" permission=""/>
			</class>
			<class name="IPackageManager$Stub">
				<method signature="void freeStorage(long, android.content.IntentSender)" static="false" return="" param1="track" param2="track" permission="android.permission.CLEAR_APP_CACHE"/>
				<method signature="void freeStorageAndNotify(long, android.content.pm.IPackageDataObserver)" static="false" return="" param1="track" param2="track" permission="android.permission.CLEAR_APP_CACHE"/>
				<method signature="int[] getPackageGids(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.READ_EXTERNAL_STORAGE"/>
				<method signature="void getPackageSizeInfo(java.lang.String, android.content.pm.IPackageStatsObserver)" static="false" return="" param1="track" param2="track" permission="android.permission.GET_PACKAGE_SIZE"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.READ_EXTERNAL_STORAGE,android.permission.WRITE_SETTINGS,android.permission.CLEAR_APP_CACHE,android.permission.GET_PACKAGE_SIZE"/>
				<method signature="boolean setInstallLocation(int)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="IPackageManager">
				<method signature="void freeStorage(long, android.content.IntentSender)" static="false" return="" param1="track" param2="track" permission="android.permission.CLEAR_APP_CACHE"/>
				<method signature="void freeStorageAndNotify(long, android.content.pm.IPackageDataObserver)" static="false" return="" param1="track" param2="track" permission="android.permission.CLEAR_APP_CACHE"/>
				<method signature="int[] getPackageGids(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.READ_EXTERNAL_STORAGE"/>
				<method signature="void getPackageSizeInfo(java.lang.String, android.content.pm.IPackageStatsObserver)" static="false" return="" param1="track" param2="track" permission="android.permission.GET_PACKAGE_SIZE"/>
				<method signature="boolean setInstallLocation(int)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
		</package>
		<package name="com.android.common.widget">
			<class name="CompositeCursorAdapter">
				<method signature="void bindView(android.view.View, int, android.database.Cursor, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="android.view.View getView(int, android.database.Cursor, int, android.view.View, android.view.ViewGroup)" static="false" return="track" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="android.view.View getView(int, android.view.View, android.view.ViewGroup)" static="false" return="track" param1="track" param2="track" param3="track" permission="android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="GroupingListAdapter">
				<method signature="void bindChildView(android.view.View, android.content.Context, android.database.Cursor)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.READ_PHONE_STATE,com.android.voicemail.permission.ADD_VOICEMAIL,android.permission.WRITE_CALL_LOG,android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="void bindGroupView(android.view.View, android.content.Context, android.database.Cursor, int, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.READ_PHONE_STATE,com.android.voicemail.permission.ADD_VOICEMAIL,android.permission.WRITE_CALL_LOG,android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="void bindStandAloneView(android.view.View, android.content.Context, android.database.Cursor)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.READ_PHONE_STATE,com.android.voicemail.permission.ADD_VOICEMAIL,android.permission.WRITE_CALL_LOG,android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="android.view.View getView(int, android.view.View, android.view.ViewGroup)" static="false" return="track" param1="track" param2="track" param3="track" permission="android.permission.READ_PHONE_STATE,com.android.voicemail.permission.ADD_VOICEMAIL,android.permission.WRITE_CALL_LOG,android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="void onContentChanged()" static="false" return="" permission="com.android.voicemail.permission.ADD_VOICEMAIL,android.permission.READ_CALL_LOG"/>
			</class>
		</package>
		<package name="org.w3c.dom.events">
			<class name="EventTarget">
				<method signature="void addEventListener(java.lang.String, org.w3c.dom.events.EventListener, boolean)" static="false" param1="" param2="listener" param3="" permission=""/>
			</class>
		</package>
		<package name="com.android.commands.am">
			<class name="Am">
				<method signature="void main(java.lang.String[])" static="true" return="" param0="track" permission="android.permission.WRITE_SETTINGS,android.permission.WAKE_LOCK,android.permission.RESTART_PACKAGES,android.permission.KILL_BACKGROUND_PROCESSES"/>
			</class>
		</package>
		<package name="android.accessibilityservice">
			<class name="UiTestAutomationBridge">
				<method signature="void disconnect()" static="false" return="" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="IAccessibilityServiceConnection">
				<method signature="float findAccessibilityNodeInfoByAccessibilityId(int, long, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, int, long)" static="false" param1="" param2="" param3="" param4="listener" param5="" param6="" permission=""/>
				<method signature="float findAccessibilityNodeInfoByViewId(int, long, int, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, long)" static="false" param1="" param2="" param3="" param4="" param5="listener" param6="" permission=""/>
				<method signature="float findAccessibilityNodeInfosByText(int, long, java.lang.String, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, long)" static="false" param1="" param2="" param3="" param4="" param5="listener" param6="" permission=""/>
				<method signature="float findFocus(int, long, int, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, long)" static="false" param1="" param2="" param3="" param4="" param5="listener" param6="" permission=""/>
				<method signature="float focusSearch(int, long, int, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, long)" static="false" param1="" param2="" param3="" param4="" param5="listener" param6="" permission=""/>
				<method signature="boolean performAccessibilityAction(int, long, int, android.os.Bundle, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, long)" static="false" param1="" param2="" param3="" param4="" param5="" param6="listener" param7="" permission=""/>
			</class>
		</package>
		<package name="com.android.server.sip">
			<class name="SipService">
				<method signature="void close(java.lang.String)" static="false" return="" param1="track" permission="android.permission.USE_SIP,android.permission.WAKE_LOCK"/>
				<method signature="android.net.sip.ISipSession createSession(android.net.sip.SipProfile, android.net.sip.ISipSessionListener)" static="false" return="track" param1="track" param2="track, listener, trackListener" permission="android.permission.USE_SIP"/>
				<method signature="android.net.sip.SipProfile[] getListOfProfiles()" static="false" return="track" permission="android.permission.USE_SIP"/>
				<method signature="android.net.sip.ISipSession getPendingSession(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.USE_SIP"/>
				<method signature="boolean isOpened(java.lang.String)" static="false" return="" param1="track" permission="android.permission.USE_SIP"/>
				<method signature="boolean isRegistered(java.lang.String)" static="false" return="" param1="track" permission="android.permission.USE_SIP"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.USE_SIP,android.permission.WAKE_LOCK"/>
				<method signature="void open(android.net.sip.SipProfile)" static="false" return="" param1="track" permission="android.permission.USE_SIP"/>
				<method signature="void open3(android.net.sip.SipProfile, android.app.PendingIntent, android.net.sip.ISipSessionListener)" static="false" return="" param1="track" param2="track" param3="track, listener, trackListener" permission="android.permission.USE_SIP,android.permission.WAKE_LOCK"/>
				<method signature="void setRegistrationListener(java.lang.String, android.net.sip.ISipSessionListener)" static="false" return="" param1="track" param2="track, listener, trackListener" permission="android.permission.USE_SIP"/>
			</class>
		</package>
		<package name="com.android.internal.os">
			<class name="RuntimeInit">
				<method signature="void wtf(java.lang.String, java.lang.Throwable)" static="true" return="" param0="track" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WAKE_LOCK"/>
			</class>
			<class name="BatteryStatsImpl">
				<method signature="void doPlugLocked(long, long)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH"/>
				<method signature="void doUnplugLocked(long, long)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH"/>
				<method signature="int getBluetoothPingCount()" static="false" return="" permission="android.permission.BLUETOOTH"/>
				<method signature="void setBatteryState(int, int, int, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.BLUETOOTH"/>
				<method signature="void setBtHeadset(android.bluetooth.BluetoothHeadset)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH"/>
				<method signature="void setOnBattery(boolean, int, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.BLUETOOTH"/>
				<method signature="void setOnBatteryLocked(boolean, int, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.BLUETOOTH"/>
				<method signature="void writeToParcel(android.os.Parcel, int)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH"/>
				<method signature="void writeToParcelLocked(android.os.Parcel, boolean, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.BLUETOOTH"/>
				<method signature="void writeToParcelWithoutUids(android.os.Parcel, int)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH"/>
			</class>
		</package>
		<package name="android.media.effect.effects">
			<class name="RedEyeEffect">
				<method signature="void apply(int, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void release()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="GrayscaleEffect">
				<method signature="void apply(int, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void release()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="NegativeEffect">
				<method signature="void apply(int, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void release()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="BackDropperEffect">
				<method signature="void apply(int, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO"/>
				<method signature="void release()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setUpdateListener(android.media.effect.EffectUpdateListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="ColorTemperatureEffect">
				<method signature="void apply(int, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void release()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="ContrastEffect">
				<method signature="void apply(int, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void release()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="StraightenEffect">
				<method signature="void apply(int, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void release()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="VignetteEffect">
				<method signature="void apply(int, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void release()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="BrightnessEffect">
				<method signature="void apply(int, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void release()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="FlipEffect">
				<method signature="void apply(int, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void release()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="CrossProcessEffect">
				<method signature="void apply(int, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void release()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="BlackWhiteEffect">
				<method signature="void apply(int, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void release()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="CropEffect">
				<method signature="void apply(int, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void release()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="FillLightEffect">
				<method signature="void apply(int, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void release()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="SepiaEffect">
				<method signature="void apply(int, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void release()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="RotateEffect">
				<method signature="void apply(int, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void release()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="LomoishEffect">
				<method signature="void apply(int, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void release()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="GrainEffect">
				<method signature="void apply(int, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void release()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="SharpenEffect">
				<method signature="void apply(int, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void release()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="DocumentaryEffect">
				<method signature="void apply(int, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void release()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="SaturateEffect">
				<method signature="void apply(int, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void release()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="PosterizeEffect">
				<method signature="void apply(int, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void release()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="FisheyeEffect">
				<method signature="void apply(int, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void release()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="AutoFixEffect">
				<method signature="void apply(int, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void release()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="DuotoneEffect">
				<method signature="void apply(int, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void release()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="TintEffect">
				<method signature="void apply(int, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void release()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="BitmapOverlayEffect">
				<method signature="void apply(int, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void release()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
		</package>
		<package name="android.net">
			<class name="DhcpStateMachine$WaitBeforeStartState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="IThrottleManager">
				<method signature="long getByteCount(java.lang.String, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="int getCliffLevel(java.lang.String, int)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="long getCliffThreshold(java.lang.String, int)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="java.lang.String getHelpUri()" static="false" return="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="long getPeriodStartTime(java.lang.String)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="long getResetTime(java.lang.String)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="int getThrottle(java.lang.String)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="DhcpStateMachine$RunningState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="ConnectivityManager">
				<method signature="android.net.LinkProperties getActiveLinkProperties()" static="false" return="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="android.net.NetworkInfo getActiveNetworkInfo()" static="false" return="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="android.net.NetworkQuotaInfo getActiveNetworkQuotaInfo()" static="false" return="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="android.net.NetworkInfo[] getAllNetworkInfo()" static="false" return="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="int getLastTetherError(java.lang.String)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="android.net.LinkProperties getLinkProperties(int)" static="false" return="track" param1="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean getMobileDataEnabled()" static="false" return="" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="android.net.NetworkInfo getNetworkInfo(int)" static="false" return="track" param1="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="int getNetworkPreference()" static="false" return="" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="java.lang.String[] getTetherableBluetoothRegexs()" static="false" return="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="java.lang.String[] getTetherableIfaces()" static="false" return="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="java.lang.String[] getTetherableUsbRegexs()" static="false" return="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="java.lang.String[] getTetherableWifiRegexs()" static="false" return="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="java.lang.String[] getTetheredIfaces()" static="false" return="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="java.lang.String[] getTetheringErroredIfaces()" static="false" return="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean isActiveNetworkMetered()" static="false" return="" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean isNetworkSupported(int)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean isTetheringSupported()" static="false" return="" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="void reportInetCondition(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="boolean requestNetworkTransitionWakelock(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="boolean requestRouteToHost(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.CHANGE_NETWORK_STATE"/>
				<method signature="boolean requestRouteToHostAddress(int, java.net.InetAddress)" static="false" return="" param1="track" param2="track" permission="android.permission.CHANGE_NETWORK_STATE"/>
				<method signature="void setGlobalProxy(android.net.ProxyProperties)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_NETWORK_STATE"/>
				<method signature="void setMobileDataEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.CHANGE_NETWORK_STATE"/>
				<method signature="void setNetworkPreference(int)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean setRadio(int, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_NETWORK_STATE"/>
				<method signature="boolean setRadios(boolean)" static="false" return="" param1="track" permission="android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_NETWORK_STATE"/>
				<method signature="int setUsbTethering(boolean)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="int startUsingNetworkFeature(int, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_PHONE_STATE,android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_WIFI_STATE,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="int stopUsingNetworkFeature(int, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="int tether(java.lang.String)" static="false" return="" param1="track" permission="android.permission.CHANGE_NETWORK_STATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="int untether(java.lang.String)" static="false" return="" param1="track" permission="android.permission.CHANGE_NETWORK_STATE,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="INetworkStatsService$Stub">
				<method signature="android.net.NetworkStats getDataLayerSnapshotForUid(int)" static="false" return="track" param1="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="TrafficStats">
				<method signature="void startDataProfiling(android.content.Context)" static="true" return="" param0="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="android.net.NetworkStats stopDataProfiling(android.content.Context)" static="true" return="track" param0="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="IConnectivityManager$Stub">
				<method signature="android.net.LinkProperties getActiveLinkProperties()" static="false" return="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="android.net.NetworkInfo getActiveNetworkInfo()" static="false" return="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="android.net.NetworkQuotaInfo getActiveNetworkQuotaInfo()" static="false" return="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="android.net.NetworkInfo[] getAllNetworkInfo()" static="false" return="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="android.net.NetworkState[] getAllNetworkState()" static="false" return="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="int getLastTetherError(java.lang.String)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="android.net.LinkProperties getLinkProperties(int)" static="false" return="track" param1="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean getMobileDataEnabled()" static="false" return="" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="android.net.NetworkInfo getNetworkInfo(int)" static="false" return="track" param1="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="int getNetworkPreference()" static="false" return="" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="java.lang.String[] getTetherableBluetoothRegexs()" static="false" return="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="java.lang.String[] getTetherableIfaces()" static="false" return="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="java.lang.String[] getTetherableUsbRegexs()" static="false" return="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="java.lang.String[] getTetherableWifiRegexs()" static="false" return="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="java.lang.String[] getTetheredIfacePairs()" static="false" return="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="java.lang.String[] getTetheredIfaces()" static="false" return="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="java.lang.String[] getTetheringErroredIfaces()" static="false" return="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean isActiveNetworkMetered()" static="false" return="" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean isNetworkSupported(int)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean isTetheringSupported()" static="false" return="" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.READ_PHONE_STATE,android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.VIBRATE,android.permission.ACCESS_WIFI_STATE,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="void reportInetCondition(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void requestNetworkTransitionWakelock(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="boolean requestRouteToHost(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.CHANGE_NETWORK_STATE"/>
				<method signature="boolean requestRouteToHostAddress(int, byte[])" static="false" return="" param1="track" param2="track" permission="android.permission.CHANGE_NETWORK_STATE"/>
				<method signature="void setGlobalProxy(android.net.ProxyProperties)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_NETWORK_STATE"/>
				<method signature="void setMobileDataEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.CHANGE_NETWORK_STATE"/>
				<method signature="void setNetworkPreference(int)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean setRadio(int, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_NETWORK_STATE"/>
				<method signature="boolean setRadios(boolean)" static="false" return="" param1="track" permission="android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_NETWORK_STATE"/>
				<method signature="int setUsbTethering(boolean)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="void startLegacyVpn(com.android.internal.net.VpnConfig, java.lang.String[], java.lang.String[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.BROADCAST_STICKY,android.permission.VIBRATE"/>
				<method signature="int startUsingNetworkFeature(int, java.lang.String, android.os.IBinder)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.READ_PHONE_STATE,android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_WIFI_STATE,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="int stopUsingNetworkFeature(int, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="int tether(java.lang.String)" static="false" return="" param1="track" permission="android.permission.CHANGE_NETWORK_STATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="int untether(java.lang.String)" static="false" return="" param1="track" permission="android.permission.CHANGE_NETWORK_STATE,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="NetworkIdentity">
				<method signature="android.net.NetworkIdentity buildNetworkIdentity(android.content.Context, android.net.NetworkState)" static="true" return="track" param0="track" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.ACCESS_WIFI_STATE"/>
				<method signature="boolean equals(java.lang.Object)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.ACCESS_WIFI_STATE"/>
				<method signature="java.lang.String getNetworkId()" static="false" return="track" permission="android.permission.READ_PHONE_STATE,android.permission.ACCESS_WIFI_STATE"/>
				<method signature="boolean getRoaming()" static="false" return="" permission="android.permission.READ_PHONE_STATE,android.permission.ACCESS_WIFI_STATE"/>
				<method signature="int getSubType()" static="false" return="" permission="android.permission.READ_PHONE_STATE,android.permission.ACCESS_WIFI_STATE"/>
				<method signature="java.lang.String getSubscriberId()" static="false" return="track" permission="android.permission.READ_PHONE_STATE,android.permission.ACCESS_WIFI_STATE"/>
				<method signature="int getType()" static="false" return="" permission="android.permission.READ_PHONE_STATE,android.permission.ACCESS_WIFI_STATE"/>
				<method signature="int hashCode()" static="false" return="" permission="android.permission.READ_PHONE_STATE,android.permission.ACCESS_WIFI_STATE"/>
				<method signature="java.lang.String toString()" static="false" return="track" permission="android.permission.READ_PHONE_STATE,android.permission.ACCESS_WIFI_STATE"/>
			</class>
			<class name="DhcpStateMachine$DefaultState">
				<method signature="void enter()" static="false" return="" permission="android.permission.GET_TASKS,android.permission.ACCESS_WIFI_STATE,android.permission.MODIFY_AUDIO_SETTINGS,android.permission.READ_PHONE_STATE,android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.VIBRATE,android.permission.BROADCAST_STICKY,android.permission.BLUETOOTH_ADMIN,android.permission.CHANGE_NETWORK_STATE,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="INetworkPolicyManager$Stub">
				<method signature="android.net.NetworkPolicy[] getNetworkPolicies()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="android.net.NetworkQuotaInfo getNetworkQuotaInfo(android.net.NetworkState)" static="false" return="track" param1="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean isNetworkMetered(android.net.NetworkState)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.ACCESS_WIFI_STATE"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.READ_PHONE_STATE,android.permission.VIBRATE,android.permission.ACCESS_WIFI_STATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="void setNetworkPolicies(android.net.NetworkPolicy[])" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.VIBRATE,android.permission.ACCESS_WIFI_STATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="void setRestrictBackground(boolean)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.VIBRATE"/>
			</class>
			<class name="DhcpStateMachine$StoppedState">
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="INetworkPolicyManager">
				<method signature="android.net.NetworkPolicy[] getNetworkPolicies()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="android.net.NetworkQuotaInfo getNetworkQuotaInfo(android.net.NetworkState)" static="false" return="track" param1="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean isNetworkMetered(android.net.NetworkState)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.ACCESS_WIFI_STATE"/>
				<method signature="void registerListener(android.net.INetworkPolicyListener)" static="false" param1="listener" permission=""/>
				<method signature="void setNetworkPolicies(android.net.NetworkPolicy[])" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.VIBRATE,android.permission.ACCESS_WIFI_STATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="void setRestrictBackground(boolean)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.VIBRATE"/>
				<method signature="void unregisterListener(android.net.INetworkPolicyListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="ThrottleManager">
				<method signature="long getByteCount(java.lang.String, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="int getCliffLevel(java.lang.String, int)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="long getCliffThreshold(java.lang.String, int)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="java.lang.String getHelpUri()" static="false" return="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="long getPeriodStartTime(java.lang.String)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="long getResetTime(java.lang.String)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="DnsPinger">
				<method signature="java.util.List getDnsList()" static="false" return="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="NetworkPolicyManager">
				<method signature="android.net.NetworkPolicy[] getNetworkPolicies()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="void registerListener(android.net.INetworkPolicyListener)" static="false" param1="listener" permission=""/>
				<method signature="void setNetworkPolicies(android.net.NetworkPolicy[])" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.VIBRATE,android.permission.ACCESS_WIFI_STATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="void setRestrictBackground(boolean)" static="false" return="" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.VIBRATE"/>
				<method signature="void unregisterListener(android.net.INetworkPolicyListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="IConnectivityManager">
				<method signature="android.net.LinkProperties getActiveLinkProperties()" static="false" return="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="android.net.NetworkInfo getActiveNetworkInfo()" static="false" return="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="android.net.NetworkQuotaInfo getActiveNetworkQuotaInfo()" static="false" return="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="android.net.NetworkInfo[] getAllNetworkInfo()" static="false" return="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="android.net.NetworkState[] getAllNetworkState()" static="false" return="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="int getLastTetherError(java.lang.String)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="android.net.LinkProperties getLinkProperties(int)" static="false" return="track" param1="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean getMobileDataEnabled()" static="false" return="" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="android.net.NetworkInfo getNetworkInfo(int)" static="false" return="track" param1="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="int getNetworkPreference()" static="false" return="" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="java.lang.String[] getTetherableBluetoothRegexs()" static="false" return="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="java.lang.String[] getTetherableIfaces()" static="false" return="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="java.lang.String[] getTetherableUsbRegexs()" static="false" return="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="java.lang.String[] getTetherableWifiRegexs()" static="false" return="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="java.lang.String[] getTetheredIfacePairs()" static="false" return="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="java.lang.String[] getTetheredIfaces()" static="false" return="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="java.lang.String[] getTetheringErroredIfaces()" static="false" return="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean isActiveNetworkMetered()" static="false" return="" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean isNetworkSupported(int)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean isTetheringSupported()" static="false" return="" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="void reportInetCondition(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void requestNetworkTransitionWakelock(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="boolean requestRouteToHost(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.CHANGE_NETWORK_STATE"/>
				<method signature="boolean requestRouteToHostAddress(int, byte[])" static="false" return="" param1="track" param2="track" permission="android.permission.CHANGE_NETWORK_STATE"/>
				<method signature="void setGlobalProxy(android.net.ProxyProperties)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_NETWORK_STATE"/>
				<method signature="void setMobileDataEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.CHANGE_NETWORK_STATE"/>
				<method signature="void setNetworkPreference(int)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean setRadio(int, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_NETWORK_STATE"/>
				<method signature="boolean setRadios(boolean)" static="false" return="" param1="track" permission="android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_NETWORK_STATE"/>
				<method signature="int setUsbTethering(boolean)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="void startLegacyVpn(com.android.internal.net.VpnConfig, java.lang.String[], java.lang.String[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.BROADCAST_STICKY,android.permission.VIBRATE"/>
				<method signature="int startUsingNetworkFeature(int, java.lang.String, android.os.IBinder)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.READ_PHONE_STATE,android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.ACCESS_WIFI_STATE,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="int stopUsingNetworkFeature(int, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="int tether(java.lang.String)" static="false" return="" param1="track" permission="android.permission.CHANGE_NETWORK_STATE,android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="int untether(java.lang.String)" static="false" return="" param1="track" permission="android.permission.CHANGE_NETWORK_STATE,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="INetworkStatsService">
				<method signature="android.net.NetworkStats getDataLayerSnapshotForUid(int)" static="false" return="track" param1="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="IThrottleManager$Stub">
				<method signature="long getByteCount(java.lang.String, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="int getCliffLevel(java.lang.String, int)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="long getCliffThreshold(java.lang.String, int)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="java.lang.String getHelpUri()" static="false" return="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="long getPeriodStartTime(java.lang.String)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="long getResetTime(java.lang.String)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="int getThrottle(java.lang.String)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="NetworkStateTracker">
				<method signature="boolean reconnect()" static="false" return="" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="boolean setRadio(boolean)" static="false" return="" param1="track" permission="android.permission.CHANGE_WIFI_STATE"/>
				<method signature="boolean teardown()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
		</package>
		<package name="com.android.commands.pm">
			<class name="Pm">
				<method signature="void main(java.lang.String[])" static="true" return="" param0="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void run(java.lang.String[])" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
		</package>
		<package name="android.nfc">
			<class name="INfcTag">
				<method signature="int close(int)" static="false" return="" param1="track" permission="android.permission.NFC"/>
				<method signature="int connect(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.NFC"/>
				<method signature="int formatNdef(int, byte[])" static="false" return="" param1="track" param2="track" permission="android.permission.NFC"/>
				<method signature="int[] getTechList(int)" static="false" return="track" param1="track" permission="android.permission.NFC"/>
				<method signature="int getTimeout(int)" static="false" return="" param1="track" permission="android.permission.NFC"/>
				<method signature="boolean isNdef(int)" static="false" return="" param1="track" permission="android.permission.NFC"/>
				<method signature="int ndefMakeReadOnly(int)" static="false" return="" param1="track" permission="android.permission.NFC"/>
				<method signature="android.nfc.NdefMessage ndefRead(int)" static="false" return="track" param1="track" permission="android.permission.NFC"/>
				<method signature="int ndefWrite(int, android.nfc.NdefMessage)" static="false" return="" param1="track" param2="track" permission="android.permission.NFC"/>
				<method signature="int reconnect(int)" static="false" return="" param1="track" permission="android.permission.NFC"/>
				<method signature="android.nfc.Tag rediscover(int)" static="false" return="track" param1="track" permission="android.permission.NFC"/>
				<method signature="void resetTimeouts()" static="false" return="" permission="android.permission.NFC"/>
				<method signature="int setTimeout(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.NFC"/>
				<method signature="android.nfc.TransceiveResult transceive(int, byte[], boolean)" static="false" return="track" param1="track" param2="track" param3="track" permission="android.permission.NFC"/>
			</class>
			<class name="INfcAdapter$Stub">
				<method signature="boolean disableNdefPush()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.VIBRATE,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="void dispatch(android.nfc.Tag)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean enableNdefPush()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.VIBRATE,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="android.nfc.INfcAdapterExtras getNfcAdapterExtrasInterface(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.NFC"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.NFC,android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.VIBRATE,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="void setForegroundDispatch(android.app.PendingIntent, android.content.IntentFilter[], android.nfc.TechListParcel)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.NFC"/>
				<method signature="void setNdefPushCallback(android.nfc.INdefPushCallback)" static="false" return="" param1="track, listener, trackListener" permission="android.permission.NFC"/>
			</class>
			<class name="NfcActivityManager">
				<method signature="void requestNfcServiceCallback(boolean)" static="false" return="" param1="track" permission="android.permission.NFC"/>
				<method signature="void setNdefPushContentUri(android.app.Activity, android.net.Uri[])" static="false" return="" param1="track" param2="track" permission="android.permission.NFC"/>
				<method signature="void setNdefPushContentUriCallback(android.app.Activity, android.nfc.NfcAdapter$CreateBeamUrisCallback)" static="false" return="" param1="track" param2="track, listener, trackListener" permission="android.permission.NFC"/>
				<method signature="void setNdefPushMessage(android.app.Activity, android.nfc.NdefMessage)" static="false" return="" param1="track" param2="track" permission="android.permission.NFC"/>
				<method signature="void setNdefPushMessageCallback(android.app.Activity, android.nfc.NfcAdapter$CreateNdefMessageCallback)" static="false" return="" param1="track" param2="track, listener, trackListener" permission="android.permission.NFC"/>
				<method signature="void setOnNdefPushCompleteCallback(android.app.Activity, android.nfc.NfcAdapter$OnNdefPushCompleteCallback)" static="false" return="" param1="track" param2="track, listener, trackListener" permission="android.permission.NFC"/>
			</class>
			<class name="INfcAdapterExtras$Stub">
				<method signature="void authenticate(java.lang.String, byte[])" static="false" return="" param1="track" param2="track" permission="android.permission.NFC"/>
				<method signature="android.os.Bundle close(java.lang.String, android.os.IBinder)" static="false" return="track" param1="track" param2="track" permission="android.permission.NFC"/>
				<method signature="int getCardEmulationRoute(java.lang.String)" static="false" return="" param1="track" permission="android.permission.NFC"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.NFC"/>
				<method signature="android.os.Bundle open(java.lang.String, android.os.IBinder)" static="false" return="track" param1="track" param2="track" permission="android.permission.NFC"/>
				<method signature="void setCardEmulationRoute(java.lang.String, int)" static="false" return="" param1="track" param2="track" permission="android.permission.NFC"/>
				<method signature="android.os.Bundle transceive(java.lang.String, byte[])" static="false" return="track" param1="track" param2="track" permission="android.permission.NFC"/>
			</class>
			<class name="INfcAdapterExtras">
				<method signature="void authenticate(java.lang.String, byte[])" static="false" return="" param1="track" param2="track" permission="android.permission.NFC"/>
				<method signature="android.os.Bundle close(java.lang.String, android.os.IBinder)" static="false" return="track" param1="track" param2="track" permission="android.permission.NFC"/>
				<method signature="int getCardEmulationRoute(java.lang.String)" static="false" return="" param1="track" permission="android.permission.NFC"/>
				<method signature="android.os.Bundle open(java.lang.String, android.os.IBinder)" static="false" return="track" param1="track" param2="track" permission="android.permission.NFC"/>
				<method signature="void setCardEmulationRoute(java.lang.String, int)" static="false" return="" param1="track" param2="track" permission="android.permission.NFC"/>
				<method signature="android.os.Bundle transceive(java.lang.String, byte[])" static="false" return="track" param1="track" param2="track" permission="android.permission.NFC"/>
			</class>
			<class name="INfcAdapter">
				<method signature="boolean disableNdefPush()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.VIBRATE,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="void dispatch(android.nfc.Tag)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="boolean enableNdefPush()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.VIBRATE,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="android.nfc.INfcAdapterExtras getNfcAdapterExtrasInterface(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.NFC"/>
				<method signature="void setForegroundDispatch(android.app.PendingIntent, android.content.IntentFilter[], android.nfc.TechListParcel)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.NFC"/>
				<method signature="void setNdefPushCallback(android.nfc.INdefPushCallback)" static="false" return="" param1="track, listener, trackListener" permission="android.permission.NFC"/>
			</class>
			<class name="NfcAdapter">
				<method signature="void disableForegroundDispatch(android.app.Activity)" static="false" return="" param1="track" permission="android.permission.NFC"/>
				<method signature="void disableForegroundDispatchInternal(android.app.Activity, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.NFC"/>
				<method signature="void disableForegroundNdefPush(android.app.Activity)" static="false" return="" param1="track" permission="android.permission.NFC"/>
				<method signature="boolean disableNdefPush()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.VIBRATE,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="void dispatch(android.nfc.Tag)" static="false" return="" param1="track" permission="android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="void enableForegroundDispatch(android.app.Activity, android.app.PendingIntent, android.content.IntentFilter[], java.lang.String[][])" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.NFC"/>
				<method signature="void enableForegroundNdefPush(android.app.Activity, android.nfc.NdefMessage)" static="false" return="" param1="track" param2="track" permission="android.permission.NFC"/>
				<method signature="boolean enableNdefPush()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.VIBRATE,android.permission.BLUETOOTH_ADMIN"/>
				<method signature="android.nfc.INfcAdapterExtras getNfcAdapterExtrasInterface()" static="false" return="track" permission="android.permission.NFC"/>
				<method signature="void setBeamPushUris(android.net.Uri[], android.app.Activity)" static="false" return="" param1="track" param2="track" permission="android.permission.NFC"/>
				<method signature="void setBeamPushUrisCallback(android.nfc.NfcAdapter$CreateBeamUrisCallback, android.app.Activity)" static="false" return="" param1="track, listener, trackListener" param2="track" permission="android.permission.NFC"/>
				<method signature="void setNdefPushMessage(android.nfc.NdefMessage, android.app.Activity, android.app.Activity[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.NFC"/>
				<method signature="void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback, android.app.Activity, android.app.Activity[])" static="false" return="" param1="track, listener, trackListener" param2="track" param3="track" permission="android.permission.NFC"/>
				<method signature="void setOnNdefPushCompleteCallback(android.nfc.NfcAdapter$OnNdefPushCompleteCallback, android.app.Activity, android.app.Activity[])" static="false" return="" param1="track, listener, trackListener" param2="track" param3="track" permission="android.permission.NFC"/>
			</class>
			<class name="Tag">
				<method signature="android.nfc.Tag rediscover()" static="false" return="track" permission="android.permission.NFC"/>
			</class>
			<class name="INfcTag$Stub">
				<method signature="int close(int)" static="false" return="" param1="track" permission="android.permission.NFC"/>
				<method signature="int connect(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.NFC"/>
				<method signature="int formatNdef(int, byte[])" static="false" return="" param1="track" param2="track" permission="android.permission.NFC"/>
				<method signature="int[] getTechList(int)" static="false" return="track" param1="track" permission="android.permission.NFC"/>
				<method signature="int getTimeout(int)" static="false" return="" param1="track" permission="android.permission.NFC"/>
				<method signature="boolean isNdef(int)" static="false" return="" param1="track" permission="android.permission.NFC"/>
				<method signature="int ndefMakeReadOnly(int)" static="false" return="" param1="track" permission="android.permission.NFC"/>
				<method signature="android.nfc.NdefMessage ndefRead(int)" static="false" return="track" param1="track" permission="android.permission.NFC"/>
				<method signature="int ndefWrite(int, android.nfc.NdefMessage)" static="false" return="" param1="track" param2="track" permission="android.permission.NFC"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.NFC"/>
				<method signature="int reconnect(int)" static="false" return="" param1="track" permission="android.permission.NFC"/>
				<method signature="android.nfc.Tag rediscover(int)" static="false" return="track" param1="track" permission="android.permission.NFC"/>
				<method signature="void resetTimeouts()" static="false" return="" permission="android.permission.NFC"/>
				<method signature="int setTimeout(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.NFC"/>
				<method signature="android.nfc.TransceiveResult transceive(int, byte[], boolean)" static="false" return="track" param1="track" param2="track" param3="track" permission="android.permission.NFC"/>
			</class>
		</package>
		<package name="com.android.commands.bmgr">
			<class name="Bmgr">
				<method signature="void main(java.lang.String[])" static="true" return="" param0="track" permission="android.permission.WRITE_SETTINGS,android.permission.WAKE_LOCK"/>
				<method signature="void run(java.lang.String[])" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.WAKE_LOCK"/>
			</class>
		</package>
		<package name="com.android.phone">
			<class name="HapticFeedback">
				<method signature="void vibrate()" static="false" return="" permission="android.permission.VIBRATE,android.permission.WAKE_LOCK"/>
			</class>
		</package>
		<package name="com.android.emailcommon">
			<class name="Device">
				<method signature="java.lang.String getConsistentDeviceId(android.content.Context)" static="true" return="track" param0="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.lang.String getDeviceId(android.content.Context)" static="true" return="track" param0="track" permission="android.permission.READ_PHONE_STATE"/>
			</class>
		</package>
		<package name="com.android.commands.uiautomator">
			<class name="Launcher">
				<method signature="void main(java.lang.String[])" static="true" return="" param0="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="EventsCommand$1">
				<method signature="void disconnect()" static="false" return="" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="Launcher$Command">
				<method signature="void run(java.lang.String[])" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="DumpCommand">
				<method signature="void run(java.lang.String[])" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
		</package>
		<package name="android.graphics">
			<class name="SurfaceTexture">
				<method signature="void setOnFrameAvailableListener(android.graphics.SurfaceTexture$OnFrameAvailableListener)" static="false" param1="listener" permission=""/>
			</class>
		</package>
		<package name="java.util">
			<class name="EventListenerProxy">
				<method signature="void &lt;init&gt;(java.util.EventListener)" static="false" param1="listener" permission=""/>
			</class>
		</package>
		<package name="android.telephony">
			<class name="SmsManager">
				<method signature="boolean copyMessageToIcc(byte[], byte[], int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
				<method signature="boolean deleteMessageFromIcc(int)" static="false" return="" param1="track" permission="android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
				<method signature="boolean disableCellBroadcast(int)" static="false" return="" param1="track" permission="android.permission.RECEIVE_SMS"/>
				<method signature="boolean disableCellBroadcastRange(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_SMS"/>
				<method signature="boolean enableCellBroadcast(int)" static="false" return="" param1="track" permission="android.permission.RECEIVE_SMS"/>
				<method signature="boolean enableCellBroadcastRange(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_SMS"/>
				<method signature="java.util.ArrayList getAllMessagesFromIcc()" static="true" return="track" permission="android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
				<method signature="void sendDataMessage(java.lang.String, java.lang.String, short, byte[], android.app.PendingIntent, android.app.PendingIntent)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.SEND_SMS"/>
				<method signature="void sendMultipartTextMessage(java.lang.String, java.lang.String, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.SEND_SMS"/>
				<method signature="void sendTextMessage(java.lang.String, java.lang.String, java.lang.String, android.app.PendingIntent, android.app.PendingIntent)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.SEND_SMS"/>
				<method signature="boolean updateMessageOnIcc(int, int, byte[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
			</class>
			<class name="PhoneNumberUtils">
				<method signature="boolean isVoiceMailNumber(java.lang.String)" static="true" return="" param0="track" permission="android.permission.READ_PHONE_STATE"/>
			</class>
			<class name="TelephonyManager">
				<method signature="java.util.List getAllCellInfo()" static="false" return="track" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="android.telephony.CellLocation getCellLocation()" static="false" return="track" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="java.lang.String getDeviceId()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.lang.String getDeviceSoftwareVersion()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.lang.String getLine1AlphaTag()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.lang.String getLine1Number()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.lang.String getMsisdn()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.util.List getNeighboringCellInfo()" static="false" return="track" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="java.lang.String getSimSerialNumber()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.lang.String getSubscriberId()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.lang.String getVoiceMailAlphaTag()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.lang.String getVoiceMailNumber()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="void listen(android.telephony.PhoneStateListener, int)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_PHONE_STATE,android.permission.ACCESS_COARSE_LOCATION"/>
			</class>
		</package>
		<package name="java.beans.beancontext">
			<class name="BeanContextServices">
				<method signature="void addBeanContextServicesListener(java.beans.beancontext.BeanContextServicesListener)" static="false" param1="listener" permission=""/>
				<method signature="java.lang.Object getService(java.beans.beancontext.BeanContextChild, java.lang.Object, java.lang.Class, java.lang.Object, java.beans.beancontext.BeanContextServiceRevokedListener)" static="false" param1="" param2="" param3="" param4="" param5="listener" permission=""/>
			</class>
			<class name="BeanContext">
				<method signature="void addBeanContextMembershipListener(java.beans.beancontext.BeanContextMembershipListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="BeanContextSupport">
				<method signature="void addBeanContextMembershipListener(java.beans.beancontext.BeanContextMembershipListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="BeanContextChild">
				<method signature="void addPropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)" static="false" param1="" param2="listener" permission=""/>
				<method signature="void addVetoableChangeListener(java.lang.String, java.beans.VetoableChangeListener)" static="false" param1="" param2="listener" permission=""/>
			</class>
			<class name="BeanContextServicesSupport">
				<method signature="void addBeanContextServicesListener(java.beans.beancontext.BeanContextServicesListener)" static="false" param1="listener" permission=""/>
				<method signature="java.lang.Object getService(java.beans.beancontext.BeanContextChild, java.lang.Object, java.lang.Class, java.lang.Object, java.beans.beancontext.BeanContextServiceRevokedListener)" static="false" param1="" param2="" param3="" param4="" param5="listener" permission=""/>
			</class>
			<class name="BeanContextChildSupport">
				<method signature="void addPropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)" static="false" param1="" param2="listener" permission=""/>
				<method signature="void addVetoableChangeListener(java.lang.String, java.beans.VetoableChangeListener)" static="false" param1="" param2="listener" permission=""/>
			</class>
		</package>
		<package name="android.support.v4.view">
			<class name="ViewPager">
				<method signature="void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)" static="false" param1="listener" permission=""/>
			</class>
		</package>
		<package name="android.gesture">
			<class name="GestureOverlayView">
				<method signature="void addOnGestureListener(android.gesture.GestureOverlayView$OnGestureListener)" static="false" param1="listener" permission=""/>
				<method signature="void addOnGesturePerformedListener(android.gesture.GestureOverlayView$OnGesturePerformedListener)" static="false" param1="listener" permission=""/>
				<method signature="void addOnGesturingListener(android.gesture.GestureOverlayView$OnGesturingListener)" static="false" param1="listener" permission=""/>
			</class>
		</package>
		<package name="android.server.search">
			<class name="SearchManagerService$MyPackageMonitor">
				<method signature="boolean onHandleForceStop(android.content.Intent, java.lang.String[], int, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void onPackageRemoved(java.lang.String, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
				<method signature="void onReceive(android.content.Context, android.content.Intent)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS"/>
			</class>
			<class name="SearchManagerService">
				<method signature="void &lt;init&gt;(android.content.Context)" static="false" return="" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS"/>
				<method signature="java.util.List getGlobalSearchActivities()" static="false" return="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS"/>
				<method signature="android.content.ComponentName getGlobalSearchActivity()" static="false" return="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS"/>
				<method signature="android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)" static="false" return="track" param1="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS"/>
				<method signature="java.util.List getSearchablesInGlobalSearch()" static="false" return="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS"/>
				<method signature="android.content.ComponentName getWebSearchActivity()" static="false" return="track" permission="android.permission.RECEIVE_BOOT_COMPLETED,android.permission.WRITE_SETTINGS"/>
			</class>
		</package>
		<package name="android.filterpacks.text">
			<class name="ToUpperCase">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="StringLogger">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="StringSource">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
		</package>
		<package name="android.view.textservice">
			<class name="TextServicesManager">
				<method signature="android.view.textservice.SpellCheckerSession newSpellCheckerSession(android.os.Bundle, java.util.Locale, android.view.textservice.SpellCheckerSession$SpellCheckerSessionListener, boolean)" static="false" param1="" param2="" param3="listener" param4="" permission=""/>
			</class>
			<class name="SpellCheckerSession">
				<method signature="void &lt;init&gt;(android.view.textservice.SpellCheckerInfo, com.android.internal.textservice.ITextServicesManager, android.view.textservice.SpellCheckerSession$SpellCheckerSessionListener, android.view.textservice.SpellCheckerSubtype)" static="false" param1="" param2="" param3="listener" param4="" permission=""/>
			</class>
		</package>
		<package name="android.filterpacks.imageproc">
			<class name="LomoishFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="BitmapSource">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="ToRGBAFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="ToGrayFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="DrawOverlayFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="PosterizeFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="VignetteFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="FillLightFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="NegativeFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="DocumentaryFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="StraightenFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="SharpenFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="RotateFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="FisheyeFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="BlendFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="FlipFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="RedEyeFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="DuotoneFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="ImageSlicer">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="ToRGBFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="SaturateFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="TintFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="SimpleImageFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="ColorTemperatureFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="BlackWhiteFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="GrainFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="ImageEncoder">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="Invert">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="CrossProcessFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="ResizeFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="BitmapOverlayFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="ToPackedGrayFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="CropFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="BrightnessFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="AutoFixFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="CropRectFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="SepiaFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="AlphaBlendFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="FixedRotationFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="DrawRectFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="ImageStitcher">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="ContrastFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="ImageCombineFilter">
				<method signature="void close(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void notifyFieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void open(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performClose(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void performOpen(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performProcess(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void performTearDown(android.filterfw.core.FilterContext)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
		</package>
		<package name="com.android.internal.location">
			<class name="GpsNetInitiatedHandler">
				<method signature="void handleNiNotification(com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification)" static="false" return="" param1="track" permission="android.permission.VIBRATE"/>
			</class>
		</package>
		<package name="android.sax">
			<class name="Element">
				<method signature="void setElementListener(android.sax.ElementListener)" static="false" param1="listener" permission=""/>
				<method signature="void setEndElementListener(android.sax.EndElementListener)" static="false" param1="listener" permission=""/>
				<method signature="void setEndTextElementListener(android.sax.EndTextElementListener)" static="false" param1="listener" permission=""/>
				<method signature="void setStartElementListener(android.sax.StartElementListener)" static="false" param1="listener" permission=""/>
				<method signature="void setTextElementListener(android.sax.TextElementListener)" static="false" param1="listener" permission=""/>
			</class>
		</package>
		<package name="android.media.effect">
			<class name="FilterGraphEffect">
				<method signature="void apply(int, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO"/>
				<method signature="void release()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="SingleFilterEffect">
				<method signature="void apply(int, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void release()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="SizeChangeEffect">
				<method signature="void apply(int, int, int, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.CAMERA,android.permission.RECORD_AUDIO,android.permission.WAKE_LOCK"/>
				<method signature="void release()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="Effect">
				<method signature="void setUpdateListener(android.media.effect.EffectUpdateListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="EffectContext">
				<method signature="void release()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
		</package>
		<package name="com.android.internal.telephony">
			<class name="MccTable">
				<method signature="void setSystemLocale(android.content.Context, java.lang.String, java.lang.String)" static="true" return="" param0="track" param1="track" param2="track" permission="android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void updateMccMncConfiguration(android.content.Context, java.lang.String)" static="true" return="" param0="track" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
			</class>
			<class name="CallerInfoAsyncQuery$OnQueryCompleteListener">
				<method signature="void onQueryComplete(int, java.lang.Object, com.android.internal.telephony.CallerInfo)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.READ_PHONE_STATE,android.permission.READ_SYNC_SETTINGS,android.permission.READ_SOCIAL_STREAM,android.permission.WRITE_SOCIAL_STREAM,android.permission.VIBRATE,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.WAKE_LOCK"/>
			</class>
			<class name="DataConnection$DcDisconnectionErrorCreatingConnection">
				<method signature="void enter()" static="false" return="" permission="android.permission.GET_TASKS,android.permission.ACCESS_WIFI_STATE,android.permission.MODIFY_AUDIO_SETTINGS,android.permission.READ_PHONE_STATE,android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.VIBRATE,android.permission.BROADCAST_STICKY,android.permission.BLUETOOTH_ADMIN,android.permission.CHANGE_NETWORK_STATE,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="ITelephony">
				<method signature="void call(java.lang.String)" static="false" return="" param1="track" permission="android.permission.CALL_PHONE"/>
				<method signature="boolean disableDataConnectivity()" static="false" return="" permission="android.permission.CHANGE_NETWORK_STATE"/>
				<method signature="boolean enableDataConnectivity()" static="false" return="" permission="android.permission.CHANGE_NETWORK_STATE"/>
				<method signature="boolean endCall()" static="false" return="" permission="android.permission.CALL_PHONE"/>
				<method signature="java.util.List getAllCellInfo()" static="false" return="track" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="android.os.Bundle getCellLocation()" static="false" return="track" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="java.util.List getNeighboringCellInfo()" static="false" return="track" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="boolean isSimPinEnabled()" static="false" return="" permission="android.permission.READ_PHONE_STATE"/>
			</class>
			<class name="RIL">
				<method signature="void &lt;init&gt;(android.content.Context, int, int)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="void acceptCall(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void acknowledgeIncomingGsmSmsWithPdu(boolean, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void acknowledgeLastIncomingCdmaSms(boolean, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void acknowledgeLastIncomingGsmSms(boolean, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void cancelPendingUssd(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void changeBarringPassword(java.lang.String, java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void changeIccPin(java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void changeIccPin2(java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void changeIccPin2ForApp(java.lang.String, java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void changeIccPinForApp(java.lang.String, java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void conference(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void deactivateDataCall(int, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void deleteSmsOnRuim(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void deleteSmsOnSim(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void dial(java.lang.String, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void dial(java.lang.String, int, com.android.internal.telephony.UUSInfo, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="void exitEmergencyCallbackMode(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void explicitCallTransfer(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void getAvailableNetworks(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void getBasebandVersion(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void getCDMASubscription(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void getCLIR(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void getCdmaBroadcastConfig(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void getCdmaSubscriptionSource(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void getCurrentCalls(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void getDataCallList(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void getDataRegistrationState(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void getDeviceIdentity(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void getGsmBroadcastConfig(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void getIMEI(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void getIMEISV(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void getIMSI(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void getIMSIForApp(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void getIccCardStatus(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void getLastCallFailCause(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void getLastDataCallFailCause(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void getLastPdpFailCause(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void getMute(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void getNeighboringCids(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void getNetworkSelectionMode(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void getOperator(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void getPDPContextList(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void getPreferredNetworkType(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void getPreferredVoicePrivacy(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void getSignalStrength(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void getSmscAddress(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void getVoiceRadioTechnology(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void getVoiceRegistrationState(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void handleCallSetupRequestFromSim(boolean, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void hangupConnection(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void hangupForegroundResumeBackground(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void hangupWaitingOrBackground(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void iccIO(int, int, java.lang.String, int, int, int, java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" param7="track" param8="track" param9="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void iccIOForApp(int, int, java.lang.String, int, int, int, java.lang.String, java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" param7="track" param8="track" param9="track" param10="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void invokeOemRilRequestRaw(byte[], android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void invokeOemRilRequestStrings(java.lang.String[], android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void onRadioAvailable()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void queryAvailableBandMode(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void queryCLIP(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void queryCallForwardStatus(int, int, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void queryCallWaiting(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void queryCdmaRoamingPreference(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void queryFacilityLock(java.lang.String, java.lang.String, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void queryFacilityLockForApp(java.lang.String, java.lang.String, int, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void queryTTYMode(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void rejectCall(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void reportSmsMemoryStatus(boolean, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void reportStkServiceIsRunning(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void requestIsimAuthentication(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void resetRadio(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void sendBurstDtmf(java.lang.String, int, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void sendCDMAFeatureCode(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void sendCdmaSms(byte[], android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void sendDtmf(char, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void sendEnvelope(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void sendEnvelopeWithStatus(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void sendSMS(java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void sendTerminalResponse(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void sendUSSD(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void separateConnection(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void setBandMode(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void setCLIR(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void setCallForward(int, int, int, java.lang.String, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void setCallWaiting(boolean, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void setCdmaBroadcastActivation(boolean, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void setCdmaBroadcastConfig(int[], android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void setCdmaRoamingPreference(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void setCdmaSubscriptionSource(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void setCurrentPreferredNetworkType()" static="false" return="" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void setFacilityLock(java.lang.String, boolean, java.lang.String, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void setFacilityLockForApp(java.lang.String, boolean, java.lang.String, int, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void setGsmBroadcastActivation(boolean, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void setGsmBroadcastConfig(com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[], android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void setLocationUpdates(boolean, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void setMute(boolean, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void setNetworkSelectionModeAutomatic(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void setNetworkSelectionModeManual(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void setOnNITZTime(android.os.Handler, int, java.lang.Object)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="void setPhoneType(int)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="void setPreferredNetworkType(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void setPreferredVoicePrivacy(boolean, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void setRadioPower(boolean, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void setRadioState(com.android.internal.telephony.CommandsInterface$RadioState)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setSmscAddress(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void setSuppServiceNotifications(boolean, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void setTTYMode(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void setupDataCall(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" param7="track" param8="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void startDtmf(char, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void stopDtmf(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void supplyIccPin(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void supplyIccPin2(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void supplyIccPin2ForApp(java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void supplyIccPinForApp(java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void supplyIccPuk(java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void supplyIccPuk2(java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void supplyIccPuk2ForApp(java.lang.String, java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void supplyIccPukForApp(java.lang.String, java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void supplyNetworkDepersonalization(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void switchWaitingOrHoldingAndActive(android.os.Message)" static="false" return="" param1="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void testingEmergencyCall()" static="false" return="" permission="android.permission.ACCESS_NETWORK_STATE"/>
				<method signature="void writeSmsToRuim(int, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void writeSmsToSim(int, java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
			</class>
			<class name="ITelephony$Stub">
				<method signature="void call(java.lang.String)" static="false" return="" param1="track" permission="android.permission.CALL_PHONE"/>
				<method signature="boolean disableDataConnectivity()" static="false" return="" permission="android.permission.CHANGE_NETWORK_STATE"/>
				<method signature="boolean enableDataConnectivity()" static="false" return="" permission="android.permission.CHANGE_NETWORK_STATE"/>
				<method signature="boolean endCall()" static="false" return="" permission="android.permission.CALL_PHONE"/>
				<method signature="java.util.List getAllCellInfo()" static="false" return="track" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="android.os.Bundle getCellLocation()" static="false" return="track" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="java.util.List getNeighboringCellInfo()" static="false" return="track" permission="android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="boolean isSimPinEnabled()" static="false" return="" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.READ_PHONE_STATE,android.permission.ACCESS_FINE_LOCATION,android.permission.ACCESS_COARSE_LOCATION,android.permission.CALL_PHONE,android.permission.CHANGE_NETWORK_STATE"/>
			</class>
			<class name="DataConnectionTracker">
				<method signature="void &lt;init&gt;(com.android.internal.telephony.PhoneBase)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="void cleanUpAllConnections(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="int disableApnType(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="void dispose()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="int enableApnType(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="java.lang.String getActiveApnString(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="java.lang.String[] getActiveApnTypes()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="com.android.internal.telephony.DataConnectionTracker$Activity getActivity()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="boolean getAnyDataEnabled()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="boolean getDataOnRoamingEnabled()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="com.android.internal.telephony.DataConnectionTracker$State getState(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="void gotoIdleAndNotifyDataConnection(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void handleMessage(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="boolean isApnTypeActive(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="boolean isApnTypeEnabled(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="boolean isDisconnected()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="void notifyDataConnection(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void notifyOffApnsOfAvailability(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onActionIntentReconnectAlarm(android.content.Intent)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onCleanUpAllConnections(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onCleanUpConnection(boolean, int, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onDataSetupComplete(android.os.AsyncResult)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK"/>
				<method signature="void onDataStallAlarm(int)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK"/>
				<method signature="void onDisconnectDone(int, android.os.AsyncResult)" static="false" return="" param1="track" param2="track" permission="android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK"/>
				<method signature="void onEnableApn(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onEnableNewApn()" static="false" return="" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onRadioAvailable()" static="false" return="" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onRadioOffOrNotAvailable()" static="false" return="" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onResetDone(android.os.AsyncResult)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onRoamingOff()" static="false" return="" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onRoamingOn()" static="false" return="" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onSetDependencyMet(java.lang.String, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onSetInternalDataEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onSetPolicyDataEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onSetUserDataEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="boolean onTrySetupData(java.lang.String)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onVoiceCallEnded()" static="false" return="" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void onVoiceCallStarted()" static="false" return="" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void restartRadio()" static="false" return="" permission="android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK"/>
				<method signature="void setDataOnRoamingEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
				<method signature="boolean setInternalDataEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY"/>
			</class>
			<class name="DataConnection$DcDisconnectingState">
				<method signature="void enter()" static="false" return="" permission="android.permission.GET_TASKS,android.permission.ACCESS_WIFI_STATE,android.permission.MODIFY_AUDIO_SETTINGS,android.permission.READ_PHONE_STATE,android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.VIBRATE,android.permission.BROADCAST_STICKY,android.permission.BLUETOOTH_ADMIN,android.permission.CHANGE_NETWORK_STATE,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="AdnRecordCache">
				<method signature="void requestLoadAllAdnLike(int, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void updateAdnByIndex(int, com.android.internal.telephony.AdnRecord, int, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void updateAdnBySearch(int, com.android.internal.telephony.AdnRecord, com.android.internal.telephony.AdnRecord, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="IccFileHandler">
				<method signature="void getEFLinearRecordSize(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void loadEFImgLinearFixed(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void loadEFImgTransparent(int, int, int, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void loadEFLinearFixed(int, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void loadEFLinearFixedAll(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void loadEFTransparent(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void updateEFLinearFixed(int, int, byte[], java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void updateEFTransparent(int, byte[], android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="CallManager">
				<method signature="void acceptCall(com.android.internal.telephony.Call)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="com.android.internal.telephony.Connection dial(com.android.internal.telephony.Phone, java.lang.String)" static="false" return="track" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void hangupForegroundResumeBackground(com.android.internal.telephony.Call)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="boolean sendBurstDtmf(java.lang.String, int, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setAudioMode()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.BROADCAST_STICKY,android.permission.BLUETOOTH_ADMIN,android.permission.MODIFY_AUDIO_SETTINGS"/>
			</class>
			<class name="Phone">
				<method signature="void dispose()" static="false" return="" permission="android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK"/>
				<method signature="void enableEnhancedVoicePrivacy(boolean, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void exitEmergencyCallbackMode()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getEnhancedVoicePrivacy(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getPreferredNetworkType(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getSmscAddress(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void invokeOemRilRequestRaw(byte[], android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void invokeOemRilRequestStrings(java.lang.String[], android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void queryAvailableBandMode(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void queryCdmaRoamingPreference(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void queryTTYMode(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void requestIsimAuthentication(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void sendBurstDtmf(java.lang.String, int, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setBandMode(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setCdmaRoamingPreference(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setCdmaSubscription(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setPreferredNetworkType(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setSmscAddress(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setTTYMode(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setVoiceMessageWaiting(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="IccRecords">
				<method signature="void onAllRecordsLoaded()" static="false" return="" permission="android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void onReady()" static="false" return="" permission="android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK"/>
				<method signature="void onRecordLoaded()" static="false" return="" permission="android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void onRefresh(boolean, int[])" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setMsisdnNumber(java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setVoiceCallForwardingFlag(int, boolean)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setVoiceMailNumber(java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setVoiceMessageWaiting(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="PhoneProxy">
				<method signature="void enableEnhancedVoicePrivacy(boolean, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void exitEmergencyCallbackMode()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getEnhancedVoicePrivacy(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getPreferredNetworkType(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getSmscAddress(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void invokeOemRilRequestRaw(byte[], android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void invokeOemRilRequestStrings(java.lang.String[], android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void queryAvailableBandMode(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void queryCdmaRoamingPreference(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void queryTTYMode(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void requestIsimAuthentication(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void sendBurstDtmf(java.lang.String, int, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setBandMode(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setCdmaRoamingPreference(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setCdmaSubscription(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setPreferredNetworkType(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setSmscAddress(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setTTYMode(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="IccPhoneBookInterfaceManagerProxy">
				<method signature="java.util.List getAdnRecordsInEf(int)" static="false" return="track" param1="track" permission="android.permission.READ_CONTACTS,android.permission.WAKE_LOCK"/>
				<method signature="int[] getAdnRecordsSize(int)" static="false" return="track" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.WAKE_LOCK"/>
				<method signature="boolean updateAdnRecordsInEfByIndex(int, java.lang.String, java.lang.String, int, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.WRITE_CONTACTS,android.permission.WAKE_LOCK"/>
				<method signature="boolean updateAdnRecordsInEfBySearch(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.WRITE_CONTACTS,android.permission.WAKE_LOCK"/>
			</class>
			<class name="Connection">
				<method signature="void cancelPostDial()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void hangup()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void proceedAfterWaitChar()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void proceedAfterWildChar(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void separate()" static="false" return="" permission="android.permission.ACCESS_WIFI_STATE,android.permission.WAKE_LOCK"/>
			</class>
			<class name="IccCard">
				<method signature="void broadcastIccStateChangedIntent(java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void changeIccFdnPassword(java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void changeIccLockPassword(java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setIccFdnEnabled(boolean, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setIccLockEnabled(boolean, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void supplyNetworkDepersonalization(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void supplyPin(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void supplyPin2(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void supplyPuk(java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void supplyPuk2(java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="IccSmsInterfaceManagerProxy">
				<method signature="boolean copyMessageToIccEf(int, byte[], byte[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
				<method signature="boolean disableCellBroadcast(int)" static="false" return="" param1="track" permission="android.permission.RECEIVE_SMS"/>
				<method signature="boolean disableCellBroadcastRange(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
				<method signature="boolean enableCellBroadcast(int)" static="false" return="" param1="track" permission="android.permission.RECEIVE_SMS"/>
				<method signature="boolean enableCellBroadcastRange(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
				<method signature="java.util.List getAllMessagesFromIccEf()" static="false" return="track" permission="android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
				<method signature="void sendData(java.lang.String, java.lang.String, int, byte[], android.app.PendingIntent, android.app.PendingIntent)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.SEND_SMS"/>
				<method signature="void sendMultipartText(java.lang.String, java.lang.String, java.util.List, java.util.List, java.util.List)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.SEND_SMS"/>
				<method signature="void sendText(java.lang.String, java.lang.String, java.lang.String, android.app.PendingIntent, android.app.PendingIntent)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.SEND_SMS"/>
				<method signature="boolean updateMessageOnIccEf(int, int, byte[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
			</class>
			<class name="BaseCommands">
				<method signature="void onRadioAvailable()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setCurrentPreferredNetworkType()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setRadioState(com.android.internal.telephony.CommandsInterface$RadioState)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="DefaultPhoneNotifier">
				<method signature="void notifyDataConnection(com.android.internal.telephony.Phone, java.lang.String, java.lang.String, com.android.internal.telephony.Phone$DataState)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void notifyDataConnectionFailed(com.android.internal.telephony.Phone, java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void notifyServiceState(com.android.internal.telephony.Phone)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void notifySignalStrength(com.android.internal.telephony.Phone)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
			</class>
			<class name="IccProvider">
				<method signature="int delete(android.net.Uri, java.lang.String, java.lang.String[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_CONTACTS"/>
				<method signature="android.net.Uri insert(android.net.Uri, android.content.ContentValues)" static="false" return="track" param1="track" param2="track" permission="android.permission.WRITE_CONTACTS"/>
				<method signature="android.database.Cursor query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)" static="false" return="track" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.READ_CONTACTS"/>
				<method signature="int update(android.net.Uri, android.content.ContentValues, java.lang.String, java.lang.String[])" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="DataConnection$DcActivatingState">
				<method signature="void enter()" static="false" return="" permission="android.permission.GET_TASKS,android.permission.ACCESS_WIFI_STATE,android.permission.MODIFY_AUDIO_SETTINGS,android.permission.READ_PHONE_STATE,android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.VIBRATE,android.permission.BROADCAST_STICKY,android.permission.BLUETOOTH_ADMIN,android.permission.CHANGE_NETWORK_STATE,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="Call">
				<method signature="void hangup()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void hangupIfAlive()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="ServiceStateTracker">
				<method signature="void disableLocationUpdates()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void disableSingleLocationUpdate()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void enableLocationUpdates()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void enableSingleLocationUpdate()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void handlePollStateResult(int, android.os.AsyncResult)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.BROADCAST_STICKY,android.permission.VIBRATE,android.permission.SET_TIME_ZONE"/>
				<method signature="void hangupAndPowerOff()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void powerOffRadioSafely(com.android.internal.telephony.DataConnectionTracker)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="boolean processPendingRadioPowerOffAfterDataOff()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void reRegisterNetwork(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setPowerStateToDesired()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setRadioPower(boolean)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void updateSpnDisplay()" static="false" return="" permission="android.permission.BROADCAST_STICKY"/>
			</class>
			<class name="CommandsInterface">
				<method signature="void acceptCall(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void acknowledgeIncomingGsmSmsWithPdu(boolean, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void acknowledgeLastIncomingCdmaSms(boolean, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void acknowledgeLastIncomingGsmSms(boolean, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void cancelPendingUssd(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void changeBarringPassword(java.lang.String, java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void changeIccPin(java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void changeIccPin2(java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void changeIccPin2ForApp(java.lang.String, java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void changeIccPinForApp(java.lang.String, java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void conference(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void deactivateDataCall(int, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void deleteSmsOnRuim(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void deleteSmsOnSim(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void dial(java.lang.String, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void dial(java.lang.String, int, com.android.internal.telephony.UUSInfo, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void exitEmergencyCallbackMode(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void explicitCallTransfer(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getAvailableNetworks(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getBasebandVersion(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getCDMASubscription(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getCLIR(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getCdmaBroadcastConfig(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getCdmaSubscriptionSource(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getCurrentCalls(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getDataCallList(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getDataRegistrationState(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getDeviceIdentity(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getGsmBroadcastConfig(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getIMEI(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getIMEISV(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getIMSI(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getIMSIForApp(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getIccCardStatus(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getLastCallFailCause(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getLastDataCallFailCause(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getLastPdpFailCause(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getMute(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getNeighboringCids(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getNetworkSelectionMode(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getOperator(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getPDPContextList(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getPreferredNetworkType(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getPreferredVoicePrivacy(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getSignalStrength(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getSmscAddress(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getVoiceRadioTechnology(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void getVoiceRegistrationState(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void handleCallSetupRequestFromSim(boolean, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void hangupConnection(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void hangupForegroundResumeBackground(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void hangupWaitingOrBackground(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void iccIO(int, int, java.lang.String, int, int, int, java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" param7="track" param8="track" param9="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void iccIOForApp(int, int, java.lang.String, int, int, int, java.lang.String, java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" param7="track" param8="track" param9="track" param10="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void invokeOemRilRequestRaw(byte[], android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void invokeOemRilRequestStrings(java.lang.String[], android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void queryAvailableBandMode(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void queryCLIP(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void queryCallForwardStatus(int, int, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void queryCallWaiting(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void queryCdmaRoamingPreference(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void queryFacilityLock(java.lang.String, java.lang.String, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void queryFacilityLockForApp(java.lang.String, java.lang.String, int, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void queryTTYMode(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void rejectCall(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void reportSmsMemoryStatus(boolean, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void reportStkServiceIsRunning(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void requestIsimAuthentication(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void resetRadio(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void sendBurstDtmf(java.lang.String, int, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void sendCDMAFeatureCode(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void sendCdmaSms(byte[], android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void sendDtmf(char, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void sendEnvelope(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void sendEnvelopeWithStatus(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void sendSMS(java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void sendTerminalResponse(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void sendUSSD(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void separateConnection(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setBandMode(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setCLIR(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setCallForward(int, int, int, java.lang.String, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setCallWaiting(boolean, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setCdmaBroadcastActivation(boolean, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setCdmaBroadcastConfig(int[], android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setCdmaRoamingPreference(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setCdmaSubscriptionSource(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setCurrentPreferredNetworkType()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setFacilityLock(java.lang.String, boolean, java.lang.String, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setFacilityLockForApp(java.lang.String, boolean, java.lang.String, int, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setGsmBroadcastActivation(boolean, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setGsmBroadcastConfig(com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[], android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setLocationUpdates(boolean, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setMute(boolean, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setNetworkSelectionModeAutomatic(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setNetworkSelectionModeManual(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setPreferredNetworkType(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setPreferredVoicePrivacy(boolean, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setRadioPower(boolean, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setSmscAddress(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setSuppServiceNotifications(boolean, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setTTYMode(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void setupDataCall(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" param7="track" param8="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void startDtmf(char, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void stopDtmf(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void supplyIccPin(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void supplyIccPin2(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void supplyIccPin2ForApp(java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void supplyIccPinForApp(java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void supplyIccPuk(java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void supplyIccPuk2(java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void supplyIccPuk2ForApp(java.lang.String, java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void supplyIccPukForApp(java.lang.String, java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void supplyNetworkDepersonalization(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void switchWaitingOrHoldingAndActive(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void writeSmsToRuim(int, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void writeSmsToSim(int, java.lang.String, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="PhoneNotifier">
				<method signature="void notifyDataConnection(com.android.internal.telephony.Phone, java.lang.String, java.lang.String, com.android.internal.telephony.Phone$DataState)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void notifyDataConnectionFailed(com.android.internal.telephony.Phone, java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void notifyServiceState(com.android.internal.telephony.Phone)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void notifySignalStrength(com.android.internal.telephony.Phone)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
			</class>
			<class name="SMSDispatcher">
				<method signature="void acknowledgeLastIncomingSms(boolean, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void dispatch(android.content.Intent, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void dispatch(android.content.Intent, java.lang.String, android.content.BroadcastReceiver)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void dispatchBroadcastMessage(android.telephony.SmsCbMessage)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="int dispatchMessage(com.android.internal.telephony.SmsMessageBase)" static="false" return="" param1="track" permission="android.permission.READ_SMS,android.permission.SEND_SMS,android.permission.WRITE_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.WAKE_LOCK"/>
				<method signature="int dispatchNormalMessage(com.android.internal.telephony.SmsMessageBase)" static="false" return="" param1="track" permission="android.permission.READ_SMS,android.permission.SEND_SMS,android.permission.WRITE_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.WAKE_LOCK"/>
				<method signature="void dispatchPdus(byte[][])" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void dispatchPortAddressedPdus(byte[][], int)" static="false" return="" param1="track" param2="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="int processMessagePart(byte[], java.lang.String, int, int, int, long, int, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" param7="track" param8="track" permission="android.permission.READ_SMS,android.permission.SEND_SMS,android.permission.WRITE_SMS,android.permission.RECEIVE_SMS,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.WAKE_LOCK"/>
				<method signature="void sendRawPdu(byte[], byte[], android.app.PendingIntent, android.app.PendingIntent, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void sendSms(com.android.internal.telephony.SMSDispatcher$SmsTracker)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="ISms$Stub">
				<method signature="boolean copyMessageToIccEf(int, byte[], byte[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
				<method signature="boolean disableCellBroadcast(int)" static="false" return="" param1="track" permission="android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
				<method signature="boolean disableCellBroadcastRange(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
				<method signature="boolean enableCellBroadcast(int)" static="false" return="" param1="track" permission="android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
				<method signature="boolean enableCellBroadcastRange(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
				<method signature="java.util.List getAllMessagesFromIccEf()" static="false" return="track" permission="android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
				<method signature="void sendData(java.lang.String, java.lang.String, int, byte[], android.app.PendingIntent, android.app.PendingIntent)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.SEND_SMS"/>
				<method signature="void sendMultipartText(java.lang.String, java.lang.String, java.util.List, java.util.List, java.util.List)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.SEND_SMS"/>
				<method signature="void sendText(java.lang.String, java.lang.String, java.lang.String, android.app.PendingIntent, android.app.PendingIntent)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.SEND_SMS"/>
				<method signature="boolean updateMessageOnIccEf(int, int, byte[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
			</class>
			<class name="IccSmsInterfaceManager">
				<method signature="boolean copyMessageToIccEf(int, byte[], byte[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
				<method signature="boolean disableCellBroadcast(int)" static="false" return="" param1="track" permission="android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
				<method signature="boolean disableCellBroadcastRange(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
				<method signature="boolean enableCellBroadcast(int)" static="false" return="" param1="track" permission="android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
				<method signature="boolean enableCellBroadcastRange(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
				<method signature="void enforceReceiveAndSend(java.lang.String)" static="false" return="" param1="track" permission="android.permission.SEND_SMS,android.permission.RECEIVE_SMS"/>
				<method signature="java.util.List getAllMessagesFromIccEf()" static="false" return="track" permission="android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
				<method signature="void sendData(java.lang.String, java.lang.String, int, byte[], android.app.PendingIntent, android.app.PendingIntent)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.SEND_SMS"/>
				<method signature="void sendMultipartText(java.lang.String, java.lang.String, java.util.List, java.util.List, java.util.List)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.SEND_SMS"/>
				<method signature="void sendText(java.lang.String, java.lang.String, java.lang.String, android.app.PendingIntent, android.app.PendingIntent)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.SEND_SMS"/>
				<method signature="boolean updateMessageOnIccEf(int, int, byte[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
			</class>
			<class name="AdnRecordLoader">
				<method signature="void loadAllFromEF(int, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void loadFromEF(int, int, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void updateEF(com.android.internal.telephony.AdnRecord, int, int, int, java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="MmiCode">
				<method signature="void cancel()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="WapPushOverSms">
				<method signature="int dispatchWapPdu(byte[])" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="PhoneSubInfoProxy">
				<method signature="java.lang.String getDeviceId()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.lang.String getDeviceSvn()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.lang.String getIccSerialNumber()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.lang.String getLine1AlphaTag()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.lang.String getLine1Number()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.lang.String getMsisdn()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.lang.String getSubscriberId()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.lang.String getVoiceMailAlphaTag()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.lang.String getVoiceMailNumber()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.READ_PHONE_STATE"/>
			</class>
			<class name="CallerInfoAsyncQuery">
				<method signature="void addQueryListener(int, com.android.internal.telephony.CallerInfoAsyncQuery$OnQueryCompleteListener, java.lang.Object)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.READ_PHONE_STATE,android.permission.READ_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="com.android.internal.telephony.CallerInfoAsyncQuery startQuery(int, android.content.Context, java.lang.String, com.android.internal.telephony.CallerInfoAsyncQuery$OnQueryCompleteListener, java.lang.Object)" static="true" return="track" param0="track" param1="track" param2="track" param3="track" param4="track" permission="android.permission.READ_PHONE_STATE,android.permission.READ_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="IIccPhoneBook">
				<method signature="java.util.List getAdnRecordsInEf(int)" static="false" return="track" param1="track" permission="android.permission.READ_CONTACTS"/>
				<method signature="int[] getAdnRecordsSize(int)" static="false" return="track" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="boolean updateAdnRecordsInEfByIndex(int, java.lang.String, java.lang.String, int, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.WRITE_CONTACTS"/>
				<method signature="boolean updateAdnRecordsInEfBySearch(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.WRITE_CONTACTS"/>
			</class>
			<class name="IccPhoneBookInterfaceManager">
				<method signature="java.util.List getAdnRecordsInEf(int)" static="false" return="track" param1="track" permission="android.permission.READ_CONTACTS,android.permission.WAKE_LOCK"/>
				<method signature="int[] getAdnRecordsSize(int)" static="false" return="track" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.WAKE_LOCK"/>
				<method signature="boolean updateAdnRecordsInEfByIndex(int, java.lang.String, java.lang.String, int, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.WRITE_CONTACTS,android.permission.WAKE_LOCK"/>
				<method signature="boolean updateAdnRecordsInEfBySearch(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.WRITE_CONTACTS,android.permission.WAKE_LOCK"/>
			</class>
			<class name="IntRangeManager">
				<method signature="boolean finishUpdate()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="IPhoneSubInfo">
				<method signature="java.lang.String getDeviceId()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.lang.String getDeviceSvn()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.lang.String getIccSerialNumber()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.lang.String getLine1AlphaTag()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.lang.String getLine1Number()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.lang.String getMsisdn()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.lang.String getSubscriberId()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.lang.String getVoiceMailAlphaTag()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.lang.String getVoiceMailNumber()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
			</class>
			<class name="IPhoneSubInfo$Stub">
				<method signature="java.lang.String getDeviceId()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.lang.String getDeviceSvn()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.lang.String getIccSerialNumber()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.lang.String getLine1AlphaTag()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.lang.String getLine1Number()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.lang.String getMsisdn()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.lang.String getSubscriberId()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.lang.String getVoiceMailAlphaTag()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.lang.String getVoiceMailNumber()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.READ_PHONE_STATE"/>
			</class>
			<class name="CallTracker">
				<method signature="void handlePollCalls(android.os.AsyncResult)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="void handleRadioAvailable()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
				<method signature="void pollCallsWhenSafe()" static="false" return="" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="PhoneSubInfo">
				<method signature="java.lang.String getDeviceId()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.lang.String getDeviceSvn()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.lang.String getIccSerialNumber()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.lang.String getLine1AlphaTag()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.lang.String getLine1Number()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.lang.String getMsisdn()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.lang.String getSubscriberId()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.lang.String getVoiceMailAlphaTag()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.lang.String getVoiceMailNumber()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.READ_PHONE_STATE"/>
			</class>
			<class name="ITelephonyRegistry$Stub">
				<method signature="void listen(java.lang.String, com.android.internal.telephony.IPhoneStateListener, int, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.READ_PHONE_STATE,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void notifyDataConnection(int, boolean, java.lang.String, java.lang.String, java.lang.String, android.net.LinkProperties, android.net.LinkCapabilities, int, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" param7="track" param8="track" param9="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void notifyDataConnectionFailed(java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void notifyServiceState(android.telephony.ServiceState)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void notifySignalStrength(android.telephony.SignalStrength)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.READ_PHONE_STATE,android.permission.BROADCAST_STICKY,android.permission.ACCESS_COARSE_LOCATION"/>
			</class>
			<class name="ITelephonyRegistry">
				<method signature="void listen(java.lang.String, com.android.internal.telephony.IPhoneStateListener, int, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.READ_PHONE_STATE,android.permission.ACCESS_COARSE_LOCATION"/>
				<method signature="void notifyDataConnection(int, boolean, java.lang.String, java.lang.String, java.lang.String, android.net.LinkProperties, android.net.LinkCapabilities, int, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" param7="track" param8="track" param9="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void notifyDataConnectionFailed(java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void notifyServiceState(android.telephony.ServiceState)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void notifySignalStrength(android.telephony.SignalStrength)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
			</class>
			<class name="DataConnection">
				<method signature="void onConnect(com.android.internal.telephony.DataConnection$ConnectionParams)" static="false" return="" param1="track" permission="android.permission.WAKE_LOCK"/>
			</class>
			<class name="IIccPhoneBook$Stub">
				<method signature="java.util.List getAdnRecordsInEf(int)" static="false" return="track" param1="track" permission="android.permission.READ_CONTACTS,android.permission.WAKE_LOCK"/>
				<method signature="int[] getAdnRecordsSize(int)" static="false" return="track" param1="track" permission="android.permission.WAKE_LOCK"/>
				<method signature="boolean onTransact(int, android.os.Parcel, android.os.Parcel, int)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS,android.permission.WAKE_LOCK"/>
				<method signature="boolean updateAdnRecordsInEfByIndex(int, java.lang.String, java.lang.String, int, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.WRITE_CONTACTS,android.permission.WAKE_LOCK"/>
				<method signature="boolean updateAdnRecordsInEfBySearch(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.WRITE_CONTACTS,android.permission.WAKE_LOCK"/>
			</class>
			<class name="PhoneFactory">
				<method signature="com.android.internal.telephony.Phone getCdmaPhone()" static="true" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.Phone getGsmPhone()" static="true" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void makeDefaultPhone(android.content.Context)" static="true" return="" param0="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void makeDefaultPhones(android.content.Context)" static="true" return="" param0="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.SET_TIME_ZONE,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.sip.SipPhone makeSipPhone(java.lang.String)" static="true" return="track" param0="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
			</class>
			<class name="PhoneBase">
				<method signature="void &lt;init&gt;(com.android.internal.telephony.PhoneNotifier, android.content.Context, com.android.internal.telephony.CommandsInterface)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void &lt;init&gt;(com.android.internal.telephony.PhoneNotifier, android.content.Context, com.android.internal.telephony.CommandsInterface, boolean)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="int disableApnType(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void disableDnsCheck(boolean)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void dispose()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="int enableApnType(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void enableEnhancedVoicePrivacy(boolean, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void exitEmergencyCallbackMode()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getActiveApnHost(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String[] getActiveApnTypes()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean getCallForwardingIndicator()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.CallTracker getCallTracker()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="int getCdmaEriIconIndex()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="int getCdmaEriIconMode()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getCdmaEriText()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getCdmaMin()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getCdmaPrlVersion()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="android.content.Context getContext()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.Phone$DataState getDataConnectionState()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void getEnhancedVoicePrivacy(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="android.os.Handler getHandler()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.IccCard getIccCard()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.IccFileHandler getIccFileHandler()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean getIccRecordsLoaded()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getIccSerialNumber()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.ims.IsimRecords getIsimRecords()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="android.net.LinkCapabilities getLinkCapabilities(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="android.net.LinkProperties getLinkProperties(java.lang.String)" static="false" return="track" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="int getLteOnCdmaMode()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean getMessageWaitingIndicator()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getMsisdn()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="java.lang.String getPhoneName()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="int getPhoneType()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void getPreferredNetworkType(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.ServiceStateTracker getServiceStateTracker()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.test.SimulatedRadioControl getSimulatedRadioControl()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void getSmscAddress(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.Phone$State getState()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean getUnitTestMode()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="com.android.internal.telephony.gsm.UsimServiceTable getUsimServiceTable()" static="false" return="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="int getVoiceMessageCount()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void handleMessage(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void invokeOemRilRequestRaw(byte[], android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void invokeOemRilRequestStrings(java.lang.String[], android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean isCspPlmnEnabled()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean isDataConnectivityPossible()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean isDataConnectivityPossible(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean isDnsCheckDisabled()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean isInEcm()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean isInEmergencyCall()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean isMinInfoReady()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean isOtaSpNumber(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="boolean needsOtaServiceProvisioning()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void notifyCallForwardingIndicator()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void notifyDataActivity()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void notifyDataConnection(java.lang.String)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void notifyDataConnection(java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void notifyDataConnection(java.lang.String, java.lang.String, com.android.internal.telephony.Phone$DataState)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void notifyDataConnectionFailed(java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void notifyMessageWaitingIndicator()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void notifyOtaspChanged(int)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void notifyServiceStateChangedP(android.telephony.ServiceState)" static="false" return="" param1="track" permission="android.permission.BROADCAST_STICKY"/>
				<method signature="void queryAvailableBandMode(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void queryCdmaRoamingPreference(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void queryTTYMode(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void registerFoT53ClirlInfo(android.os.Handler, int, java.lang.Object)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void registerForCallWaiting(android.os.Handler, int, java.lang.Object)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void registerForCdmaOtaStatusChange(android.os.Handler, int, java.lang.Object)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void registerForDisconnect(android.os.Handler, int, java.lang.Object)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void registerForDisplayInfo(android.os.Handler, int, java.lang.Object)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void registerForEcmTimerReset(android.os.Handler, int, java.lang.Object)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void registerForInCallVoicePrivacyOff(android.os.Handler, int, java.lang.Object)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void registerForInCallVoicePrivacyOn(android.os.Handler, int, java.lang.Object)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void registerForIncomingRing(android.os.Handler, int, java.lang.Object)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void registerForLineControlInfo(android.os.Handler, int, java.lang.Object)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void registerForMmiComplete(android.os.Handler, int, java.lang.Object)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void registerForMmiInitiate(android.os.Handler, int, java.lang.Object)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void registerForNewRingingConnection(android.os.Handler, int, java.lang.Object)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void registerForNumberInfo(android.os.Handler, int, java.lang.Object)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void registerForPreciseCallStateChanged(android.os.Handler, int, java.lang.Object)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void registerForRedirectedNumberInfo(android.os.Handler, int, java.lang.Object)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void registerForResendIncallMute(android.os.Handler, int, java.lang.Object)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void registerForRingbackTone(android.os.Handler, int, java.lang.Object)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void registerForServiceStateChanged(android.os.Handler, int, java.lang.Object)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void registerForSignalInfo(android.os.Handler, int, java.lang.Object)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void registerForSubscriptionInfoReady(android.os.Handler, int, java.lang.Object)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void registerForSuppServiceFailed(android.os.Handler, int, java.lang.Object)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void registerForT53AudioControlInfo(android.os.Handler, int, java.lang.Object)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void registerForUnknownConnection(android.os.Handler, int, java.lang.Object)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void removeReferences()" static="false" return="" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void requestIsimAuthentication(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void restoreSavedNetworkSelection(android.os.Message)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void sendBurstDtmf(java.lang.String, int, int, android.os.Message)" static="false" return="" param1="track" param2="track" param3="track" param4="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setBandMode(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setCdmaRoamingPreference(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setCdmaSubscription(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setEchoSuppressionEnabled(boolean)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setOnEcbModeExitResponse(android.os.Handler, int, java.lang.Object)" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setPreferredNetworkType(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setSmscAddress(java.lang.String, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setSystemProperty(java.lang.String, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setTTYMode(int, android.os.Message)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setUnitTestMode(boolean)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void setVoiceMessageWaiting(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.WAKE_LOCK,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void unregisterForCallWaiting(android.os.Handler)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void unregisterForCdmaOtaStatusChange(android.os.Handler)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void unregisterForDisconnect(android.os.Handler)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void unregisterForDisplayInfo(android.os.Handler)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void unregisterForEcmTimerReset(android.os.Handler)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void unregisterForInCallVoicePrivacyOff(android.os.Handler)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void unregisterForInCallVoicePrivacyOn(android.os.Handler)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void unregisterForIncomingRing(android.os.Handler)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void unregisterForLineControlInfo(android.os.Handler)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void unregisterForMmiComplete(android.os.Handler)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void unregisterForMmiInitiate(android.os.Handler)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void unregisterForNewRingingConnection(android.os.Handler)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void unregisterForNumberInfo(android.os.Handler)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void unregisterForPreciseCallStateChanged(android.os.Handler)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void unregisterForRedirectedNumberInfo(android.os.Handler)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void unregisterForResendIncallMute(android.os.Handler)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void unregisterForRingbackTone(android.os.Handler)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void unregisterForServiceStateChanged(android.os.Handler)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void unregisterForSignalInfo(android.os.Handler)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void unregisterForSubscriptionInfoReady(android.os.Handler)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void unregisterForSuppServiceFailed(android.os.Handler)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void unregisterForT53AudioControlInfo(android.os.Handler)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void unregisterForT53ClirInfo(android.os.Handler)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void unregisterForUnknownConnection(android.os.Handler)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
				<method signature="void unsetOnEcbModeExitResponse(android.os.Handler)" static="false" return="" param1="track" permission="android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.CHANGE_CONFIGURATION"/>
			</class>
			<class name="ISms">
				<method signature="boolean copyMessageToIccEf(int, byte[], byte[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
				<method signature="boolean disableCellBroadcast(int)" static="false" return="" param1="track" permission="android.permission.RECEIVE_SMS"/>
				<method signature="boolean disableCellBroadcastRange(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
				<method signature="boolean enableCellBroadcast(int)" static="false" return="" param1="track" permission="android.permission.RECEIVE_SMS"/>
				<method signature="boolean enableCellBroadcastRange(int, int)" static="false" return="" param1="track" param2="track" permission="android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
				<method signature="java.util.List getAllMessagesFromIccEf()" static="false" return="track" permission="android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
				<method signature="void sendData(java.lang.String, java.lang.String, int, byte[], android.app.PendingIntent, android.app.PendingIntent)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" param6="track" permission="android.permission.SEND_SMS"/>
				<method signature="void sendMultipartText(java.lang.String, java.lang.String, java.util.List, java.util.List, java.util.List)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.SEND_SMS"/>
				<method signature="void sendText(java.lang.String, java.lang.String, java.lang.String, android.app.PendingIntent, android.app.PendingIntent)" static="false" return="" param1="track" param2="track" param3="track" param4="track" param5="track" permission="android.permission.SEND_SMS"/>
				<method signature="boolean updateMessageOnIccEf(int, int, byte[])" static="false" return="" param1="track" param2="track" param3="track" permission="android.permission.SEND_SMS,android.permission.RECEIVE_SMS,android.permission.WAKE_LOCK"/>
			</class>
			<class name="CallerInfo">
				<method signature="com.android.internal.telephony.CallerInfo doSecondaryLookupIfNecessary(android.content.Context, java.lang.String, com.android.internal.telephony.CallerInfo)" static="true" return="track" param0="track" param1="track" param2="track" permission="android.permission.READ_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="java.lang.String getCallerId(android.content.Context, java.lang.String)" static="true" return="track" param0="track" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.READ_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="com.android.internal.telephony.CallerInfo getCallerInfo(android.content.Context, java.lang.String)" static="true" return="track" param0="track" param1="track" permission="android.permission.READ_PHONE_STATE,android.permission.READ_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="boolean isEmergencyNumber()" static="false" return="" permission="android.permission.READ_PHONE_STATE,android.permission.READ_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="boolean isVoiceMailNumber()" static="false" return="" permission="android.permission.READ_PHONE_STATE,android.permission.READ_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="com.android.internal.telephony.CallerInfo markAsVoiceMail()" static="false" return="track" permission="android.permission.READ_PHONE_STATE"/>
				<method signature="java.lang.String toString()" static="false" return="track" permission="android.permission.READ_PHONE_STATE,android.permission.READ_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
				<method signature="void updateGeoDescription(android.content.Context, java.lang.String)" static="false" return="" param1="track" param2="track" permission="android.permission.READ_PHONE_STATE,android.permission.READ_SOCIAL_STREAM,android.permission.READ_CONTACTS,android.permission.WRITE_CONTACTS"/>
			</class>
		</package>
		<package name="android.drm">
			<class name="DrmManagerClient">
				<method signature="void setOnErrorListener(android.drm.DrmManagerClient$OnErrorListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnEventListener(android.drm.DrmManagerClient$OnEventListener)" static="false" param1="listener" permission=""/>
				<method signature="void setOnInfoListener(android.drm.DrmManagerClient$OnInfoListener)" static="false" param1="listener" permission=""/>
			</class>
		</package>
		<package name="com.android.internal.telephony.cat">
			<class name="RilMessageDecoder$StateCmdParamsReady">
				<method signature="void enter()" static="false" return="" permission="android.permission.GET_TASKS,android.permission.ACCESS_WIFI_STATE,android.permission.MODIFY_AUDIO_SETTINGS,android.permission.READ_PHONE_STATE,android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.VIBRATE,android.permission.BROADCAST_STICKY,android.permission.BLUETOOTH_ADMIN,android.permission.CHANGE_NETWORK_STATE,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
			<class name="RilMessageDecoder$StateStart">
				<method signature="void enter()" static="false" return="" permission="android.permission.GET_TASKS,android.permission.ACCESS_WIFI_STATE,android.permission.MODIFY_AUDIO_SETTINGS,android.permission.READ_PHONE_STATE,android.permission.BLUETOOTH,android.permission.WRITE_SETTINGS,android.permission.CHANGE_WIFI_STATE,android.permission.VIBRATE,android.permission.BROADCAST_STICKY,android.permission.BLUETOOTH_ADMIN,android.permission.CHANGE_NETWORK_STATE,android.permission.ACCESS_NETWORK_STATE,android.permission.WAKE_LOCK"/>
				<method signature="void exit()" static="false" return="" permission="android.permission.BLUETOOTH,android.permission.CHANGE_WIFI_STATE,android.permission.BROADCAST_STICKY,android.permission.CHANGE_NETWORK_STATE,android.permission.BLUETOOTH_ADMIN,android.permission.WAKE_LOCK,android.permission.ACCESS_NETWORK_STATE"/>
			</class>
		</package>
		<package name="android.inputmethodservice">
			<class name="AbstractInputMethodService$AbstractInputMethodSessionImpl">
				<method signature="void dispatchKeyEvent(int, android.view.KeyEvent, android.view.inputmethod.InputMethodSession$EventCallback)" static="false" param1="" param2="" param3="listener" permission=""/>
				<method signature="void dispatchTrackballEvent(int, android.view.MotionEvent, android.view.inputmethod.InputMethodSession$EventCallback)" static="false" param1="" param2="" param3="listener" permission=""/>
			</class>
			<class name="AbstractInputMethodService$AbstractInputMethodImpl">
				<method signature="void createSession(android.view.inputmethod.InputMethod$SessionCallback)" static="false" param1="listener" permission=""/>
			</class>
			<class name="KeyboardView">
				<method signature="boolean onHoverEvent(android.view.MotionEvent)" static="false" return="" param1="track" permission="android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean onLongPress(android.inputmethodservice.Keyboard$Key)" static="false" return="" param1="track" permission="android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="boolean onTouchEvent(android.view.MotionEvent)" static="false" return="" param1="track" permission="android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void setKeyboard(android.inputmethodservice.Keyboard)" static="false" return="" param1="track" permission="android.permission.MODIFY_AUDIO_SETTINGS"/>
				<method signature="void setOnKeyboardActionListener(android.inputmethodservice.KeyboardView$OnKeyboardActionListener)" static="false" param1="listener" permission=""/>
			</class>
			<class name="ExtractEditLayout">
				<method signature="android.view.ActionMode startActionModeForChild(android.view.View, android.view.ActionMode$Callback)" static="false" param1="" param2="listener" permission=""/>
			</class>
		</package>
	</class-loader>
</api-spec>